{"name":"Lean.Compiler.LCNF.ElimDead","instances":[],"imports":["Init","Lean.Compiler.LCNF.CompilerM"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/ElimDead.lean#L96-L97","name":"Lean.Compiler.LCNF.Decl.elimDead","kind":"def","docLink":"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.Decl.elimDead","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/ElimDead.lean#L93-L94","name":"Lean.Compiler.LCNF.Code.elimDead","kind":"def","docLink":"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.Code.elimDead","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/ElimDead.lean#L62-L87","name":"Lean.Compiler.LCNF.ElimDead.elimDead","kind":"opaque","docLink":"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.ElimDead.elimDead","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/ElimDead.lean#L58-L60","name":"Lean.Compiler.LCNF.ElimDead.visitFunDecl","kind":"opaque","docLink":"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.ElimDead.visitFunDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/ElimDead.lean#L46-L46","name":"Lean.Compiler.LCNF.ElimDead.M","kind":"def","docLink":"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.ElimDead.M","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/ElimDead.lean#L37-L42","name":"Lean.Compiler.LCNF.collectLocalDeclsLetValue","kind":"def","docLink":"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.collectLocalDeclsLetValue","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/ElimDead.lean#L34-L35","name":"Lean.Compiler.LCNF.collectLocalDeclsArgs","kind":"def","docLink":"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.collectLocalDeclsArgs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/ElimDead.lean#L28-L32","name":"Lean.Compiler.LCNF.collectLocalDeclsArg","kind":"def","docLink":"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.collectLocalDeclsArg","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/ElimDead.lean#L19-L26","name":"Lean.Compiler.LCNF.collectLocalDeclsType.go","kind":"def","docLink":"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.collectLocalDeclsType.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/ElimDead.lean#L16-L26","name":"Lean.Compiler.LCNF.collectLocalDeclsType","kind":"def","docLink":"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.collectLocalDeclsType","doc":"Collect set of (let) free variables in a LCNF value.\nThis code exploits the LCNF property that local declarations do not occur in types.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/ElimDead.lean#L10-L10","name":"Lean.Compiler.LCNF.UsedLocalDecls","kind":"def","docLink":"./Lean/Compiler/LCNF/ElimDead.html#Lean.Compiler.LCNF.UsedLocalDecls","doc":""}]}