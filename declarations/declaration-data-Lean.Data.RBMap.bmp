{"name":"Lean.Data.RBMap","instances":[{"typeNames":["Lean.RBNode"],"name":"Lean.RBNode.instEmptyCollectionRBNode","className":"EmptyCollection"},{"typeNames":["Lean.RBMap"],"name":"Lean.instEmptyCollectionRBMap","className":"EmptyCollection"},{"typeNames":["Lean.RBMap"],"name":"Lean.instInhabitedRBMap","className":"Inhabited"},{"typeNames":["Lean.RBMap","Prod"],"name":"Lean.RBMap.instForInRBMapProd","className":"ForIn"},{"typeNames":["Lean.RBMap"],"name":"Lean.RBMap.instReprRBMap","className":"Repr"}],"imports":["Init"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L393-L394","name":"Lean.rbmapOf","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.rbmapOf","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L385-L389","name":"Lean.RBMap.intersectBy","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBMap.intersectBy","doc":"Intersects the maps `t₁` and `t₂` using `mergeFn a b₁ b₂` to produce the new value. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L377-L382","name":"Lean.RBMap.mergeBy","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBMap.mergeBy","doc":"Merges the maps `t₁` and `t₂`, if a key `a : α` exists in both,\nthen use `mergeFn a b₁ b₂` to produce the new merged value. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L370-L373","name":"Lean.RBMap.find!","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBMap.find!","doc":"Attempts to find the value with key `k : α` in `t` and panics if there is no such key. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L364-L367","name":"Lean.RBMap.max!","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBMap.max!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L359-L362","name":"Lean.RBMap.min!","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBMap.min!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L356-L357","name":"Lean.RBMap.maxDepth","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBMap.maxDepth","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L353-L354","name":"Lean.RBMap.size","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBMap.size","doc":"The number of items in the RBMap. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L349-L350","name":"Lean.RBMap.any","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBMap.any","doc":"Returns true if the given predicate is true for any item in the RBMap. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L345-L346","name":"Lean.RBMap.all","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBMap.all","doc":"Returns true if the given predicate is true for all items in the RBMap. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L341-L342","name":"Lean.RBMap.fromArray","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBMap.fromArray","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L338-L339","name":"Lean.RBMap.fromList","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBMap.fromList","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L335-L336","name":"Lean.RBMap.contains","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBMap.contains","doc":"Returns true if the given key `a` is in the RBMap. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L331-L332","name":"Lean.RBMap.lowerBound","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBMap.lowerBound","doc":"(lowerBound k) retrieves the kv pair of the largest key smaller than or equal to `k`,\nif it exists. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L326-L327","name":"Lean.RBMap.findD","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBMap.findD","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L323-L324","name":"Lean.RBMap.find?","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBMap.find?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L320-L321","name":"Lean.RBMap.findCore?","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBMap.findCore?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L316-L318","name":"Lean.RBMap.ofList","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBMap.ofList","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L313-L314","name":"Lean.RBMap.erase","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBMap.erase","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L310-L311","name":"Lean.RBMap.insert","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBMap.insert","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L307-L308","name":"Lean.RBMap.instReprRBMap","kind":"instance","docLink":"./Lean/Data/RBMap.html#Lean.RBMap.instReprRBMap","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L301-L305","name":"Lean.RBMap.max","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBMap.max","doc":"Returns the kv pair `(a,b)` such that `a ≥ k` for all keys in the RBMap. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L294-L298","name":"Lean.RBMap.min","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBMap.min","doc":"Returns the kv pair `(a,b)` such that `a ≤ k` for all keys in the RBMap. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L290-L291","name":"Lean.RBMap.toList","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBMap.toList","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L286-L288","name":"Lean.RBMap.isEmpty","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBMap.isEmpty","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L283-L284","name":"Lean.RBMap.instForInRBMapProd","kind":"instance","docLink":"./Lean/Data/RBMap.html#Lean.RBMap.instForInRBMapProd","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L280-L281","name":"Lean.RBMap.forIn","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBMap.forIn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L277-L278","name":"Lean.RBMap.forM","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBMap.forM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L274-L275","name":"Lean.RBMap.foldM","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBMap.foldM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L271-L272","name":"Lean.RBMap.revFold","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBMap.revFold","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L268-L269","name":"Lean.RBMap.fold","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBMap.fold","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L265-L266","name":"Lean.RBMap.depth","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBMap.depth","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L260-L260","name":"Lean.instInhabitedRBMap","kind":"instance","docLink":"./Lean/Data/RBMap.html#Lean.instInhabitedRBMap","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L257-L258","name":"Lean.instEmptyCollectionRBMap","kind":"instance","docLink":"./Lean/Data/RBMap.html#Lean.instEmptyCollectionRBMap","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L254-L255","name":"Lean.RBMap.empty","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBMap.empty","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L251-L252","name":"Lean.mkRBMap","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.mkRBMap","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L248-L249","name":"Lean.RBMap","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBMap","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L240-L240","name":"Lean.RBNode.instEmptyCollectionRBNode","kind":"instance","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.instEmptyCollectionRBNode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L237-L238","name":"Lean.RBNode.toArray","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.toArray","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L229-L233","name":"Lean.RBNode.map","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.map","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L222-L227","name":"Lean.RBNode.mapM","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.mapM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L218-L218","name":"Lean.RBNode.WellFormed.eraseWff","kind":"ctor","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.WellFormed.eraseWff","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L217-L217","name":"Lean.RBNode.WellFormed.insertWff","kind":"ctor","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.WellFormed.insertWff","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L216-L216","name":"Lean.RBNode.WellFormed.leafWff","kind":"ctor","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.WellFormed.leafWff","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L215-L218","name":"Lean.RBNode.WellFormed","kind":"inductive","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.WellFormed","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L205-L211","name":"Lean.RBNode.lowerBound","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.lowerBound","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L197-L203","name":"Lean.RBNode.find","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.find","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L189-L195","name":"Lean.RBNode.findCore","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.findCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L180-L182","name":"Lean.RBNode.erase","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.erase","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L168-L178","name":"Lean.RBNode.del","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.del","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L149-L162","name":"Lean.RBNode.appendTrees","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.appendTrees","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L145-L147","name":"Lean.RBNode.size","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.size","doc":"The number of nodes in the tree. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L136-L142","name":"Lean.RBNode.balRight","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.balRight","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L130-L134","name":"Lean.RBNode.balLeft","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.balLeft","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L126-L128","name":"Lean.RBNode.setRed","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.setRed","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L120-L122","name":"Lean.RBNode.insert","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.insert","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L116-L118","name":"Lean.RBNode.setBlack","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.setBlack","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L103-L114","name":"Lean.RBNode.ins","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.ins","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L95-L97","name":"Lean.RBNode.isBlack","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.isBlack","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L91-L93","name":"Lean.RBNode.isRed","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.isRed","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L86-L89","name":"Lean.RBNode.balance2","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.balance2","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L80-L83","name":"Lean.RBNode.balance1","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.balance1","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L76-L77","name":"Lean.RBNode.singleton","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.singleton","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L72-L74","name":"Lean.RBNode.any","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.any","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L68-L70","name":"Lean.RBNode.all","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.all","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L64-L66","name":"Lean.RBNode.revFold","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.revFold","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L51-L59","name":"Lean.RBNode.forIn.visit","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.forIn.visit","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L50-L62","name":"Lean.RBNode.forIn","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.forIn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L43-L48","name":"Lean.RBNode.foldM","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.foldM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L39-L41","name":"Lean.RBNode.forM","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.forM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L35-L37","name":"Lean.RBNode.fold","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.fold","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L30-L33","name":"Lean.RBNode.max","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.max","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L25-L28","name":"Lean.RBNode.min","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.min","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L21-L23","name":"Lean.RBNode.depth","kind":"def","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.depth","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L14-L14","name":"Lean.RBNode.node","kind":"ctor","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.node","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L13-L13","name":"Lean.RBNode.leaf","kind":"ctor","docLink":"./Lean/Data/RBMap.html#Lean.RBNode.leaf","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L12-L14","name":"Lean.RBNode","kind":"inductive","docLink":"./Lean/Data/RBMap.html#Lean.RBNode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L10-L10","name":"Lean.RBColor.black","kind":"ctor","docLink":"./Lean/Data/RBMap.html#Lean.RBColor.black","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L10-L10","name":"Lean.RBColor.red","kind":"ctor","docLink":"./Lean/Data/RBMap.html#Lean.RBColor.red","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Data/RBMap.lean#L9-L10","name":"Lean.RBColor","kind":"inductive","docLink":"./Lean/Data/RBMap.html#Lean.RBColor","doc":""}]}