{"name":"Lean.Elab.Arg","instances":[{"typeNames":["Lean.Elab.Term.Arg"],"name":"Lean.Elab.Term.instInhabitedArg","className":"Inhabited"},{"typeNames":["Lean.Elab.Term.NamedArg"],"name":"Lean.Elab.Term.instInhabitedNamedArg","className":"Inhabited"}],"imports":["Init","Lean.Elab.Term"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Arg.lean#L54-L56","name":"Lean.Elab.Term.expandApp","kind":"def","docLink":"./Lean/Elab/Arg.html#Lean.Elab.Term.expandApp","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Arg.lean#L33-L52","name":"Lean.Elab.Term.expandArgs","kind":"def","docLink":"./Lean/Elab/Arg.html#Lean.Elab.Term.expandArgs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Arg.lean#L28-L31","name":"Lean.Elab.Term.addNamedArg","kind":"def","docLink":"./Lean/Elab/Arg.html#Lean.Elab.Term.addNamedArg","doc":"Add a new named argument to `namedArgs`, and throw an error if it already contains a named argument\nwith the same name. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Arg.lean#L23-L23","name":"Lean.Elab.Term.instInhabitedNamedArg","kind":"instance","docLink":"./Lean/Elab/Arg.html#Lean.Elab.Term.instInhabitedNamedArg","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Arg.lean#L22-L22","name":"Lean.Elab.Term.NamedArg.val","kind":"def","docLink":"./Lean/Elab/Arg.html#Lean.Elab.Term.NamedArg.val","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Arg.lean#L21-L21","name":"Lean.Elab.Term.NamedArg.name","kind":"def","docLink":"./Lean/Elab/Arg.html#Lean.Elab.Term.NamedArg.name","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Arg.lean#L20-L20","name":"Lean.Elab.Term.NamedArg.ref","kind":"def","docLink":"./Lean/Elab/Arg.html#Lean.Elab.Term.NamedArg.ref","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Arg.lean#L19-L23","name":"Lean.Elab.Term.NamedArg","kind":"structure","docLink":"./Lean/Elab/Arg.html#Lean.Elab.Term.NamedArg","doc":"Named arguments created using the notation `(x := val)` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Arg.lean#L16-L16","name":"Lean.Elab.Term.instInhabitedArg","kind":"instance","docLink":"./Lean/Elab/Arg.html#Lean.Elab.Term.instInhabitedArg","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Arg.lean#L15-L15","name":"Lean.Elab.Term.Arg.expr","kind":"ctor","docLink":"./Lean/Elab/Arg.html#Lean.Elab.Term.Arg.expr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Arg.lean#L14-L14","name":"Lean.Elab.Term.Arg.stx","kind":"ctor","docLink":"./Lean/Elab/Arg.html#Lean.Elab.Term.Arg.stx","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Arg.lean#L13-L16","name":"Lean.Elab.Term.Arg","kind":"inductive","docLink":"./Lean/Elab/Arg.html#Lean.Elab.Term.Arg","doc":"Auxiliary inductive datatype for combining unelaborated syntax\nand already elaborated expressions. It is used to elaborate applications. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Arg.lean#L1-L1","name":"Lean.Elab.Term.NamedArg.mk","kind":"ctor","docLink":"./Lean/Elab/Arg.html#Lean.Elab.Term.NamedArg.mk","doc":""}]}