{"name":"Lean.ParserCompiler","instances":[],"imports":["Init","Lean.Meta.ReduceEval","Lean.KeyedDeclsAttribute","Lean.ParserCompiler.Attribute","Lean.Parser.Extension"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/ParserCompiler.lean#L144-L156","name":"Lean.ParserCompiler.registerParserCompiler","kind":"def","docLink":"./Lean/ParserCompiler.html#Lean.ParserCompiler.registerParserCompiler","doc":"Precondition: `Î±` must match `ctx.tyName`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/ParserCompiler.lean#L129-L141","name":"Lean.ParserCompiler.compileEmbeddedParsers","kind":"def","docLink":"./Lean/ParserCompiler.html#Lean.ParserCompiler.compileEmbeddedParsers","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/ParserCompiler.lean#L59-L125","name":"Lean.ParserCompiler.compileParserExpr","kind":"opaque","docLink":"./Lean/ParserCompiler.html#Lean.ParserCompiler.compileParserExpr","doc":"Translate an expression of type `Parser` into one of type `tyName`, tagging intermediary constants with\n`ctx.combinatorAttr`. If `force` is `false`, refuse to do so for imported constants. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/ParserCompiler.lean#L34-L50","name":"Lean.ParserCompiler.parserNodeKind?","kind":"opaque","docLink":"./Lean/ParserCompiler.html#Lean.ParserCompiler.parserNodeKind?","doc":"Takes an expression of type `Parser`, and determines the syntax kind of the root node it produces. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/ParserCompiler.lean#L26-L30","name":"Lean.ParserCompiler.replaceParserTy","kind":"def","docLink":"./Lean/ParserCompiler.html#Lean.ParserCompiler.replaceParserTy","doc":"Replace all references of `Parser` with `tyName` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/ParserCompiler.lean#L23-L23","name":"Lean.ParserCompiler.Context.tyName","kind":"def","docLink":"./Lean/ParserCompiler.html#Lean.ParserCompiler.Context.tyName","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/ParserCompiler.lean#L21-L21","name":"Lean.ParserCompiler.Context.combinatorAttr","kind":"def","docLink":"./Lean/ParserCompiler.html#Lean.ParserCompiler.Context.combinatorAttr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/ParserCompiler.lean#L20-L20","name":"Lean.ParserCompiler.Context.categoryAttr","kind":"def","docLink":"./Lean/ParserCompiler.html#Lean.ParserCompiler.Context.categoryAttr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/ParserCompiler.lean#L19-L19","name":"Lean.ParserCompiler.Context.varName","kind":"def","docLink":"./Lean/ParserCompiler.html#Lean.ParserCompiler.Context.varName","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/ParserCompiler.lean#L18-L18","name":"Lean.ParserCompiler.Context.mk","kind":"ctor","docLink":"./Lean/ParserCompiler.html#Lean.ParserCompiler.Context.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/ParserCompiler.lean#L18-L21","name":"Lean.ParserCompiler.Context","kind":"structure","docLink":"./Lean/ParserCompiler.html#Lean.ParserCompiler.Context","doc":""}]}