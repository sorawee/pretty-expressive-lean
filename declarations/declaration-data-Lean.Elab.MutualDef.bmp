{"name":"Lean.Elab.MutualDef","instances":[{"typeNames":["Lean.Elab.DefViewElabHeader"],"name":"Lean.Elab.instInhabitedDefViewElabHeader","className":"Inhabited"}],"imports":["Init","Lean.Parser.Term","Lean.Meta.Closure","Lean.Meta.Check","Lean.Meta.Transform","Lean.PrettyPrinter.Delaborator.Options","Lean.Elab.Command","Lean.Elab.Match","Lean.Elab.DefView","Lean.Elab.Deriving.Basic","Lean.Elab.PreDefinition.Main","Lean.Elab.DeclarationRange"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L822-L828","name":"Lean.Elab.Command.elabMutualDef","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Command.elabMutualDef","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L810-L817","name":"Lean.Elab.Term.elabMutualDef.processDeriving","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.elabMutualDef.processDeriving","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L777-L808","name":"Lean.Elab.Term.elabMutualDef.go","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.elabMutualDef.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L768-L817","name":"Lean.Elab.Term.elabMutualDef","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.elabMutualDef","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L753-L763","name":"Lean.Elab.Term.checkForHiddenUnivLevels.visit","kind":"opaque","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.checkForHiddenUnivLevels.visit","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L743-L752","name":"Lean.Elab.Term.checkForHiddenUnivLevels.visitLevel","kind":"opaque","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.checkForHiddenUnivLevels.visitLevel","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L729-L766","name":"Lean.Elab.Term.checkForHiddenUnivLevels","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.checkForHiddenUnivLevels","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L677-L703","name":"Lean.Elab.Term.MutualClosure.main","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.main","doc":"- `sectionVars`:   The section variables used in the `mutual` block.\n- `mainHeaders`:   The elaborated header of the top-level definitions being defined by the mutual block.\n- `mainFVars`:     The auxiliary variables used to represent the top-level definitions being defined by the mutual block.\n- `mainVals`:      The elaborated value for the top-level definitions\n- `letRecsToLift`: The let-rec's definitions that need to be lifted\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L664-L668","name":"Lean.Elab.Term.MutualClosure.getModifiersForLetRecs","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.getModifiersForLetRecs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L660-L662","name":"Lean.Elab.Term.MutualClosure.getKindForLetRecs","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.getKindForLetRecs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L642-L658","name":"Lean.Elab.Term.MutualClosure.pushLetRecs","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.pushLetRecs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L627-L640","name":"Lean.Elab.Term.MutualClosure.pushMain","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.pushMain","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L620-L625","name":"Lean.Elab.Term.MutualClosure.Replacement.apply","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.Replacement.apply","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L616-L618","name":"Lean.Elab.Term.MutualClosure.insertReplacementForLetRecs","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.insertReplacementForLetRecs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L611-L613","name":"Lean.Elab.Term.MutualClosure.insertReplacementForMainFns","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.insertReplacementForMainFns","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L609-L609","name":"Lean.Elab.Term.MutualClosure.Replacement","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.Replacement","doc":"Mapping from FVarId of mutually recursive functions being defined to \"closure\" expression. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L552-L552","name":"Lean.Elab.Term.MutualClosure.LetRecClosure.toLift","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure.toLift","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L551-L551","name":"Lean.Elab.Term.MutualClosure.LetRecClosure.closed","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure.closed","doc":"Expression used to replace occurrences of the let-rec `FVarId`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L549-L549","name":"Lean.Elab.Term.MutualClosure.LetRecClosure.localDecls","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure.localDecls","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L548-L548","name":"Lean.Elab.Term.MutualClosure.LetRecClosure.ref","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure.ref","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L547-L552","name":"Lean.Elab.Term.MutualClosure.LetRecClosure","kind":"structure","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L483-L483","name":"Lean.Elab.Term.MutualClosure.ClosureState.exprArgs","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState.exprArgs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L482-L482","name":"Lean.Elab.Term.MutualClosure.ClosureState.newLetDecls","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState.newLetDecls","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L481-L481","name":"Lean.Elab.Term.MutualClosure.ClosureState.localDecls","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState.localDecls","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L480-L480","name":"Lean.Elab.Term.MutualClosure.ClosureState.newLocalDecls","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState.newLocalDecls","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L479-L483","name":"Lean.Elab.Term.MutualClosure.ClosureState","kind":"structure","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L459-L459","name":"Lean.Elab.Term.MutualClosure.FreeVarMap","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FreeVarMap","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L453-L455","name":"Lean.Elab.Term.MutualClosure.FixPoint.run","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.run","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L411-L411","name":"Lean.Elab.Term.MutualClosure.FixPoint.M","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.M","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L409-L409","name":"Lean.Elab.Term.MutualClosure.FixPoint.State.modified","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State.modified","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L408-L408","name":"Lean.Elab.Term.MutualClosure.FixPoint.State.usedFVarsMap","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State.usedFVarsMap","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L407-L409","name":"Lean.Elab.Term.MutualClosure.FixPoint.State","kind":"structure","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L317-L317","name":"Lean.Elab.Term.MutualClosure.UsedFVarsMap","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.UsedFVarsMap","doc":"A mapping from FVarId to Set of FVarIds. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L43-L43","name":"Lean.Elab.instInhabitedDefViewElabHeader","kind":"instance","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.instInhabitedDefViewElabHeader","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L42-L42","name":"Lean.Elab.DefViewElabHeader.valueStx","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.valueStx","doc":"`Syntax` object the body/value of the definition. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L40-L40","name":"Lean.Elab.DefViewElabHeader.type","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.type","doc":"Type including parameters. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L38-L38","name":"Lean.Elab.DefViewElabHeader.numParams","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.numParams","doc":"Number of parameters before `:`, it also includes auto-implicit parameters automatically added by Lean. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L36-L36","name":"Lean.Elab.DefViewElabHeader.binderIds","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.binderIds","doc":"Syntax objects for the binders occurring befor `:`, we use them to populate the `InfoTree` when elaborating `valueStx`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L34-L34","name":"Lean.Elab.DefViewElabHeader.levelNames","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.levelNames","doc":"Universe level parameter names explicitly provided by the user. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L32-L32","name":"Lean.Elab.DefViewElabHeader.declName","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.declName","doc":"Full name for this declaration. This is the name that will be added to the `Environment`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L30-L30","name":"Lean.Elab.DefViewElabHeader.shortDeclName","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.shortDeclName","doc":"Short name. Recall that all declarations in Lean 4 are potentially recursive. We use `shortDeclName` to refer\nto them at `valueStx`, and other declarations in the same mutual block. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L26-L26","name":"Lean.Elab.DefViewElabHeader.kind","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.kind","doc":"Stores whether this is the header of a definition, theorem, ... "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L24-L24","name":"Lean.Elab.DefViewElabHeader.modifiers","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.modifiers","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L23-L23","name":"Lean.Elab.DefViewElabHeader.ref","kind":"def","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.ref","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L22-L43","name":"Lean.Elab.DefViewElabHeader","kind":"structure","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader","doc":"`DefView` after elaborating the header. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L1-L1","name":"Lean.Elab.Term.MutualClosure.LetRecClosure.mk","kind":"ctor","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L1-L1","name":"Lean.Elab.DefViewElabHeader.mk","kind":"ctor","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L1-L1","name":"Lean.Elab.Term.MutualClosure.ClosureState.mk","kind":"ctor","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/MutualDef.lean#L1-L1","name":"Lean.Elab.Term.MutualClosure.FixPoint.State.mk","kind":"ctor","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State.mk","doc":""}]}