{"name":"Lean.Elab.PreDefinition.WF.Rel","instances":[],"imports":["Init","Lean.Meta.Tactic.Apply","Lean.Meta.Tactic.Cases","Lean.Meta.Tactic.Rename","Lean.Elab.SyntheticMVars","Lean.Elab.PreDefinition.Basic","Lean.Elab.PreDefinition.WF.TerminationHint"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/WF/Rel.lean#L151-L162","name":"Lean.Elab.WF.elabWFRel.guess","kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/Rel.html#Lean.Elab.WF.elabWFRel.guess","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/WF/Rel.lean#L130-L149","name":"Lean.Elab.WF.elabWFRel.generateElements","kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/Rel.html#Lean.Elab.WF.elabWFRel.generateElements","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/WF/Rel.lean#L115-L128","name":"Lean.Elab.WF.elabWFRel.go","kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/Rel.html#Lean.Elab.WF.elabWFRel.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/WF/Rel.lean#L101-L162","name":"Lean.Elab.WF.elabWFRel","kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/Rel.html#Lean.Elab.WF.elabWFRel","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/WF/Rel.lean#L89-L98","name":"Lean.Elab.WF.generateCombinations?.go","kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/Rel.html#Lean.Elab.WF.generateCombinations?.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/WF/Rel.lean#L83-L87","name":"Lean.Elab.WF.generateCombinations?.isForbidden","kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/Rel.html#Lean.Elab.WF.generateCombinations?.isForbidden","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/WF/Rel.lean#L80-L99","name":"Lean.Elab.WF.generateCombinations?","kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/Rel.html#Lean.Elab.WF.generateCombinations?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/WF/Rel.lean#L68-L78","name":"Lean.Elab.WF.getForbiddenByTrivialSizeOf","kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/Rel.html#Lean.Elab.WF.getForbiddenByTrivialSizeOf","doc":"Given a predefinition with value `fun (x_₁ ... xₙ) (y_₁ : α₁)... (yₘ : αₘ) => ...`,\nwhere `n = fixedPrefixSize`, return an array `A` s.t. `i ∈ A` iff `sizeOf yᵢ` reduces to a literal.\nThis is the case for types such as `Prop`, `Type u`, etc.\nThis arguments should not be considered when guessing a well-founded relation.\nSee `generateCombinations?`\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/WF/Rel.lean#L56-L59","name":"Lean.Elab.WF.getNumCandidateArgs","kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/Rel.html#Lean.Elab.WF.getNumCandidateArgs","doc":""}]}