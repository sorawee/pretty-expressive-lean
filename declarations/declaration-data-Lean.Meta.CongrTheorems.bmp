{"name":"Lean.Meta.CongrTheorems","instances":[{"typeNames":["Lean.Meta.CongrArgKind"],"name":"Lean.Meta.instInhabitedCongrArgKind","className":"Inhabited"},{"typeNames":["Lean.Meta.CongrArgKind"],"name":"Lean.Meta.instReprCongrArgKind","className":"Repr"}],"imports":["Init","Lean.Meta.AppBuilder","Lean.Class"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CongrTheorems.lean#L326-L329","name":"Lean.Meta.mkCongrSimp?","kind":"def","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.mkCongrSimp?","doc":"Create a congruence theorem for `f`. The theorem is used in the simplifier.\n\nIf `subsingletonInstImplicitRhs = true`, the the `rhs` corresponding to `[Decidable p]` parameters\nis marked as instance implicit. It forces the simplifier to compute the new instance when applying\nthe congruence theorem.\nFor the `congr` tactic we set it to `false`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CongrTheorems.lean#L292-L315","name":"Lean.Meta.mkCongrSimpCore?.mkProof.go","kind":"opaque","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.mkCongrSimpCore?.mkProof.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CongrTheorems.lean#L291-L316","name":"Lean.Meta.mkCongrSimpCore?.mkProof","kind":"def","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.mkCongrSimpCore?.mkProof","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CongrTheorems.lean#L259-L286","name":"Lean.Meta.mkCongrSimpCore?.mk?.go","kind":"opaque","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.mkCongrSimpCore?.mk?.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CongrTheorems.lean#L254-L289","name":"Lean.Meta.mkCongrSimpCore?.mk?","kind":"def","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.mkCongrSimpCore?.mk?","doc":"Create a congruence theorem that is useful for the simplifier.\nIn this kind of theorem, if the i-th argument is a `cast` argument, then the theorem\ncontains an input `a_i` representing the i-th argument in the left-hand-side, and\nit appears with a cast (e.g., `Eq.drec ... a_i ...`) in the right-hand-side.\nThe idea is that the right-hand-side of this theorem \"tells\" the simplifier\nhow the resulting term looks like. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CongrTheorems.lean#L236-L316","name":"Lean.Meta.mkCongrSimpCore?","kind":"def","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.mkCongrSimpCore?","doc":"Create a congruence theorem that is useful for the simplifier and `congr` tactic.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CongrTheorems.lean#L196-L231","name":"Lean.Meta.getCongrSimpKinds","kind":"def","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.getCongrSimpKinds","doc":"Compute `CongrArgKind`s for a simp congruence theorem. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CongrTheorems.lean#L115-L116","name":"Lean.Meta.mkHCongr","kind":"def","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.mkHCongr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CongrTheorems.lean#L94-L113","name":"Lean.Meta.mkHCongrWithArity.mkProof","kind":"opaque","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.mkHCongrWithArity.mkProof","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CongrTheorems.lean#L78-L91","name":"Lean.Meta.mkHCongrWithArity.withNewEqs.loop","kind":"opaque","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.mkHCongrWithArity.withNewEqs.loop","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CongrTheorems.lean#L77-L92","name":"Lean.Meta.mkHCongrWithArity.withNewEqs","kind":"def","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.mkHCongrWithArity.withNewEqs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CongrTheorems.lean#L55-L113","name":"Lean.Meta.mkHCongrWithArity","kind":"def","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.mkHCongrWithArity","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CongrTheorems.lean#L39-L39","name":"Lean.Meta.CongrTheorem.argKinds","kind":"def","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.CongrTheorem.argKinds","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CongrTheorems.lean#L38-L38","name":"Lean.Meta.CongrTheorem.proof","kind":"def","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.CongrTheorem.proof","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CongrTheorems.lean#L37-L37","name":"Lean.Meta.CongrTheorem.type","kind":"def","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.CongrTheorem.type","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CongrTheorems.lean#L36-L39","name":"Lean.Meta.CongrTheorem","kind":"structure","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.CongrTheorem","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CongrTheorems.lean#L34-L34","name":"Lean.Meta.instReprCongrArgKind","kind":"instance","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.instReprCongrArgKind","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CongrTheorems.lean#L34-L34","name":"Lean.Meta.instInhabitedCongrArgKind","kind":"instance","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.instInhabitedCongrArgKind","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CongrTheorems.lean#L30-L33","name":"Lean.Meta.CongrArgKind.subsingletonInst","kind":"ctor","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.CongrArgKind.subsingletonInst","doc":"For congr-simp theorems only.  Indicates a decidable instance argument.\nThe lemma contains two arguments [a_i : Decidable ...] [b_i : Decidable ...] "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CongrTheorems.lean#L26-L29","name":"Lean.Meta.CongrArgKind.heq","kind":"ctor","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.CongrArgKind.heq","doc":"The lemma contains three parameters for this kind of argument `a_i`, `b_i` and `eq_i : HEq a_i b_i`.\n`a_i` and `b_i` represent the left and right hand sides, and `eq_i` is a proof for their heterogeneous equality. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CongrTheorems.lean#L22-L25","name":"Lean.Meta.CongrArgKind.cast","kind":"ctor","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.CongrArgKind.cast","doc":"The congr-simp theorems contains only one parameter for this kind of argument, and congr theorems contains two.\nThey correspond to arguments that are subsingletons/propositions. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CongrTheorems.lean#L18-L21","name":"Lean.Meta.CongrArgKind.eq","kind":"ctor","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.CongrArgKind.eq","doc":"The lemma contains three parameters for this kind of argument `a_i`, `b_i` and `eq_i : a_i = b_i`.\n`a_i` and `b_i` represent the left and right hand sides, and `eq_i` is a proof for their equality. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CongrTheorems.lean#L14-L17","name":"Lean.Meta.CongrArgKind.fixedNoParam","kind":"ctor","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.CongrArgKind.fixedNoParam","doc":"It is not a parameter for the congruence theorem, the theorem was specialized for this parameter.\nThis only happens if the parameter is a subsingleton/proposition, and other parameters depend on it. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CongrTheorems.lean#L12-L13","name":"Lean.Meta.CongrArgKind.fixed","kind":"ctor","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.CongrArgKind.fixed","doc":"It is a parameter for the congruence theorem, the parameter occurs in the left and right hand sides. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CongrTheorems.lean#L11-L34","name":"Lean.Meta.CongrArgKind","kind":"inductive","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.CongrArgKind","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CongrTheorems.lean#L1-L1","name":"Lean.Meta.CongrTheorem.mk","kind":"ctor","docLink":"./Lean/Meta/CongrTheorems.html#Lean.Meta.CongrTheorem.mk","doc":""}]}