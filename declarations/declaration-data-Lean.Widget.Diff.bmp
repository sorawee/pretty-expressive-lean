{"name":"Lean.Widget.Diff","instances":[{"typeNames":["_private.Lean.Widget.Diff.0.Lean.Widget.ExprDiffTag"],"name":"Lean.Widget.instToStringExprDiffTag","className":"ToString"},{"typeNames":["Lean.Widget.ExprDiff"],"name":"Lean.Widget.instEmptyCollectionExprDiff","className":"EmptyCollection"},{"typeNames":["Lean.Widget.ExprDiff"],"name":"Lean.Widget.instAppendExprDiff","className":"Append"},{"typeNames":["Lean.Widget.ExprDiff"],"name":"Lean.Widget.instToStringExprDiff","className":"ToString"}],"imports":["Init","Lean.Meta.PPGoal","Lean.Widget.InteractiveCode","Lean.Widget.InteractiveGoal","Lean.Data.Lsp.Extra","Lean.Elab.InfoTree"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Widget/Diff.lean#L254-L278","name":"Lean.Widget.diffInteractiveGoals","kind":"def","docLink":"./Lean/Widget/Diff.html#Lean.Widget.diffInteractiveGoals","doc":"Modifies `goalsAfter` with additional information about how it is different to `goalsBefore`.\nIf `useAfter` is `true` then `igs₁` is the set of interactive goals _after_ the tactic has been applied.\nOtherwise `igs₁` is the set of interactive goals _before_. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Widget/Diff.lean#L234-L249","name":"Lean.Widget.diffInteractiveGoal","kind":"def","docLink":"./Lean/Widget/Diff.html#Lean.Widget.diffInteractiveGoal","doc":"Decorates the given goal `i₁` with a diff by comparing with goal `g₀`.\nIf `useAfter` is true then `i₁` is _after_ and `g₀` is _before_. Otherwise they are swapped. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Widget/Diff.lean#L228-L230","name":"Lean.Widget.diffHypotheses","kind":"def","docLink":"./Lean/Widget/Diff.html#Lean.Widget.diffHypotheses","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Widget/Diff.lean#L220-L226","name":"Lean.Widget.diffHypothesesBundle.withTypeDiff","kind":"def","docLink":"./Lean/Widget/Diff.html#Lean.Widget.diffHypothesesBundle.withTypeDiff","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Widget/Diff.lean#L203-L226","name":"Lean.Widget.diffHypothesesBundle","kind":"def","docLink":"./Lean/Widget/Diff.html#Lean.Widget.diffHypothesesBundle","doc":"Diffs the given hypothesis bundle against the given local context.\n\nIf `useAfter == true`, `ctx₀` is the context _before_ and `h₁` is the bundle _after_.\nIf `useAfter == false`, these are swapped.\n "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Widget/Diff.lean#L192-L194","name":"Lean.Widget.addDiffTags","kind":"def","docLink":"./Lean/Widget/Diff.html#Lean.Widget.addDiffTags","doc":"Given a `diff` between `before` and `after : Expr`, and the rendered `infoAfter : CodeWithInfos` for `after`,\nthis function decorates `infoAfter` with tags indicating where the expression has changed.\n\nIf `useAfter == false` before and after are swapped. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Widget/Diff.lean#L180-L186","name":"Lean.Widget.exprDiff","kind":"def","docLink":"./Lean/Widget/Diff.html#Lean.Widget.exprDiff","doc":"Computes the diff for `e₀` and `e₁`. If `useAfter` is `false`, `e₀, e₁` are interpreted as `after, before` instead of `before, after`."},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Widget/Diff.lean#L140-L177","name":"Lean.Widget.exprDiffCore.piDiff","kind":"opaque","docLink":"./Lean/Widget/Diff.html#Lean.Widget.exprDiffCore.piDiff","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Widget/Diff.lean#L106-L177","name":"Lean.Widget.exprDiffCore","kind":"opaque","docLink":"./Lean/Widget/Diff.html#Lean.Widget.exprDiffCore","doc":"Computes a diff between `before` and `after` expressions.\n\nThis works by recursively comparing function arguments.\n\nTODO(ed): experiment with a 'greatest common subexpression' design where\n  given `e₀`, `e₁`, find the greatest common subexpressions `Xs : Array Expr` and a congruence `F` such that\n  `e₀ = F[A₀[..Xs]]` and `e₀ = F[A₁[..Xs]]`. Then, we can have fancy diff highlighting where common subexpressions are not highlighted.\n\n## Diffing binders\n\nTwo binding domains are identified if they have the same user name and the same type.\nThe most common tactic that modifies binders is after an `intros`.\nTo deal with this case, if `before = (a : α) → β` and `after`, is not a matching binder (ie: not `(a : α) → _`)\nthen we instantiate the `before` variable in a new context and continue diffing `β` against `after`.\n\n "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Widget/Diff.lean#L87-L88","name":"Lean.Widget.ExprDiff.isEmpty","kind":"def","docLink":"./Lean/Widget/Diff.html#Lean.Widget.ExprDiff.isEmpty","doc":"If true, the expression before and the expression after are identical. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Widget/Diff.lean#L83-L84","name":"Lean.Widget.ExprDiff.withChange","kind":"def","docLink":"./Lean/Widget/Diff.html#Lean.Widget.ExprDiff.withChange","doc":"Add a tag to the diff at the positions given by `before` and `after`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Widget/Diff.lean#L77-L80","name":"Lean.Widget.ExprDiff.withChangePos","kind":"def","docLink":"./Lean/Widget/Diff.html#Lean.Widget.ExprDiff.withChangePos","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Widget/Diff.lean#L74-L75","name":"Lean.Widget.ExprDiff.insertAfterChange","kind":"def","docLink":"./Lean/Widget/Diff.html#Lean.Widget.ExprDiff.insertAfterChange","doc":"Add a tag at the given position to the `changesAfter` dict. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Widget/Diff.lean#L70-L71","name":"Lean.Widget.ExprDiff.insertBeforeChange","kind":"def","docLink":"./Lean/Widget/Diff.html#Lean.Widget.ExprDiff.insertBeforeChange","doc":"Add a tag at the given position to the `changesBefore` dict. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Widget/Diff.lean#L63-L67","name":"Lean.Widget.instToStringExprDiff","kind":"instance","docLink":"./Lean/Widget/Diff.html#Lean.Widget.instToStringExprDiff","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Widget/Diff.lean#L58-L62","name":"Lean.Widget.instAppendExprDiff","kind":"instance","docLink":"./Lean/Widget/Diff.html#Lean.Widget.instAppendExprDiff","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Widget/Diff.lean#L57-L57","name":"Lean.Widget.instEmptyCollectionExprDiff","kind":"instance","docLink":"./Lean/Widget/Diff.html#Lean.Widget.instEmptyCollectionExprDiff","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Widget/Diff.lean#L55-L55","name":"Lean.Widget.ExprDiff.changesAfter","kind":"def","docLink":"./Lean/Widget/Diff.html#Lean.Widget.ExprDiff.changesAfter","doc":"A map from subexpr positions in `e₁` to 'diff points' which are tags\ndescribing how the expression has changed relative to `before` at the given position."},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Widget/Diff.lean#L52-L52","name":"Lean.Widget.ExprDiff.changesBefore","kind":"def","docLink":"./Lean/Widget/Diff.html#Lean.Widget.ExprDiff.changesBefore","doc":"Map from subexpr positions in `e₀` to diff points."},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Widget/Diff.lean#L50-L55","name":"Lean.Widget.ExprDiff","kind":"structure","docLink":"./Lean/Widget/Diff.html#Lean.Widget.ExprDiff","doc":"A description of the differences between a pair of expressions `before`, `after : Expr`.\nThe information can be used to display a 'visual diff' for\neither `before`, showing the parts of the expression that are about to change,\nor `after` showing which parts of the expression have changed. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Widget/Diff.lean#L44-L44","name":"Lean.Widget.instToStringExprDiffTag","kind":"instance","docLink":"./Lean/Widget/Diff.html#Lean.Widget.instToStringExprDiffTag","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Widget/Diff.lean#L39-L42","name":"Lean.Widget.ExprDiffTag.toString","kind":"def","docLink":"./Lean/Widget/Diff.html#Lean.Widget.ExprDiffTag.toString","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Widget/Diff.lean#L31-L37","name":"Lean.Widget.ExprDiffTag.toDiffTag","kind":"def","docLink":"./Lean/Widget/Diff.html#Lean.Widget.ExprDiffTag.toDiffTag","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Widget/Diff.lean#L15-L18","name":"Lean.Widget.showTacticDiff","kind":"opaque","docLink":"./Lean/Widget/Diff.html#Lean.Widget.showTacticDiff","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Widget/Diff.lean#L1-L1","name":"Lean.Widget.ExprDiff.mk","kind":"ctor","docLink":"./Lean/Widget/Diff.html#Lean.Widget.ExprDiff.mk","doc":""}]}