{"name":"Lean.Compiler.LCNF.ConfigOptions","instances":[{"typeNames":["Lean.Compiler.LCNF.ConfigOptions"],"name":"Lean.Compiler.LCNF.instInhabitedConfigOptions","className":"Inhabited"}],"imports":["Init","Lean.Data.Options"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/ConfigOptions.lean#L59-L64","name":"Lean.Compiler.LCNF.toConfigOptions","kind":"def","docLink":"./Lean/Compiler/LCNF/ConfigOptions.html#Lean.Compiler.LCNF.toConfigOptions","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/ConfigOptions.lean#L53-L57","name":"Lean.Compiler.LCNF.compiler.checkTypes","kind":"opaque","docLink":"./Lean/Compiler/LCNF/ConfigOptions.html#Lean.Compiler.LCNF.compiler.checkTypes","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/ConfigOptions.lean#L47-L51","name":"Lean.Compiler.LCNF.compiler.maxRecInlineIfReduce","kind":"opaque","docLink":"./Lean/Compiler/LCNF/ConfigOptions.html#Lean.Compiler.LCNF.compiler.maxRecInlineIfReduce","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/ConfigOptions.lean#L41-L45","name":"Lean.Compiler.LCNF.compiler.maxRecInline","kind":"opaque","docLink":"./Lean/Compiler/LCNF/ConfigOptions.html#Lean.Compiler.LCNF.compiler.maxRecInline","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/ConfigOptions.lean#L35-L39","name":"Lean.Compiler.LCNF.compiler.small","kind":"opaque","docLink":"./Lean/Compiler/LCNF/ConfigOptions.html#Lean.Compiler.LCNF.compiler.small","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/ConfigOptions.lean#L33-L33","name":"Lean.Compiler.LCNF.instInhabitedConfigOptions","kind":"instance","docLink":"./Lean/Compiler/LCNF/ConfigOptions.html#Lean.Compiler.LCNF.instInhabitedConfigOptions","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/ConfigOptions.lean#L32-L32","name":"Lean.Compiler.LCNF.ConfigOptions.checkTypes","kind":"def","docLink":"./Lean/Compiler/LCNF/ConfigOptions.html#Lean.Compiler.LCNF.ConfigOptions.checkTypes","doc":"Perform type compatibility checking after each compiler pass.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/ConfigOptions.lean#L28-L28","name":"Lean.Compiler.LCNF.ConfigOptions.maxRecInlineIfReduce","kind":"def","docLink":"./Lean/Compiler/LCNF/ConfigOptions.html#Lean.Compiler.LCNF.ConfigOptions.maxRecInlineIfReduce","doc":"Maximum number of times a recursive definition tagged with `[inline_if_reduce]` can be recursively inlined\nbefore generating an error during compilation.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/ConfigOptions.lean#L23-L23","name":"Lean.Compiler.LCNF.ConfigOptions.maxRecInline","kind":"def","docLink":"./Lean/Compiler/LCNF/ConfigOptions.html#Lean.Compiler.LCNF.ConfigOptions.maxRecInline","doc":"Maximum number of times a recursive definition tagged with `[inline]` can be recursively inlined before generating an\nerror during compilation.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/ConfigOptions.lean#L18-L18","name":"Lean.Compiler.LCNF.ConfigOptions.smallThreshold","kind":"def","docLink":"./Lean/Compiler/LCNF/ConfigOptions.html#Lean.Compiler.LCNF.ConfigOptions.smallThreshold","doc":"Any function declaration or join point with size `â‰¤ smallThresold` is inlined\neven if there are multiple occurrences.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/ConfigOptions.lean#L13-L33","name":"Lean.Compiler.LCNF.ConfigOptions","kind":"structure","docLink":"./Lean/Compiler/LCNF/ConfigOptions.html#Lean.Compiler.LCNF.ConfigOptions","doc":"User controlled configuration options for the code generator.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/ConfigOptions.lean#L1-L1","name":"Lean.Compiler.LCNF.ConfigOptions.mk","kind":"ctor","docLink":"./Lean/Compiler/LCNF/ConfigOptions.html#Lean.Compiler.LCNF.ConfigOptions.mk","doc":""}]}