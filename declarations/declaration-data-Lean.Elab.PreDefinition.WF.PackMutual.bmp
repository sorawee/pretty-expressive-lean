{"name":"Lean.Elab.PreDefinition.WF.PackMutual","instances":[],"imports":["Init","Lean.Meta.Tactic.Cases","Lean.Elab.PreDefinition.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/WF/PackMutual.lean#L174-L188","name":"Lean.Elab.WF.packMutual","kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/PackMutual.html#Lean.Elab.WF.packMutual","doc":"If `preDefs.size > 1`, combine different functions in a single one using `PSum`.\nThis method assumes all `preDefs` have arity 1, and have already been processed using `packDomain`.\nHere is a small example. Suppose the input is\n```\nf x :=\n  match x.2.1, x.2.2.1, x.2.2.2 with\n  | 0, a, b => a\n  | Nat.succ n, a, b => (g ⟨x.1, n, a, b⟩).fst\ng x :=\n  match x.2.1, x.2.2.1, x.2.2.2 with\n  | 0, a, b => (a, b)\n  | Nat.succ n, a, b => (h ⟨x.1, n, a, b⟩, a)\nh x =>\n  match x.2.1, x.2.2.1, x.2.2.2 with\n  | 0, a, b => b\n  | Nat.succ n, a, b => f ⟨x.1, n, a, b⟩\n```\nthis method produces the following pre definition\n```\nf._mutual x :=\n  PSum.casesOn x\n    (fun val =>\n      match val.2.1, val.2.2.1, val.2.2.2 with\n      | 0, a, b => a\n      | Nat.succ n, a, b => (f._mutual (PSum.inr (PSum.inl ⟨val.1, n, a, b⟩))).fst\n    fun val =>\n      PSum.casesOn val\n        (fun val =>\n          match val.2.1, val.2.2.1, val.2.2.2 with\n          | 0, a, b => (a, b)\n          | Nat.succ n, a, b => (f._mutual (PSum.inr (PSum.inr ⟨val.1, n, a, b⟩)), a)\n        fun val =>\n          match val.2.1, val.2.2.1, val.2.2.2 with\n          | 0, a, b => b\n          | Nat.succ n, a, b =>\n            f._mutual (PSum.inl ⟨val.1, n, a, b⟩)\n```\n\nRemark: `preDefsOriginal` is used for error reporting, it contains the definitions before applying `packDomain`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/WF/PackMutual.lean#L126-L131","name":"Lean.Elab.WF.withFixedPrefix.go","kind":"opaque","docLink":"./Lean/Elab/PreDefinition/WF/PackMutual.html#Lean.Elab.WF.withFixedPrefix.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/WF/PackMutual.lean#L123-L131","name":"Lean.Elab.WF.withFixedPrefix","kind":"def","docLink":"./Lean/Elab/PreDefinition/WF/PackMutual.html#Lean.Elab.WF.withFixedPrefix","doc":""}]}