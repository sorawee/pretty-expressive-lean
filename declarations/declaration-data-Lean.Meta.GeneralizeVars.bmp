{"name":"Lean.Meta.GeneralizeVars","instances":[],"imports":["Init","Lean.Meta.Basic","Lean.Util.CollectFVars"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/GeneralizeVars.lean#L68-L71","name":"Lean.Meta.getFVarsToGeneralize","kind":"def","docLink":"./Lean/Meta/GeneralizeVars.html#Lean.Meta.getFVarsToGeneralize","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/GeneralizeVars.lean#L57-L66","name":"Lean.Meta.getFVarSetToGeneralize","kind":"def","docLink":"./Lean/Meta/GeneralizeVars.html#Lean.Meta.getFVarSetToGeneralize","doc":"Collect variables to be generalized.\nIt uses the following heuristic\n- Collect forward dependencies that are not in the forbidden set, and depend on some variable in `targets`.\n\n- We use `mkForbiddenSet` to compute `forbidden`.\n\nRemark: we *not* collect instance implicit arguments nor auxiliary declarations for compiling\nrecursive declarations.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/GeneralizeVars.lean#L37-L45","name":"Lean.Meta.mkGeneralizationForbiddenSet.loop","kind":"opaque","docLink":"./Lean/Meta/GeneralizeVars.html#Lean.Meta.mkGeneralizationForbiddenSet.loop","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/GeneralizeVars.lean#L24-L35","name":"Lean.Meta.mkGeneralizationForbiddenSet.visit","kind":"def","docLink":"./Lean/Meta/GeneralizeVars.html#Lean.Meta.mkGeneralizationForbiddenSet.visit","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/GeneralizeVars.lean#L14-L45","name":"Lean.Meta.mkGeneralizationForbiddenSet","kind":"def","docLink":"./Lean/Meta/GeneralizeVars.html#Lean.Meta.mkGeneralizationForbiddenSet","doc":"Add to `forbidden` all a set of `FVarId`s containing `targets` and all variables they depend on.\n"}]}