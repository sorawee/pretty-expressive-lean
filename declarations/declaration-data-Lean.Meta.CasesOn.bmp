{"name":"Lean.Meta.CasesOn","instances":[],"imports":["Init","Lean.Meta.KAbstract","Lean.Meta.Check"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CasesOn.lean#L110-L114","name":"Lean.Meta.CasesOnApp.addArg?","kind":"def","docLink":"./Lean/Meta/CasesOn.html#Lean.Meta.CasesOnApp.addArg?","doc":"Similar `CasesOnApp.addArg`, but returns `none` on failure. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CasesOn.lean#L84-L107","name":"Lean.Meta.CasesOnApp.addArg.updateAlts","kind":"def","docLink":"./Lean/Meta/CasesOn.html#Lean.Meta.CasesOnApp.addArg.updateAlts","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CasesOn.lean#L61-L107","name":"Lean.Meta.CasesOnApp.addArg","kind":"def","docLink":"./Lean/Meta/CasesOn.html#Lean.Meta.CasesOnApp.addArg","doc":"Given a `casesOn` application `c` of the form\n```\ncasesOn As (fun is x => motive[i, xs]) is major  (fun ys_1 => (alt_1 : motive (C_1[ys_1])) ... (fun ys_n => (alt_n : motive (C_n[ys_n]) remaining\n```\nand an expression `e : B[is, major]`, construct the term\n```\ncasesOn As (fun is x => B[is, x] â†’ motive[i, xs]) is major (fun ys_1 (y : B[C_1[ys_1]]) => (alt_1 : motive (C_1[ys_1])) ... (fun ys_n (y : B[C_n[ys_n]]) => (alt_n : motive (C_n[ys_n]) e remaining\n```\nWe use `kabstract` to abstract the `is` and `major` from `B[is, major]`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CasesOn.lean#L47-L48","name":"Lean.Meta.CasesOnApp.toExpr","kind":"def","docLink":"./Lean/Meta/CasesOn.html#Lean.Meta.CasesOnApp.toExpr","doc":"Convert `c` back to `Expr` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CasesOn.lean#L25-L44","name":"Lean.Meta.toCasesOnApp?","kind":"def","docLink":"./Lean/Meta/CasesOn.html#Lean.Meta.toCasesOnApp?","doc":"Return `some c` if `e` is a `casesOn` application. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CasesOn.lean#L22-L22","name":"Lean.Meta.CasesOnApp.propOnly","kind":"def","docLink":"./Lean/Meta/CasesOn.html#Lean.Meta.CasesOnApp.propOnly","doc":"`true` if the `casesOn` can only eliminate into `Prop` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CasesOn.lean#L20-L20","name":"Lean.Meta.CasesOnApp.remaining","kind":"def","docLink":"./Lean/Meta/CasesOn.html#Lean.Meta.CasesOnApp.remaining","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CasesOn.lean#L19-L19","name":"Lean.Meta.CasesOnApp.altNumParams","kind":"def","docLink":"./Lean/Meta/CasesOn.html#Lean.Meta.CasesOnApp.altNumParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CasesOn.lean#L18-L18","name":"Lean.Meta.CasesOnApp.alts","kind":"def","docLink":"./Lean/Meta/CasesOn.html#Lean.Meta.CasesOnApp.alts","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CasesOn.lean#L17-L17","name":"Lean.Meta.CasesOnApp.major","kind":"def","docLink":"./Lean/Meta/CasesOn.html#Lean.Meta.CasesOnApp.major","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CasesOn.lean#L16-L16","name":"Lean.Meta.CasesOnApp.indices","kind":"def","docLink":"./Lean/Meta/CasesOn.html#Lean.Meta.CasesOnApp.indices","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CasesOn.lean#L15-L15","name":"Lean.Meta.CasesOnApp.motive","kind":"def","docLink":"./Lean/Meta/CasesOn.html#Lean.Meta.CasesOnApp.motive","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CasesOn.lean#L14-L14","name":"Lean.Meta.CasesOnApp.params","kind":"def","docLink":"./Lean/Meta/CasesOn.html#Lean.Meta.CasesOnApp.params","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CasesOn.lean#L13-L13","name":"Lean.Meta.CasesOnApp.us","kind":"def","docLink":"./Lean/Meta/CasesOn.html#Lean.Meta.CasesOnApp.us","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CasesOn.lean#L12-L12","name":"Lean.Meta.CasesOnApp.declName","kind":"def","docLink":"./Lean/Meta/CasesOn.html#Lean.Meta.CasesOnApp.declName","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CasesOn.lean#L11-L22","name":"Lean.Meta.CasesOnApp","kind":"structure","docLink":"./Lean/Meta/CasesOn.html#Lean.Meta.CasesOnApp","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Meta/CasesOn.lean#L1-L1","name":"Lean.Meta.CasesOnApp.mk","kind":"ctor","docLink":"./Lean/Meta/CasesOn.html#Lean.Meta.CasesOnApp.mk","doc":""}]}