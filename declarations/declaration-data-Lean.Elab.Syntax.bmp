{"name":"Lean.Elab.Syntax","instances":[],"imports":["Init","Lean.Elab.Command","Lean.Parser.Syntax","Lean.Elab.Util"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L435-L438","name":"Lean.Elab.Command.strLitToPattern","kind":"def","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Command.strLitToPattern","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L420-L433","name":"Lean.Elab.Command.expandNoKindMacroRulesAux","kind":"def","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Command.expandNoKindMacroRulesAux","doc":"Infer syntax kind `k` from first pattern, put alternatives of same kind into new `macro/elab_rules (kind := k)` via `mkCmd (some k)`,\nleave remaining alternatives (via `mkCmd none`) to be recursively expanded. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L409-L415","name":"Lean.Elab.Command.inferMacroRulesAltKind","kind":"def","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Command.inferMacroRulesAltKind","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L406-L407","name":"Lean.Elab.Command.checkRuleKind","kind":"def","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Command.checkRuleKind","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L398-L404","name":"Lean.Elab.Command.elabSyntaxAbbrev","kind":"def","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Command.elabSyntaxAbbrev","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L362-L396","name":"Lean.Elab.Command.elabSyntax","kind":"def","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Command.elabSyntax","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L356-L360","name":"Lean.Elab.Command.addMacroScopeIfLocal","kind":"def","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Command.addMacroScopeIfLocal","doc":"Add macro scope to `name` if it does not already have them, and `attrKind` is `local`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L348-L351","name":"Lean.Elab.Command.isLocalAttrKind","kind":"def","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Command.isLocalAttrKind","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L343-L346","name":"Lean.Elab.Command.resolveSyntaxKind","kind":"def","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Command.resolveSyntaxKind","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L319-L322","name":"Lean.Elab.Command.mkNameFromParserSyntax.appendCatName","kind":"def","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Command.mkNameFromParserSyntax.appendCatName","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L305-L317","name":"Lean.Elab.Command.mkNameFromParserSyntax.visit","kind":"opaque","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Command.mkNameFromParserSyntax.visit","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L302-L322","name":"Lean.Elab.Command.mkNameFromParserSyntax","kind":"def","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Command.mkNameFromParserSyntax","doc":"Auxiliary function for creating declaration names from parser descriptions.\nExample:\nGiven\n```\nsyntax term \"+\" term : term\nsyntax \"[\" sepBy(term, \", \") \"]\"  : term\n```\nIt generates the names `term_+_` and `term[_,]`\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L275-L290","name":"Lean.Elab.Command.elabDeclareSyntaxCat","kind":"def","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Command.elabDeclareSyntaxCat","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L249-L251","name":"Lean.Elab.Term.toParserDescr.processNonReserved","kind":"def","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.toParserDescr.processNonReserved","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L236-L247","name":"Lean.Elab.Term.toParserDescr.processAtom","kind":"def","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.toParserDescr.processAtom","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L229-L234","name":"Lean.Elab.Term.toParserDescr.isValidAtom","kind":"def","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.toParserDescr.isValidAtom","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L222-L227","name":"Lean.Elab.Term.toParserDescr.processSepBy1","kind":"opaque","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.toParserDescr.processSepBy1","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L215-L220","name":"Lean.Elab.Term.toParserDescr.processSepBy","kind":"opaque","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.toParserDescr.processSepBy","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L193-L213","name":"Lean.Elab.Term.toParserDescr.processNullaryOrCat","kind":"opaque","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.toParserDescr.processNullaryOrCat","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L161-L191","name":"Lean.Elab.Term.toParserDescr.processAlias","kind":"opaque","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.toParserDescr.processAlias","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L153-L159","name":"Lean.Elab.Term.toParserDescr.processParserCategory","kind":"def","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.toParserDescr.processParserCategory","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L149-L151","name":"Lean.Elab.Term.toParserDescr.ensureNoPrec","kind":"def","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.toParserDescr.ensureNoPrec","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L138-L147","name":"Lean.Elab.Term.toParserDescr.processSeq","kind":"opaque","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.toParserDescr.processSeq","doc":"Sequence (aka NullNode) "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L109-L135","name":"Lean.Elab.Term.toParserDescr.process","kind":"opaque","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.toParserDescr.process","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L103-L251","name":"Lean.Elab.Term.toParserDescr","kind":"def","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.toParserDescr","doc":"Given a `stx` of category `syntax`, return a `(newStx, lhsPrec?)`,\nwhere `newStx` is of category `term`. After elaboration, `newStx` should have type\n`TrailingParserDescr` if `lhsPrec?.isSome`, and `ParserDescr` otherwise. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L93-L96","name":"Lean.Elab.Term.elabParserName","kind":"def","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.elabParserName","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L82-L91","name":"Lean.Elab.Term.elabParserName?","kind":"def","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.elabParserName?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L68-L80","name":"Lean.Elab.Term.checkLeftRec","kind":"def","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.checkLeftRec","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L63-L66","name":"Lean.Elab.Term.addAliasInfo","kind":"def","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.addAliasInfo","doc":"(Try to) add a term info for the alias with info `info` at `ref`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L57-L60","name":"Lean.Elab.Term.addCategoryInfo","kind":"def","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.addCategoryInfo","doc":"(Try to) add a term info for the category `catName` at `ref`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L46-L51","name":"Lean.Elab.Term.ensureUnaryOutput","kind":"def","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.ensureUnaryOutput","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L40-L40","name":"Lean.Elab.Term.ToParserDescr","kind":"def","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.ToParserDescr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L39-L39","name":"Lean.Elab.Term.ToParserDescrM","kind":"def","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.ToParserDescrM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L37-L37","name":"Lean.Elab.Term.ToParserDescrContext.behavior","kind":"def","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.ToParserDescrContext.behavior","doc":"See comment at `Parser.ParserCategory`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L35-L35","name":"Lean.Elab.Term.ToParserDescrContext.leftRec","kind":"def","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.ToParserDescrContext.leftRec","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L34-L34","name":"Lean.Elab.Term.ToParserDescrContext.first","kind":"def","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.ToParserDescrContext.first","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L33-L33","name":"Lean.Elab.Term.ToParserDescrContext.catName","kind":"def","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.ToParserDescrContext.catName","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L32-L37","name":"Lean.Elab.Term.ToParserDescrContext","kind":"structure","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.ToParserDescrContext","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L14-L18","name":"Lean.Elab.Term.expandOptPrecedence","kind":"def","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.expandOptPrecedence","doc":"Expand `optional «precedence»` where\n«precedence» := leading_parser \" : \" >> precedenceParser "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Syntax.lean#L1-L1","name":"Lean.Elab.Term.ToParserDescrContext.mk","kind":"ctor","docLink":"./Lean/Elab/Syntax.html#Lean.Elab.Term.ToParserDescrContext.mk","doc":""}]}