{"name":"Lean.Compiler.IR.Basic","instances":[{"typeNames":["Lean.IR.VarId"],"name":"Lean.IR.instInhabitedVarId","className":"Inhabited"},{"typeNames":["Lean.IR.JoinPointId"],"name":"Lean.IR.instInhabitedJoinPointId","className":"Inhabited"},{"typeNames":["Lean.IR.VarId"],"name":"Lean.IR.instBEqVarId","className":"BEq"},{"typeNames":["Lean.IR.VarId"],"name":"Lean.IR.instToStringVarId","className":"ToString"},{"typeNames":["Lean.IR.VarId"],"name":"Lean.IR.instToFormatVarId","className":"Std.ToFormat"},{"typeNames":["Lean.IR.VarId"],"name":"Lean.IR.instHashableVarId","className":"Hashable"},{"typeNames":["Lean.IR.JoinPointId"],"name":"Lean.IR.instBEqJoinPointId","className":"BEq"},{"typeNames":["Lean.IR.JoinPointId"],"name":"Lean.IR.instToStringJoinPointId","className":"ToString"},{"typeNames":["Lean.IR.JoinPointId"],"name":"Lean.IR.instToFormatJoinPointId","className":"Std.ToFormat"},{"typeNames":["Lean.IR.JoinPointId"],"name":"Lean.IR.instHashableJoinPointId","className":"Hashable"},{"typeNames":["Lean.IR.IRType"],"name":"Lean.IR.instInhabitedIRType","className":"Inhabited"},{"typeNames":["Lean.IR.IRType"],"name":"Lean.IR.IRType.instBEqIRType","className":"BEq"},{"typeNames":["Lean.IR.Arg"],"name":"Lean.IR.instInhabitedArg","className":"Inhabited"},{"typeNames":["Lean.IR.Arg"],"name":"Lean.IR.instBEqArg","className":"BEq"},{"typeNames":["Lean.IR.LitVal"],"name":"Lean.IR.instBEqLitVal","className":"BEq"},{"typeNames":["Lean.IR.CtorInfo"],"name":"Lean.IR.instReprCtorInfo","className":"Repr"},{"typeNames":["Lean.IR.CtorInfo"],"name":"Lean.IR.instBEqCtorInfo","className":"BEq"},{"typeNames":["Lean.IR.Param"],"name":"Lean.IR.instInhabitedParam","className":"Inhabited"},{"typeNames":["Lean.IR.FnBody"],"name":"Lean.IR.instInhabitedFnBody","className":"Inhabited"},{"typeNames":["Lean.IR.Alt"],"name":"Lean.IR.instInhabitedAlt","className":"Inhabited"},{"typeNames":["Lean.IR.Decl"],"name":"Lean.IR.instInhabitedDecl","className":"Inhabited"},{"typeNames":["Lean.IR.IndexSet"],"name":"Lean.IR.instInhabitedIndexSet","className":"Inhabited"},{"typeNames":["Lean.IR.VarId"],"name":"Lean.IR.instAlphaEqvVarId","className":"Lean.IR.AlphaEqv"},{"typeNames":["Lean.IR.Arg"],"name":"Lean.IR.instAlphaEqvArg","className":"Lean.IR.AlphaEqv"},{"typeNames":["Array","Lean.IR.Arg"],"name":"Lean.IR.instAlphaEqvArrayArg","className":"Lean.IR.AlphaEqv"},{"typeNames":["Lean.IR.Expr"],"name":"Lean.IR.instAlphaEqvExpr","className":"Lean.IR.AlphaEqv"},{"typeNames":["Lean.IR.FnBody"],"name":"Lean.IR.instBEqFnBody","className":"BEq"},{"typeNames":["Lean.IR.VarIdSet"],"name":"Lean.IR.instInhabitedVarIdSet","className":"Inhabited"}],"imports":["Init","Lean.Data.KVMap","Lean.Data.Name","Lean.Data.Format","Lean.Compiler.ExternAttr"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L611-L617","name":"Lean.IR.getUnboxOpName","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.getUnboxOpName","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L605-L609","name":"Lean.IR.mkIf","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkIf","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L603-L603","name":"Lean.IR.instInhabitedVarIdSet","kind":"instance","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instInhabitedVarIdSet","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L602-L602","name":"Lean.IR.VarIdSet","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.VarIdSet","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L600-L600","name":"Lean.IR.instBEqFnBody","kind":"instance","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instBEqFnBody","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L597-L598","name":"Lean.IR.FnBody.beq","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody.beq","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L573-L595","name":"Lean.IR.FnBody.alphaEqv","kind":"opaque","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody.alphaEqv","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L564-L571","name":"Lean.IR.addParamsRename","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.addParamsRename","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L558-L562","name":"Lean.IR.addParamRename","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.addParamRename","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L555-L556","name":"Lean.IR.addVarRename","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.addVarRename","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L553-L553","name":"Lean.IR.instAlphaEqvExpr","kind":"instance","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instAlphaEqvExpr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L537-L551","name":"Lean.IR.Expr.alphaEqv","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr.alphaEqv","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L535-L535","name":"Lean.IR.instAlphaEqvArrayArg","kind":"instance","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instAlphaEqvArrayArg","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L532-L533","name":"Lean.IR.args.alphaEqv","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.args.alphaEqv","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L530-L530","name":"Lean.IR.instAlphaEqvArg","kind":"instance","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instAlphaEqvArg","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L525-L528","name":"Lean.IR.Arg.alphaEqv","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg.alphaEqv","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L523-L523","name":"Lean.IR.instAlphaEqvVarId","kind":"instance","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instAlphaEqvVarId","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L518-L521","name":"Lean.IR.VarId.alphaEqv","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId.alphaEqv","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L514-L514","name":"Lean.IR.AlphaEqv.aeqv","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.AlphaEqv.aeqv","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L513-L513","name":"Lean.IR.AlphaEqv.mk","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.AlphaEqv.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L513-L514","name":"Lean.IR.AlphaEqv","kind":"class","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.AlphaEqv","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L511-L511","name":"Lean.IR.IndexRenaming","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.IndexRenaming","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L506-L509","name":"Lean.IR.LocalContext.getValue","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContext.getValue","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L500-L504","name":"Lean.IR.LocalContext.getType","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContext.getType","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L497-L498","name":"Lean.IR.LocalContext.eraseJoinPointDecl","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContext.eraseJoinPointDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L494-L495","name":"Lean.IR.LocalContext.contains","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContext.contains","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L489-L492","name":"Lean.IR.LocalContext.isLocalVar","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContext.isLocalVar","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L484-L487","name":"Lean.IR.LocalContext.isParam","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContext.isParam","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L479-L482","name":"Lean.IR.LocalContext.getJPParams","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContext.getJPParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L474-L477","name":"Lean.IR.LocalContext.getJPBody","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContext.getJPBody","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L469-L472","name":"Lean.IR.LocalContext.isJP","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContext.isJP","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L466-L467","name":"Lean.IR.LocalContext.addParams","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContext.addParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L463-L464","name":"Lean.IR.LocalContext.addParam","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContext.addParam","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L460-L461","name":"Lean.IR.LocalContext.addJP","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContext.addJP","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L457-L458","name":"Lean.IR.LocalContext.addLocal","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContext.addLocal","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L455-L455","name":"Lean.IR.LocalContext","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContext","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L453-L453","name":"Lean.IR.LocalContextEntry.joinPoint","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContextEntry.joinPoint","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L452-L452","name":"Lean.IR.LocalContextEntry.localVar","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContextEntry.localVar","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L451-L451","name":"Lean.IR.LocalContextEntry.param","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContextEntry.param","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L450-L453","name":"Lean.IR.LocalContextEntry","kind":"inductive","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContextEntry","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L447-L448","name":"Lean.IR.mkIndexSet","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkIndexSet","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L445-L445","name":"Lean.IR.instInhabitedIndexSet","kind":"instance","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instInhabitedIndexSet","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L444-L444","name":"Lean.IR.IndexSet","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.IndexSet","doc":"Set of variable and join point names "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L440-L441","name":"Lean.IR.mkDummyExternDecl","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkDummyExternDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L436-L437","name":"Lean.IR.mkExternDecl","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkExternDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L433-L434","name":"Lean.IR.mkDecl","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L426-L429","name":"Lean.IR.Decl.updateBody!","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl.updateBody!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L422-L424","name":"Lean.IR.Decl.getInfo","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl.getInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L418-L420","name":"Lean.IR.Decl.isExtern","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl.isExtern","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L414-L416","name":"Lean.IR.Decl.resultType","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl.resultType","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L410-L412","name":"Lean.IR.Decl.params","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl.params","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L406-L408","name":"Lean.IR.Decl.name","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl.name","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L402-L402","name":"Lean.IR.instInhabitedDecl","kind":"instance","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instInhabitedDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L401-L401","name":"Lean.IR.Decl.extern","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl.extern","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L400-L400","name":"Lean.IR.Decl.fdecl","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl.fdecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L399-L402","name":"Lean.IR.Decl","kind":"inductive","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L397-L397","name":"Lean.IR.DeclInfo.sorryDep?","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.DeclInfo.sorryDep?","doc":"If `some <blame>`, then declaration depends on `<blame>` which uses a `sorry` axiom. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L395-L397","name":"Lean.IR.DeclInfo","kind":"structure","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.DeclInfo","doc":"Extra information associated with a declaration. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L391-L392","name":"Lean.IR.mkAlt","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkAlt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L386-L389","name":"Lean.IR.mmodifyJPs","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mmodifyJPs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L381-L384","name":"Lean.IR.modifyJPs","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.modifyJPs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L378-L379","name":"Lean.IR.reshape","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.reshape","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L370-L376","name":"Lean.IR.reshapeAux","kind":"opaque","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.reshapeAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L367-L368","name":"Lean.IR.FnBody.flatten","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody.flatten","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L363-L365","name":"Lean.IR.flattenAux","kind":"opaque","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.flattenAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L359-L361","name":"Lean.IR.push","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.push","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L355-L357","name":"Lean.IR.Alt.isDefault","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Alt.isDefault","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L351-L353","name":"Lean.IR.AltCore.mmodifyBody","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.AltCore.mmodifyBody","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L347-L349","name":"Lean.IR.AltCore.modifyBody","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.AltCore.modifyBody","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L343-L345","name":"Lean.IR.AltCore.setBody","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.AltCore.setBody","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L339-L341","name":"Lean.IR.AltCore.body","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.AltCore.body","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L334-L337","name":"Lean.IR.FnBody.split","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody.split","doc":"If b is a non terminal, then return a pair `(c, b')` s.t. `b == c <;> b'`,\nand c.body == FnBody.nil "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L329-L330","name":"Lean.IR.FnBody.resetBody","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody.resetBody","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L316-L327","name":"Lean.IR.FnBody.setBody","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody.setBody","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L303-L314","name":"Lean.IR.FnBody.body","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody.body","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L296-L301","name":"Lean.IR.FnBody.isTerminal","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody.isTerminal","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L294-L294","name":"Lean.IR.instInhabitedAlt","kind":"instance","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instInhabitedAlt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L292-L292","name":"Lean.IR.Alt.default","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Alt.default","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L291-L291","name":"Lean.IR.Alt.ctor","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Alt.ctor","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L290-L290","name":"Lean.IR.Alt","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Alt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L288-L288","name":"Lean.IR.mkUnreachable","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkUnreachable","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L287-L287","name":"Lean.IR.mkJmp","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkJmp","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L286-L286","name":"Lean.IR.mkRet","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkRet","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L283-L285","name":"Lean.IR.mkCase","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkCase","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L282-L282","name":"Lean.IR.mkSSet","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkSSet","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L281-L281","name":"Lean.IR.mkUSet","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkUSet","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L280-L280","name":"Lean.IR.mkJDecl","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkJDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L279-L279","name":"Lean.IR.mkVDecl","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkVDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L277-L277","name":"Lean.IR.FnBody.nil","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody.nil","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L275-L275","name":"Lean.IR.instInhabitedFnBody","kind":"instance","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instInhabitedFnBody","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L273-L273","name":"Lean.IR.FnBody.unreachable","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody.unreachable","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L271-L272","name":"Lean.IR.FnBody.jmp","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody.jmp","doc":"Jump to join point `j` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L270-L270","name":"Lean.IR.FnBody.ret","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody.ret","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L269-L269","name":"Lean.IR.FnBody.case","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody.case","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L268-L268","name":"Lean.IR.FnBody.mdata","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody.mdata","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L267-L267","name":"Lean.IR.FnBody.del","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody.del","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L264-L266","name":"Lean.IR.FnBody.dec","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody.dec","doc":"RC decrement for `object`. If c == `true`, then `inc` must check whether `x` is a tagged pointer or not.\nIf `persistent == true` then `x` is statically known to be a persistent object. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L261-L263","name":"Lean.IR.FnBody.inc","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody.inc","doc":"RC increment for `object`. If c == `true`, then `inc` must check whether `x` is a tagged pointer or not.\nIf `persistent == true` then `x` is statically known to be a persistent object. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L258-L260","name":"Lean.IR.FnBody.sset","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody.sset","doc":"Store `y : ty` at Position `sizeof(void*)*i + offset` in `x`. `x` must be a Constructor object and `RC(x)` must be 1.\n`ty` must not be `object`, `tobject`, `irrelevant` nor `Usize`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L256-L257","name":"Lean.IR.FnBody.uset","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody.uset","doc":"Store `y : Usize` at Position `sizeof(void*)*i` in `x`. `x` must be a Constructor object and `RC(x)` must be 1. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L255-L255","name":"Lean.IR.FnBody.setTag","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody.setTag","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L252-L254","name":"Lean.IR.FnBody.set","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody.set","doc":"Store `y` at Position `sizeof(void*)*i` in `x`. `x` must be a Constructor object and `RC(x)` must be 1.\nThis operation is not part of λPure is only used during optimization. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L250-L251","name":"Lean.IR.FnBody.jdecl","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody.jdecl","doc":"Join point Declaration `block_j (xs) := e; b` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L248-L249","name":"Lean.IR.FnBody.vdecl","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody.vdecl","doc":"`let x : ty := e; b` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L247-L273","name":"Lean.IR.FnBody","kind":"inductive","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L245-L245","name":"Lean.IR.AltCore.default","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.AltCore.default","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L244-L244","name":"Lean.IR.AltCore.ctor","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.AltCore.ctor","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L243-L245","name":"Lean.IR.AltCore","kind":"inductive","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.AltCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L241-L241","name":"Lean.IR.mkParam","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkParam","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L238-L238","name":"Lean.IR.instInhabitedParam","kind":"instance","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instInhabitedParam","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L237-L237","name":"Lean.IR.Param.ty","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Param.ty","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L236-L236","name":"Lean.IR.Param.borrow","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Param.borrow","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L235-L235","name":"Lean.IR.Param.x","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Param.x","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L234-L238","name":"Lean.IR.Param","kind":"structure","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Param","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L232-L232","name":"Lean.IR.mkStrExpr","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkStrExpr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L231-L231","name":"Lean.IR.mkNumExpr","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkNumExpr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L230-L230","name":"Lean.IR.mkAppExpr","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkAppExpr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L229-L229","name":"Lean.IR.mkPAppExpr","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkPAppExpr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L228-L228","name":"Lean.IR.mkFAppExpr","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkFAppExpr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L227-L227","name":"Lean.IR.mkSProjExpr","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkSProjExpr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L226-L226","name":"Lean.IR.mkUProjExpr","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkUProjExpr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L225-L225","name":"Lean.IR.mkProjExpr","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkProjExpr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L223-L224","name":"Lean.IR.mkCtorExpr","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkCtorExpr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L220-L221","name":"Lean.IR.Expr.isShared","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr.isShared","doc":"Return `1 : uint8` Iff `RC(x) > 1` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L219-L219","name":"Lean.IR.Expr.lit","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr.lit","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L217-L218","name":"Lean.IR.Expr.unbox","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr.unbox","doc":"Given `x : [t]object`, obtain the scalar value. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L214-L216","name":"Lean.IR.Expr.box","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr.box","doc":"Given `x : ty` where `ty` is a scalar type, this operation returns a value of Type `tobject`.\nFor small scalar values, the Result is a tagged pointer, and no memory allocation is performed. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L212-L213","name":"Lean.IR.Expr.ap","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr.ap","doc":"Application. `x` must be a `pap` value. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L210-L211","name":"Lean.IR.Expr.pap","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr.pap","doc":"Partial application that creates a `pap` value (aka closure in our nonstandard terminology). "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L208-L209","name":"Lean.IR.Expr.fap","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr.fap","doc":"Full application. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L206-L207","name":"Lean.IR.Expr.sproj","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr.sproj","doc":"Extract the scalar value at Position `sizeof(void*)*n + offset` from `x`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L204-L205","name":"Lean.IR.Expr.uproj","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr.uproj","doc":"Extract the `Usize` value at Position `sizeof(void*)*i` from `x`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L201-L203","name":"Lean.IR.Expr.proj","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr.proj","doc":"Extract the `tobject` value at Position `sizeof(void*)*i` from `x`.\nWe also use `proj` for extracting fields from `struct` return values, and casting `union` return values. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L199-L200","name":"Lean.IR.Expr.reuse","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr.reuse","doc":"`reuse x in ctor_i ys` instruction in the paper. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L198-L198","name":"Lean.IR.Expr.reset","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr.reset","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L194-L197","name":"Lean.IR.Expr.ctor","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr.ctor","doc":"We use `ctor` mainly for constructing Lean object/tobject values `lean_ctor_object` in the runtime.\nThis instruction is also used to creat `struct` and `union` return values.\nFor `union`, only `i.cidx` is relevant. For `struct`, `i` is irrelevant. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L193-L221","name":"Lean.IR.Expr","kind":"inductive","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L190-L191","name":"Lean.IR.CtorInfo.isScalar","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.CtorInfo.isScalar","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L187-L188","name":"Lean.IR.CtorInfo.isRef","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.CtorInfo.isRef","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L185-L185","name":"Lean.IR.instBEqCtorInfo","kind":"instance","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instBEqCtorInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L181-L183","name":"Lean.IR.CtorInfo.beq","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.CtorInfo.beq","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L179-L179","name":"Lean.IR.instReprCtorInfo","kind":"instance","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instReprCtorInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L178-L178","name":"Lean.IR.CtorInfo.ssize","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.CtorInfo.ssize","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L177-L177","name":"Lean.IR.CtorInfo.usize","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.CtorInfo.usize","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L176-L176","name":"Lean.IR.CtorInfo.size","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.CtorInfo.size","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L175-L175","name":"Lean.IR.CtorInfo.cidx","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.CtorInfo.cidx","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L174-L174","name":"Lean.IR.CtorInfo.name","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.CtorInfo.name","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L173-L179","name":"Lean.IR.CtorInfo","kind":"structure","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.CtorInfo","doc":"Constructor information.\n\n   - `name` is the Name of the Constructor in Lean.\n   - `cidx` is the Constructor index (aka tag).\n   - `size` is the number of arguments of type `object/tobject`.\n   - `usize` is the number of arguments of type `usize`.\n   - `ssize` is the number of bytes used to store scalar values.\n\nRecall that a Constructor object contains a header, then a sequence of\npointers to other Lean objects, a sequence of `USize` (i.e., `size_t`)\nscalar values, and a sequence of other scalar values. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L160-L160","name":"Lean.IR.instBEqLitVal","kind":"instance","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instBEqLitVal","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L155-L158","name":"Lean.IR.LitVal.beq","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LitVal.beq","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L153-L153","name":"Lean.IR.LitVal.str","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LitVal.str","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L152-L152","name":"Lean.IR.LitVal.num","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LitVal.num","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L151-L153","name":"Lean.IR.LitVal","kind":"inductive","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.LitVal","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L149-L149","name":"Lean.IR.mkVarArg","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.mkVarArg","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L147-L147","name":"Lean.IR.instBEqArg","kind":"instance","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instBEqArg","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L142-L145","name":"Lean.IR.Arg.beq","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg.beq","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L140-L140","name":"Lean.IR.instInhabitedArg","kind":"instance","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instInhabitedArg","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L139-L139","name":"Lean.IR.Arg.irrelevant","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg.irrelevant","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L138-L138","name":"Lean.IR.Arg.var","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg.var","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L137-L140","name":"Lean.IR.Arg","kind":"inductive","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg","doc":"Arguments to applications, constructors, etc.\nWe use `irrelevant` for Lean types, propositions and proofs that have been erased.\nRecall that for a Function `f`, we also generate `f._rarg` which does not take\n`irrelevant` arguments. However, `f._rarg` is only safe to be used in full applications. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L127-L129","name":"Lean.IR.IRType.isUnion","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType.isUnion","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L123-L125","name":"Lean.IR.IRType.isStruct","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType.isStruct","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L119-L121","name":"Lean.IR.IRType.isIrrelevant","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType.isIrrelevant","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L114-L117","name":"Lean.IR.IRType.isObj","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType.isObj","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L105-L112","name":"Lean.IR.IRType.isScalar","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType.isScalar","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L103-L103","name":"Lean.IR.IRType.instBEqIRType","kind":"instance","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType.instBEqIRType","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L89-L101","name":"Lean.IR.IRType.beq","kind":"opaque","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType.beq","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L85-L85","name":"Lean.IR.instInhabitedIRType","kind":"instance","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instInhabitedIRType","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L84-L84","name":"Lean.IR.IRType.union","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType.union","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L83-L83","name":"Lean.IR.IRType.struct","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType.struct","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L82-L82","name":"Lean.IR.IRType.tobject","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType.tobject","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L82-L82","name":"Lean.IR.IRType.object","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType.object","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L82-L82","name":"Lean.IR.IRType.irrelevant","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType.irrelevant","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L81-L81","name":"Lean.IR.IRType.usize","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType.usize","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L81-L81","name":"Lean.IR.IRType.uint64","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType.uint64","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L81-L81","name":"Lean.IR.IRType.uint32","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType.uint32","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L81-L81","name":"Lean.IR.IRType.uint16","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType.uint16","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L81-L81","name":"Lean.IR.IRType.uint8","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType.uint8","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L81-L81","name":"Lean.IR.IRType.float","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType.float","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L80-L85","name":"Lean.IR.IRType","kind":"inductive","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType","doc":"Low Level IR types. Most are self explanatory.\n\n   - `usize` represents the C++ `size_t` Type. We have it here\n      because it is 32-bit in 32-bit machines, and 64-bit in 64-bit machines,\n      and we want the C++ backend for our Compiler to generate platform independent code.\n\n   - `irrelevant` for Lean types, propositions and proofs.\n\n   - `object` a pointer to a value in the heap.\n\n   - `tobject` a pointer to a value in the heap or tagged pointer\n      (i.e., the least significant bit is 1) storing a scalar value.\n\n   - `struct` and `union` are used to return small values (e.g., `Option`, `Prod`, `Except`)\n      on the stack.\n\nRemark: the RC operations for `tobject` are slightly more expensive because we\nfirst need to test whether the `tobject` is really a pointer or not.\n\nRemark: the Lean runtime assumes that sizeof(void*) == sizeof(sizeT).\nLean cannot be compiled on old platforms where this is not True.\n\nSince values of type `struct` and `union` are only used to return values,\nWe assume they must be used/consumed \"linearly\". We use the term \"linear\" here\nto mean \"exactly once\" in each execution. That is, given `x : S`, where `S` is a struct,\nthen one of the following must hold in each (execution) branch.\n1- `x` occurs only at a single `ret x` instruction. That is, it is being consumed by being returned.\n2- `x` occurs only at a single `ctor`. That is, it is being \"consumed\" by being stored into another `struct/union`.\n3- We extract (aka project) every single field of `x` exactly once. That is, we are consuming `x` by consuming each\n   of one of its components. Minor refinement: we don't need to consume scalar fields or struct/union\n   fields that do not contain object fields.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L46-L46","name":"Lean.IR.MData.empty","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.MData.empty","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L45-L45","name":"Lean.IR.MData","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.MData","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L43-L43","name":"Lean.IR.instHashableJoinPointId","kind":"instance","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instHashableJoinPointId","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L42-L42","name":"Lean.IR.instToFormatJoinPointId","kind":"instance","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instToFormatJoinPointId","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L41-L41","name":"Lean.IR.instToStringJoinPointId","kind":"instance","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instToStringJoinPointId","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L40-L40","name":"Lean.IR.instBEqJoinPointId","kind":"instance","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instBEqJoinPointId","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L38-L38","name":"Lean.IR.instHashableVarId","kind":"instance","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instHashableVarId","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L37-L37","name":"Lean.IR.instToFormatVarId","kind":"instance","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instToFormatVarId","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L36-L36","name":"Lean.IR.instToStringVarId","kind":"instance","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instToStringVarId","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L35-L35","name":"Lean.IR.instBEqVarId","kind":"instance","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instBEqVarId","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L33-L33","name":"Lean.IR.Index.lt","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Index.lt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L31-L31","name":"Lean.IR.instInhabitedJoinPointId","kind":"instance","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instInhabitedJoinPointId","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L30-L30","name":"Lean.IR.JoinPointId.idx","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.JoinPointId.idx","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L29-L31","name":"Lean.IR.JoinPointId","kind":"structure","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.JoinPointId","doc":"Join point identifier "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L26-L26","name":"Lean.IR.instInhabitedVarId","kind":"instance","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.instInhabitedVarId","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L25-L25","name":"Lean.IR.VarId.idx","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId.idx","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L24-L26","name":"Lean.IR.VarId","kind":"structure","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId","doc":"Variable identifier "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L22-L22","name":"Lean.IR.Index","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Index","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L21-L21","name":"Lean.IR.FunId","kind":"def","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.FunId","doc":"Function identifier "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L1-L1","name":"Lean.IR.VarId.mk","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L1-L1","name":"Lean.IR.CtorInfo.mk","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.CtorInfo.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L1-L1","name":"Lean.IR.DeclInfo.mk","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.DeclInfo.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L1-L1","name":"Lean.IR.Param.mk","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.Param.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/Basic.lean#L1-L1","name":"Lean.IR.JoinPointId.mk","kind":"ctor","docLink":"./Lean/Compiler/IR/Basic.html#Lean.IR.JoinPointId.mk","doc":""}]}