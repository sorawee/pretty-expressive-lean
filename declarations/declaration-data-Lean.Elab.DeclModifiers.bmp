{"name":"Lean.Elab.DeclModifiers","instances":[{"typeNames":["Lean.Elab.Visibility"],"name":"Lean.Elab.instInhabitedVisibility","className":"Inhabited"},{"typeNames":["Lean.Elab.Visibility"],"name":"Lean.Elab.instToStringVisibility","className":"ToString"},{"typeNames":["Lean.Elab.RecKind"],"name":"Lean.Elab.instInhabitedRecKind","className":"Inhabited"},{"typeNames":["Lean.Elab.Modifiers"],"name":"Lean.Elab.instInhabitedModifiers","className":"Inhabited"},{"typeNames":["Lean.Elab.Modifiers"],"name":"Lean.Elab.instToFormatModifiers","className":"Std.ToFormat"},{"typeNames":["Lean.Elab.Modifiers"],"name":"Lean.Elab.instToStringModifiers","className":"ToString"}],"imports":["Init","Lean.Structure","Lean.Elab.Attributes"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L237-L254","name":"Lean.Elab.expandDeclId","kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.expandDeclId","doc":"Given a declaration identifier (e.g., `ident (\".{\" ident,+ \"}\")?`) that may contain explicit universe parameters\n- Ensure the new universe parameters do not shadow universe parameters declared using `universe` command.\n- Create the fully qualified named for the declaration using the current namespace, and given `modifiers`\n- Create a short version for recursively referring to the declaration. Recall that the `protected` modifier affects the generation of the short name.\n\nThe result also contains the universe parameters provided using `universe` command, and the `.{...}` notation.\n\nThis commands also stores the doc string stored in `modifiers`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L225-L225","name":"Lean.Elab.ExpandDeclIdResult.levelNames","kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.ExpandDeclIdResult.levelNames","doc":"Universe parameter names provided using the `universe` command and `.{...}` notation. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L223-L223","name":"Lean.Elab.ExpandDeclIdResult.declName","kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.ExpandDeclIdResult.declName","doc":"Fully qualified name that will be used to name the declaration in the kernel. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L221-L221","name":"Lean.Elab.ExpandDeclIdResult.shortName","kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.ExpandDeclIdResult.shortName","doc":"Short name for recursively referring to the declaration. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L219-L225","name":"Lean.Elab.ExpandDeclIdResult","kind":"structure","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.ExpandDeclIdResult","doc":"`expandDeclId` resulting type. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L210-L216","name":"Lean.Elab.expandDeclIdCore","kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.expandDeclIdCore","doc":"`declId` is of the form\n```\nleading_parser ident >> optional (\".{\" >> sepBy1 ident \", \" >> \"}\")\n```\nbut we also accept a single identifier to users to make macro writing more convenient .\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L178-L201","name":"Lean.Elab.mkDeclName","kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.mkDeclName","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L168-L176","name":"Lean.Elab.checkIfShadowingStructureField","kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.checkIfShadowingStructureField","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L154-L166","name":"Lean.Elab.applyVisibility","kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.applyVisibility","doc":"Ensure the function has not already been declared, and apply the given visibility setting to `declName`.\nIf `private`, return the updated name using our internal encoding for private names.\nIf `protected`, register `declName` as protected in the environment.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L117-L147","name":"Lean.Elab.elabModifiers","kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.elabModifiers","doc":"Elaborate declaration modifiers (i.e., attributes, `partial`, `private`, `proctected`, `unsafe`, `noncomputable`, doc string)"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L105-L110","name":"Lean.Elab.expandOptDocComment?","kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.expandOptDocComment?","doc":"Retrieve doc string from `stx` of the form `(docComment)?`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L100-L100","name":"Lean.Elab.instToStringModifiers","kind":"instance","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.instToStringModifiers","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L85-L98","name":"Lean.Elab.instToFormatModifiers","kind":"instance","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.instToFormatModifiers","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L82-L83","name":"Lean.Elab.Modifiers.addAttribute","kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.addAttribute","doc":"Store `attr` in `modifiers` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L77-L79","name":"Lean.Elab.Modifiers.isNonrec","kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.isNonrec","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L73-L75","name":"Lean.Elab.Modifiers.isPartial","kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.isPartial","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L69-L71","name":"Lean.Elab.Modifiers.isProtected","kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.isProtected","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L65-L67","name":"Lean.Elab.Modifiers.isPrivate","kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.isPrivate","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L63-L63","name":"Lean.Elab.instInhabitedModifiers","kind":"instance","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.instInhabitedModifiers","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L62-L62","name":"Lean.Elab.Modifiers.attrs","kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.attrs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L61-L61","name":"Lean.Elab.Modifiers.isUnsafe","kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.isUnsafe","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L60-L60","name":"Lean.Elab.Modifiers.recKind","kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.recKind","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L59-L59","name":"Lean.Elab.Modifiers.isNoncomputable","kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.isNoncomputable","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L58-L58","name":"Lean.Elab.Modifiers.visibility","kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.visibility","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L57-L57","name":"Lean.Elab.Modifiers.docString?","kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.docString?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L56-L63","name":"Lean.Elab.Modifiers","kind":"structure","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers","doc":"Flags and data added to declarations (eg docstrings, attributes, `private`, `unsafe`, `partial`, ...). "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L53-L53","name":"Lean.Elab.instInhabitedRecKind","kind":"instance","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.instInhabitedRecKind","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L52-L52","name":"Lean.Elab.RecKind.default","kind":"ctor","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.RecKind.default","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L52-L52","name":"Lean.Elab.RecKind.nonrec","kind":"ctor","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.RecKind.nonrec","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L52-L52","name":"Lean.Elab.RecKind.partial","kind":"ctor","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.RecKind.partial","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L51-L53","name":"Lean.Elab.RecKind","kind":"inductive","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.RecKind","doc":"Whether a declaration is default, partial or nonrec. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L44-L48","name":"Lean.Elab.instToStringVisibility","kind":"instance","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.instToStringVisibility","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L42-L42","name":"Lean.Elab.instInhabitedVisibility","kind":"instance","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.instInhabitedVisibility","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L41-L41","name":"Lean.Elab.Visibility.private","kind":"ctor","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Visibility.private","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L41-L41","name":"Lean.Elab.Visibility.protected","kind":"ctor","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Visibility.protected","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L41-L41","name":"Lean.Elab.Visibility.regular","kind":"ctor","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Visibility.regular","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L40-L42","name":"Lean.Elab.Visibility","kind":"inductive","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Visibility","doc":"Declaration visibility modifier. That is, whether a declaration is regular, protected or private. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L16-L37","name":"Lean.Elab.checkNotAlreadyDeclared","kind":"def","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.checkNotAlreadyDeclared","doc":"Ensure the environment does not contain a declaration with name `declName`.\nRecall that a private declaration cannot shadow a non-private one and vice-versa, although\nthey internally have different names.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L1-L1","name":"Lean.Elab.ExpandDeclIdResult.mk","kind":"ctor","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.ExpandDeclIdResult.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/DeclModifiers.lean#L1-L1","name":"Lean.Elab.Modifiers.mk","kind":"ctor","docLink":"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers.mk","doc":""}]}