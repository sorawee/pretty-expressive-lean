{"name":"Lean.Compiler.LCNF.Simp.DiscrM","instances":[],"imports":["Init","Lean.Compiler.LCNF.CompilerM","Lean.Compiler.LCNF.Types","Lean.Compiler.LCNF.InferType","Lean.Compiler.LCNF.Simp.Basic"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Simp/DiscrM.lean#L106-L109","name":"Lean.Compiler.LCNF.Simp.simpCtorDiscrCore?","kind":"def","docLink":"./Lean/Compiler/LCNF/Simp/DiscrM.html#Lean.Compiler.LCNF.Simp.simpCtorDiscrCore?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Simp/DiscrM.lean#L103-L104","name":"Lean.Compiler.LCNF.Simp.withDiscrCtor","kind":"def","docLink":"./Lean/Compiler/LCNF/Simp/DiscrM.html#Lean.Compiler.LCNF.Simp.withDiscrCtor","doc":"Execute `x` with the information that `discr = ctorName ctorFields`.\nWe use this information to simplify nested cases on the same discriminant.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Simp/DiscrM.lean#L89-L101","name":"Lean.Compiler.LCNF.Simp.withDiscrCtorImp.updateCtx","kind":"def","docLink":"./Lean/Compiler/LCNF/Simp/DiscrM.html#Lean.Compiler.LCNF.Simp.withDiscrCtorImp.updateCtx","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Simp/DiscrM.lean#L85-L101","name":"Lean.Compiler.LCNF.Simp.withDiscrCtorImp","kind":"def","docLink":"./Lean/Compiler/LCNF/Simp/DiscrM.html#Lean.Compiler.LCNF.Simp.withDiscrCtorImp","doc":"Execute `x` with the information that `discr = ctorName ctorFields`.\nWe use this information to simplify nested cases on the same discriminant.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Simp/DiscrM.lean#L71-L79","name":"Lean.Compiler.LCNF.Simp.getIndInfo?","kind":"def","docLink":"./Lean/Compiler/LCNF/Simp/DiscrM.html#Lean.Compiler.LCNF.Simp.getIndInfo?","doc":"If `type` is an inductive datatype, return its universe levels and parameters.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Simp/DiscrM.lean#L64-L66","name":"Lean.Compiler.LCNF.Simp.findCtorName?","kind":"def","docLink":"./Lean/Compiler/LCNF/Simp/DiscrM.html#Lean.Compiler.LCNF.Simp.findCtorName?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Simp/DiscrM.lean#L54-L62","name":"Lean.Compiler.LCNF.Simp.findCtor?","kind":"def","docLink":"./Lean/Compiler/LCNF/Simp/DiscrM.html#Lean.Compiler.LCNF.Simp.findCtor?","doc":"If `fvarId` is a constructor application, returns constructor information.\nRemark: we use the map `discrCtorMap`.\nRemark: We use this method when simplifying projections and cases-constructor.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Simp/DiscrM.lean#L47-L47","name":"Lean.Compiler.LCNF.Simp.DiscrM","kind":"def","docLink":"./Lean/Compiler/LCNF/Simp/DiscrM.html#Lean.Compiler.LCNF.Simp.DiscrM","doc":"Helper monad for tracking mappings from discriminant to constructor applications and back.\nThe combinator `withDiscrCtor` should be used when visiting `cases` alternatives.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Simp/DiscrM.lean#L41-L41","name":"Lean.Compiler.LCNF.Simp.DiscrM.Context.ctorDiscrMap","kind":"def","docLink":"./Lean/Compiler/LCNF/Simp/DiscrM.html#Lean.Compiler.LCNF.Simp.DiscrM.Context.ctorDiscrMap","doc":"A mapping from constructor application to discriminant it is equal to in the current context.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Simp/DiscrM.lean#L37-L37","name":"Lean.Compiler.LCNF.Simp.DiscrM.Context.discrCtorMap","kind":"def","docLink":"./Lean/Compiler/LCNF/Simp/DiscrM.html#Lean.Compiler.LCNF.Simp.DiscrM.Context.discrCtorMap","doc":"A mapping from discriminant to constructor application it is equal to in the current context.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Simp/DiscrM.lean#L33-L41","name":"Lean.Compiler.LCNF.Simp.DiscrM.Context","kind":"structure","docLink":"./Lean/Compiler/LCNF/Simp/DiscrM.html#Lean.Compiler.LCNF.Simp.DiscrM.Context","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Simp/DiscrM.lean#L28-L31","name":"Lean.Compiler.LCNF.Simp.CtorInfo.getNumFields","kind":"def","docLink":"./Lean/Compiler/LCNF/Simp/DiscrM.html#Lean.Compiler.LCNF.Simp.CtorInfo.getNumFields","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Simp/DiscrM.lean#L24-L26","name":"Lean.Compiler.LCNF.Simp.CtorInfo.getNumParams","kind":"def","docLink":"./Lean/Compiler/LCNF/Simp/DiscrM.html#Lean.Compiler.LCNF.Simp.CtorInfo.getNumParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Simp/DiscrM.lean#L19-L22","name":"Lean.Compiler.LCNF.Simp.CtorInfo.getName","kind":"def","docLink":"./Lean/Compiler/LCNF/Simp/DiscrM.html#Lean.Compiler.LCNF.Simp.CtorInfo.getName","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Simp/DiscrM.lean#L16-L17","name":"Lean.Compiler.LCNF.Simp.CtorInfo.natVal","kind":"ctor","docLink":"./Lean/Compiler/LCNF/Simp/DiscrM.html#Lean.Compiler.LCNF.Simp.CtorInfo.natVal","doc":"Natural numbers are morally constructor applications "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Simp/DiscrM.lean#L15-L15","name":"Lean.Compiler.LCNF.Simp.CtorInfo.ctor","kind":"ctor","docLink":"./Lean/Compiler/LCNF/Simp/DiscrM.html#Lean.Compiler.LCNF.Simp.CtorInfo.ctor","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Simp/DiscrM.lean#L14-L17","name":"Lean.Compiler.LCNF.Simp.CtorInfo","kind":"inductive","docLink":"./Lean/Compiler/LCNF/Simp/DiscrM.html#Lean.Compiler.LCNF.Simp.CtorInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Simp/DiscrM.lean#L1-L1","name":"Lean.Compiler.LCNF.Simp.DiscrM.Context.mk","kind":"ctor","docLink":"./Lean/Compiler/LCNF/Simp/DiscrM.html#Lean.Compiler.LCNF.Simp.DiscrM.Context.mk","doc":""}]}