{"name":"Lean.Elab.InfoTree.Types","instances":[{"typeNames":["Lean.Elab.ElabInfo"],"name":"Lean.Elab.instInhabitedElabInfo","className":"Inhabited"},{"typeNames":["Lean.Elab.TermInfo"],"name":"Lean.Elab.instInhabitedTermInfo","className":"Inhabited"},{"typeNames":["Lean.Elab.CommandInfo"],"name":"Lean.Elab.instInhabitedCommandInfo","className":"Inhabited"},{"typeNames":["Lean.Elab.FieldInfo"],"name":"Lean.Elab.instInhabitedFieldInfo","className":"Inhabited"},{"typeNames":["Lean.Elab.TacticInfo"],"name":"Lean.Elab.instInhabitedTacticInfo","className":"Inhabited"},{"typeNames":["Lean.Elab.MacroExpansionInfo"],"name":"Lean.Elab.instInhabitedMacroExpansionInfo","className":"Inhabited"},{"typeNames":["Lean.Elab.UserWidgetInfo"],"name":"Lean.Elab.instInhabitedUserWidgetInfo","className":"Inhabited"},{"typeNames":["Lean.Elab.Info"],"name":"Lean.Elab.instInhabitedInfo","className":"Inhabited"},{"typeNames":["Lean.Elab.InfoTree"],"name":"Lean.Elab.instInhabitedInfoTree","className":"Inhabited"},{"typeNames":["Lean.Elab.InfoState"],"name":"Lean.Elab.instInhabitedInfoState","className":"Inhabited"},{"typeNames":[],"name":"Lean.Elab.instMonadInfoTree","className":"Lean.Elab.MonadInfoTree"}],"imports":["Init","Lean.Data.Position","Lean.Data.OpenDecl","Lean.MetavarContext","Lean.Environment","Lean.Data.Json"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L207-L208","name":"Lean.Elab.setInfoState","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.setInfoState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L203-L205","name":"Lean.Elab.instMonadInfoTree","kind":"instance","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.instMonadInfoTree","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L199-L199","name":"Lean.Elab.MonadInfoTree.modifyInfoState","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.MonadInfoTree.modifyInfoState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L198-L198","name":"Lean.Elab.MonadInfoTree.getInfoState","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.MonadInfoTree.getInfoState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L197-L197","name":"Lean.Elab.MonadInfoTree.mk","kind":"ctor","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.MonadInfoTree.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L197-L199","name":"Lean.Elab.MonadInfoTree","kind":"class","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.MonadInfoTree","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L195-L195","name":"Lean.Elab.instInhabitedInfoState","kind":"instance","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.instInhabitedInfoState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L194-L194","name":"Lean.Elab.InfoState.trees","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.InfoState.trees","doc":"Pending child trees of a node. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L192-L192","name":"Lean.Elab.InfoState.assignment","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.InfoState.assignment","doc":"Map from holes in the infotree to child infotrees. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L190-L190","name":"Lean.Elab.InfoState.enabled","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.InfoState.enabled","doc":"Whether info trees should be recorded. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L188-L195","name":"Lean.Elab.InfoState","kind":"structure","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.InfoState","doc":"This structure is the state that is being used to build an InfoTree object.\nDuring elaboration, some parts of the info tree may be `holes` which need to be filled later.\nThe `assignments` field is used to assign these holes.\nThe `trees` field is a list of pending child trees for the infotree node currently being built.\n\nYou should not need to use `InfoState` directly, instead infotrees should be built with the help of the methods here\nsuch as `pushInfoLeaf` to create leaf nodes and `withInfoContext` to create a nested child node.\n\nTo see how `trees` is used, look at the function body of `withInfoContext'`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L176-L176","name":"Lean.Elab.instInhabitedInfoTree","kind":"instance","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.instInhabitedInfoTree","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L174-L175","name":"Lean.Elab.InfoTree.hole","kind":"ctor","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.InfoTree.hole","doc":"The elaborator creates holes (aka metavariables) for tactics and postponed terms "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L172-L173","name":"Lean.Elab.InfoTree.node","kind":"ctor","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.InfoTree.node","doc":"The children contain information for nested term elaboration and tactic evaluation "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L170-L171","name":"Lean.Elab.InfoTree.context","kind":"ctor","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.InfoTree.context","doc":"The context object is created by `liftTermElabM` at `Command.lean` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L169-L176","name":"Lean.Elab.InfoTree","kind":"inductive","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.InfoTree","doc":"The InfoTree is a structure that is generated during elaboration and used\nby the language server to look up information about objects at particular points\nin the Lean document. For example, tactic information and expected type information in\nthe infoview and information about completions.\n\nThe infotree consists of nodes which may have child nodes. Each node\nhas an `Info` object that contains details about what kind of information\nis present. Each `Info` object also contains a `Syntax` instance, this is used to\nmap positions in the Lean document to particular info objects.\n\nAn example of a function that extracts information from an infotree for a given\nposition is `InfoTree.goalsAt?` which finds `TacticInfo`.\n\nInformation concerning expressions requires that a context also be saved.\n`context` nodes store a local context that is used to process expressions\nin nodes below.\n\nBecause the info tree is generated during elaboration, some parts of the infotree\nfor a particular piece of syntax may not be ready yet. Hence InfoTree supports metavariable-like\n`hole`s which are filled in later in the same way that unassigned metavariables are.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L146-L146","name":"Lean.Elab.instInhabitedInfo","kind":"instance","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.instInhabitedInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L145-L145","name":"Lean.Elab.Info.ofFieldRedeclInfo","kind":"ctor","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.Info.ofFieldRedeclInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L144-L144","name":"Lean.Elab.Info.ofFVarAliasInfo","kind":"ctor","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.Info.ofFVarAliasInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L143-L143","name":"Lean.Elab.Info.ofCustomInfo","kind":"ctor","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.Info.ofCustomInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L142-L142","name":"Lean.Elab.Info.ofUserWidgetInfo","kind":"ctor","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.Info.ofUserWidgetInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L141-L141","name":"Lean.Elab.Info.ofCompletionInfo","kind":"ctor","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.Info.ofCompletionInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L140-L140","name":"Lean.Elab.Info.ofFieldInfo","kind":"ctor","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.Info.ofFieldInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L139-L139","name":"Lean.Elab.Info.ofOptionInfo","kind":"ctor","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.Info.ofOptionInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L138-L138","name":"Lean.Elab.Info.ofMacroExpansionInfo","kind":"ctor","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.Info.ofMacroExpansionInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L137-L137","name":"Lean.Elab.Info.ofCommandInfo","kind":"ctor","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.Info.ofCommandInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L136-L136","name":"Lean.Elab.Info.ofTermInfo","kind":"ctor","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.Info.ofTermInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L135-L135","name":"Lean.Elab.Info.ofTacticInfo","kind":"ctor","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.Info.ofTacticInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L134-L146","name":"Lean.Elab.Info","kind":"inductive","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.Info","doc":"Header information for a node in `InfoTree`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L131-L131","name":"Lean.Elab.FieldRedeclInfo.stx","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.FieldRedeclInfo.stx","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L130-L131","name":"Lean.Elab.FieldRedeclInfo","kind":"structure","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.FieldRedeclInfo","doc":"Contains the syntax of an identifier which is part of a field redeclaration, like:\n```\nstructure Foo := x : Nat\nstructure Bar extends Foo :=\n  x := 0\n--^ here\n```\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L119-L119","name":"Lean.Elab.FVarAliasInfo.baseId","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.FVarAliasInfo.baseId","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L118-L118","name":"Lean.Elab.FVarAliasInfo.id","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.FVarAliasInfo.id","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L117-L117","name":"Lean.Elab.FVarAliasInfo.userName","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.FVarAliasInfo.userName","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L116-L119","name":"Lean.Elab.FVarAliasInfo","kind":"structure","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.FVarAliasInfo","doc":"Specifies that the given free variables should be considered semantically identical.\nThe free variable `baseId` might not be in the current local context\nbecause it has been cleared.\nUsed for e.g. connecting variables before and after `match` generalization.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L108-L108","name":"Lean.Elab.instInhabitedUserWidgetInfo","kind":"instance","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.instInhabitedUserWidgetInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L107-L107","name":"Lean.Elab.UserWidgetInfo.props","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.UserWidgetInfo.props","doc":"Json representing the props to be loaded in to the component. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L105-L105","name":"Lean.Elab.UserWidgetInfo.widgetId","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.UserWidgetInfo.widgetId","doc":"Id of `WidgetSource` object to use. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L103-L103","name":"Lean.Elab.UserWidgetInfo.stx","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.UserWidgetInfo.stx","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L102-L108","name":"Lean.Elab.UserWidgetInfo","kind":"structure","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.UserWidgetInfo","doc":"An info that represents a user-widget.\nUser-widgets are custom pieces of code that run on the editor client.\nYou can learn about user widgets at `src/Lean/Widget/UserWidget`\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L96-L96","name":"Lean.Elab.CustomInfo.value","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.CustomInfo.value","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L95-L95","name":"Lean.Elab.CustomInfo.stx","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.CustomInfo.stx","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L94-L96","name":"Lean.Elab.CustomInfo","kind":"structure","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.CustomInfo","doc":"Dynamic info for custom use cases. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L91-L91","name":"Lean.Elab.instInhabitedMacroExpansionInfo","kind":"instance","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.instInhabitedMacroExpansionInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L90-L90","name":"Lean.Elab.MacroExpansionInfo.output","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.MacroExpansionInfo.output","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L89-L89","name":"Lean.Elab.MacroExpansionInfo.stx","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.MacroExpansionInfo.stx","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L88-L88","name":"Lean.Elab.MacroExpansionInfo.lctx","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.MacroExpansionInfo.lctx","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L87-L91","name":"Lean.Elab.MacroExpansionInfo","kind":"structure","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.MacroExpansionInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L85-L85","name":"Lean.Elab.instInhabitedTacticInfo","kind":"instance","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.instInhabitedTacticInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L84-L84","name":"Lean.Elab.TacticInfo.goalsAfter","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.TacticInfo.goalsAfter","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L83-L83","name":"Lean.Elab.TacticInfo.mctxAfter","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.TacticInfo.mctxAfter","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L82-L82","name":"Lean.Elab.TacticInfo.goalsBefore","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.TacticInfo.goalsBefore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L81-L81","name":"Lean.Elab.TacticInfo.mctxBefore","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.TacticInfo.mctxBefore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L80-L85","name":"Lean.Elab.TacticInfo","kind":"structure","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.TacticInfo","doc":"The information needed to render the tactic state in the infoview.\n\nWe store the list of goals before and after the execution of a tactic.\nWe also store the metavariable context at each time since we want metavariables\nunassigned at tactic execution time to be displayed as `?m...`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L73-L73","name":"Lean.Elab.instInhabitedFieldInfo","kind":"instance","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.instInhabitedFieldInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L72-L72","name":"Lean.Elab.FieldInfo.stx","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.FieldInfo.stx","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L71-L71","name":"Lean.Elab.FieldInfo.val","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.FieldInfo.val","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L70-L70","name":"Lean.Elab.FieldInfo.lctx","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.FieldInfo.lctx","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L69-L69","name":"Lean.Elab.FieldInfo.fieldName","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.FieldInfo.fieldName","doc":"Name of the field as written. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L67-L67","name":"Lean.Elab.FieldInfo.projName","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.FieldInfo.projName","doc":"Name of the projection. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L65-L73","name":"Lean.Elab.FieldInfo","kind":"structure","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.FieldInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L63-L63","name":"Lean.Elab.OptionInfo.declName","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.OptionInfo.declName","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L62-L62","name":"Lean.Elab.OptionInfo.optionName","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.OptionInfo.optionName","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L61-L61","name":"Lean.Elab.OptionInfo.stx","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.OptionInfo.stx","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L60-L63","name":"Lean.Elab.OptionInfo","kind":"structure","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.OptionInfo","doc":"Info for an option reference (e.g. in `set_option`). "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L56-L56","name":"Lean.Elab.CompletionInfo.tactic","kind":"ctor","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.CompletionInfo.tactic","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L55-L55","name":"Lean.Elab.CompletionInfo.endSection","kind":"ctor","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.CompletionInfo.endSection","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L54-L54","name":"Lean.Elab.CompletionInfo.option","kind":"ctor","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.CompletionInfo.option","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L53-L53","name":"Lean.Elab.CompletionInfo.namespaceId","kind":"ctor","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.CompletionInfo.namespaceId","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L52-L52","name":"Lean.Elab.CompletionInfo.fieldId","kind":"ctor","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.CompletionInfo.fieldId","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L51-L51","name":"Lean.Elab.CompletionInfo.dotId","kind":"ctor","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.CompletionInfo.dotId","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L50-L50","name":"Lean.Elab.CompletionInfo.id","kind":"ctor","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.CompletionInfo.id","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L49-L49","name":"Lean.Elab.CompletionInfo.dot","kind":"ctor","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.CompletionInfo.dot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L48-L56","name":"Lean.Elab.CompletionInfo","kind":"inductive","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.CompletionInfo","doc":"A completion is an item that appears in the [IntelliSense](https://code.visualstudio.com/docs/editor/intellisense)\nbox that appears as you type. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L44-L44","name":"Lean.Elab.instInhabitedCommandInfo","kind":"instance","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.instInhabitedCommandInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L43-L44","name":"Lean.Elab.CommandInfo","kind":"structure","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.CommandInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L41-L41","name":"Lean.Elab.instInhabitedTermInfo","kind":"instance","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.instInhabitedTermInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L40-L40","name":"Lean.Elab.TermInfo.isBinder","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.TermInfo.isBinder","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L39-L39","name":"Lean.Elab.TermInfo.expr","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.TermInfo.expr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L38-L38","name":"Lean.Elab.TermInfo.expectedType?","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.TermInfo.expectedType?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L37-L37","name":"Lean.Elab.TermInfo.lctx","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.TermInfo.lctx","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L36-L41","name":"Lean.Elab.TermInfo","kind":"structure","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.TermInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L34-L34","name":"Lean.Elab.instInhabitedElabInfo","kind":"instance","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.instInhabitedElabInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L33-L33","name":"Lean.Elab.ElabInfo.stx","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.ElabInfo.stx","doc":"The piece of syntax that the elaborator created this info for.\nNote that this also implicitly stores the code position in the syntax's SourceInfo. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L30-L30","name":"Lean.Elab.ElabInfo.elaborator","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.ElabInfo.elaborator","doc":"The name of the elaborator that created this info. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L28-L34","name":"Lean.Elab.ElabInfo","kind":"structure","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.ElabInfo","doc":"Base structure for `TermInfo`, `CommandInfo` and `TacticInfo`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L25-L25","name":"Lean.Elab.ContextInfo.ngen","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.ContextInfo.ngen","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L24-L24","name":"Lean.Elab.ContextInfo.openDecls","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.ContextInfo.openDecls","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L23-L23","name":"Lean.Elab.ContextInfo.currNamespace","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.ContextInfo.currNamespace","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L22-L22","name":"Lean.Elab.ContextInfo.options","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.ContextInfo.options","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L21-L21","name":"Lean.Elab.ContextInfo.mctx","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.ContextInfo.mctx","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L20-L20","name":"Lean.Elab.ContextInfo.fileMap","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.ContextInfo.fileMap","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L19-L19","name":"Lean.Elab.ContextInfo.env","kind":"def","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.ContextInfo.env","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L18-L25","name":"Lean.Elab.ContextInfo","kind":"structure","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.ContextInfo","doc":"Context after executing `liftTermElabM`.\nNote that the term information collected during elaboration may contain metavariables, and their\nassignments are stored at `mctx`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L1-L1","name":"Lean.Elab.OptionInfo.mk","kind":"ctor","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.OptionInfo.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L1-L1","name":"Lean.Elab.TermInfo.mk","kind":"ctor","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.TermInfo.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L1-L1","name":"Lean.Elab.FieldRedeclInfo.mk","kind":"ctor","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.FieldRedeclInfo.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L1-L1","name":"Lean.Elab.UserWidgetInfo.mk","kind":"ctor","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.UserWidgetInfo.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L1-L1","name":"Lean.Elab.MacroExpansionInfo.mk","kind":"ctor","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.MacroExpansionInfo.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L1-L1","name":"Lean.Elab.FVarAliasInfo.mk","kind":"ctor","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.FVarAliasInfo.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L1-L1","name":"Lean.Elab.ContextInfo.mk","kind":"ctor","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.ContextInfo.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L1-L1","name":"Lean.Elab.CommandInfo.mk","kind":"ctor","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.CommandInfo.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L1-L1","name":"Lean.Elab.CustomInfo.mk","kind":"ctor","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.CustomInfo.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L1-L1","name":"Lean.Elab.TacticInfo.mk","kind":"ctor","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.TacticInfo.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L1-L1","name":"Lean.Elab.InfoState.mk","kind":"ctor","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.InfoState.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L1-L1","name":"Lean.Elab.ElabInfo.mk","kind":"ctor","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.ElabInfo.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/InfoTree/Types.lean#L1-L1","name":"Lean.Elab.FieldInfo.mk","kind":"ctor","docLink":"./Lean/Elab/InfoTree/Types.html#Lean.Elab.FieldInfo.mk","doc":""}]}