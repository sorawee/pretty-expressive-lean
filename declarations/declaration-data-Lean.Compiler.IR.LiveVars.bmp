{"name":"Lean.Compiler.IR.LiveVars","instances":[{"typeNames":["Lean.IR.LiveVarSet"],"name":"Lean.IR.instInhabitedLiveVarSet","className":"Inhabited"}],"imports":["Init","Lean.Compiler.IR.Basic","Lean.Compiler.IR.FreeVars"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/LiveVars.lean#L164-L165","name":"Lean.IR.collectLiveVars","kind":"def","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.collectLiveVars","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/LiveVars.lean#L161-L162","name":"Lean.IR.updateLiveVars","kind":"def","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.updateLiveVars","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/LiveVars.lean#L155-L157","name":"Lean.IR.LiveVars.updateJPLiveVarMap","kind":"def","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.LiveVars.updateJPLiveVarMap","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/LiveVars.lean#L136-L153","name":"Lean.IR.LiveVars.collectFnBody","kind":"opaque","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.LiveVars.collectFnBody","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/LiveVars.lean#L121-L134","name":"Lean.IR.LiveVars.collectExpr","kind":"def","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.LiveVars.collectExpr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/LiveVars.lean#L92-L92","name":"Lean.IR.LiveVars.Collector","kind":"def","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.LiveVars.Collector","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/LiveVars.lean#L87-L88","name":"Lean.IR.mkLiveVarSet","kind":"def","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.mkLiveVarSet","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/LiveVars.lean#L84-L85","name":"Lean.IR.instInhabitedLiveVarSet","kind":"instance","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.instInhabitedLiveVarSet","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/LiveVars.lean#L82-L82","name":"Lean.IR.JPLiveVarMap","kind":"def","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.JPLiveVarMap","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/LiveVars.lean#L81-L81","name":"Lean.IR.LiveVarSet","kind":"def","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.LiveVarSet","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/LiveVars.lean#L78-L79","name":"Lean.IR.FnBody.hasLiveVar","kind":"def","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.FnBody.hasLiveVar","doc":"Return true if `x` is live in the function body `b` in the context `ctx`.\n\nRemark: the context only needs to contain all (free) join point declarations.\n\nRecall that we say that a join point `j` is free in `b` if `b` contains\n`FnBody.jmp j ys` and `j` is not local. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/LiveVars.lean#L45-L68","name":"Lean.IR.IsLive.visitFnBody","kind":"opaque","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.IsLive.visitFnBody","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/LiveVars.lean#L43-L43","name":"Lean.IR.IsLive.visitExpr","kind":"def","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.IsLive.visitExpr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/LiveVars.lean#L42-L42","name":"Lean.IR.IsLive.visitArgs","kind":"def","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.IsLive.visitArgs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/LiveVars.lean#L41-L41","name":"Lean.IR.IsLive.visitArg","kind":"def","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.IsLive.visitArg","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/LiveVars.lean#L40-L40","name":"Lean.IR.IsLive.visitJP","kind":"def","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.IsLive.visitJP","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/LiveVars.lean#L39-L39","name":"Lean.IR.IsLive.visitVar","kind":"def","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.IsLive.visitVar","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/IR/LiveVars.lean#L37-L37","name":"Lean.IR.IsLive.M","kind":"def","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.IsLive.M","doc":"We use `State Context` instead of `ReaderT Context Id` because we remove\nnon local joint points from `Context` whenever we visit them instead of\nmaintaining a set of visited non local join points.\n\nRemark: we don't need to track local join points because we assume there is\nno variable or join point shadowing in our IR.\n"}]}