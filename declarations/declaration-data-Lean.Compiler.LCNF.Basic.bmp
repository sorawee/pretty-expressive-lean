{"name":"Lean.Compiler.LCNF.Basic","instances":[{"typeNames":["Lean.Compiler.LCNF.Param"],"name":"Lean.Compiler.LCNF.instInhabitedParam","className":"Inhabited"},{"typeNames":["Lean.Compiler.LCNF.Param"],"name":"Lean.Compiler.LCNF.instBEqParam","className":"BEq"},{"typeNames":["Lean.Compiler.LCNF.AltCore"],"name":"Lean.Compiler.LCNF.instInhabitedAltCore","className":"Inhabited"},{"typeNames":["Lean.Compiler.LCNF.LitValue"],"name":"Lean.Compiler.LCNF.instInhabitedLitValue","className":"Inhabited"},{"typeNames":["Lean.Compiler.LCNF.LitValue"],"name":"Lean.Compiler.LCNF.instBEqLitValue","className":"BEq"},{"typeNames":["Lean.Compiler.LCNF.LitValue"],"name":"Lean.Compiler.LCNF.instHashableLitValue","className":"Hashable"},{"typeNames":["Lean.Compiler.LCNF.Arg"],"name":"Lean.Compiler.LCNF.instInhabitedArg","className":"Inhabited"},{"typeNames":["Lean.Compiler.LCNF.Arg"],"name":"Lean.Compiler.LCNF.instBEqArg","className":"BEq"},{"typeNames":["Lean.Compiler.LCNF.Arg"],"name":"Lean.Compiler.LCNF.instHashableArg","className":"Hashable"},{"typeNames":["Lean.Compiler.LCNF.LetValue"],"name":"Lean.Compiler.LCNF.instInhabitedLetValue","className":"Inhabited"},{"typeNames":["Lean.Compiler.LCNF.LetValue"],"name":"Lean.Compiler.LCNF.instBEqLetValue","className":"BEq"},{"typeNames":["Lean.Compiler.LCNF.LetValue"],"name":"Lean.Compiler.LCNF.instHashableLetValue","className":"Hashable"},{"typeNames":["Lean.Compiler.LCNF.LetDecl"],"name":"Lean.Compiler.LCNF.instInhabitedLetDecl","className":"Inhabited"},{"typeNames":["Lean.Compiler.LCNF.LetDecl"],"name":"Lean.Compiler.LCNF.instBEqLetDecl","className":"BEq"},{"typeNames":["Lean.Compiler.LCNF.FunDeclCore"],"name":"Lean.Compiler.LCNF.instInhabitedFunDeclCore","className":"Inhabited"},{"typeNames":["Lean.Compiler.LCNF.CasesCore"],"name":"Lean.Compiler.LCNF.instInhabitedCasesCore","className":"Inhabited"},{"typeNames":["Lean.Compiler.LCNF.Code"],"name":"Lean.Compiler.LCNF.instInhabitedCode","className":"Inhabited"},{"typeNames":["Lean.Compiler.LCNF.CodeDecl"],"name":"Lean.Compiler.LCNF.instInhabitedCodeDecl","className":"Inhabited"},{"typeNames":["Lean.Compiler.LCNF.Code"],"name":"Lean.Compiler.LCNF.instBEqCode","className":"BEq"},{"typeNames":["Lean.Compiler.LCNF.FunDecl"],"name":"Lean.Compiler.LCNF.instBEqFunDecl","className":"BEq"},{"typeNames":["Lean.Compiler.LCNF.Decl"],"name":"Lean.Compiler.LCNF.instInhabitedDecl","className":"Inhabited"},{"typeNames":["Lean.Compiler.LCNF.Decl"],"name":"Lean.Compiler.LCNF.instBEqDecl","className":"BEq"}],"imports":["Init","Lean.Expr","Lean.Meta.Instances","Lean.Compiler.InlineAttrs","Lean.Compiler.Specialize","Lean.Compiler.LCNF.Types"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L702-L706","name":"Lean.Compiler.LCNF.instantiateRevRangeArgs","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instantiateRevRangeArgs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L696-L700","name":"Lean.Compiler.LCNF.instantiateRangeArgs","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instantiateRangeArgs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L693-L694","name":"Lean.Compiler.LCNF.markRecDecls.go","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.markRecDecls.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L682-L691","name":"Lean.Compiler.LCNF.markRecDecls.visit","kind":"opaque","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.markRecDecls.visit","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L674-L694","name":"Lean.Compiler.LCNF.markRecDecls","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.markRecDecls","doc":"Traverse the given block of potentially mutually recursive functions\nand mark a declaration `f` as recursive if there is an application\n`f ...` in the block.\nThis is an overapproximation, and relies on the fact that our frontend\ncomputes strongly connected components.\nSee comment at `recursive` field.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L663-L664","name":"Lean.Compiler.LCNF.collectUsedAtExpr","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.collectUsedAtExpr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L647-L660","name":"Lean.Compiler.LCNF.Code.collectUsed","kind":"opaque","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.collectUsed","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L644-L645","name":"Lean.Compiler.LCNF.FunDeclCore.collectUsed","kind":"opaque","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDeclCore.collectUsed","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L605-L613","name":"Lean.Compiler.LCNF.Decl.isTemplateLike","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.isTemplateLike","doc":"Return `true` if `decl` is supposed to be inlined/specialized.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L597-L600","name":"Lean.Compiler.LCNF.hasLocalInst","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.hasLocalInst","doc":"Return `true` if the arrow type contains an instance implicit argument.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L585-L592","name":"Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instCode","kind":"opaque","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instCode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L582-L583","name":"Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instFunDecl","kind":"opaque","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instFunDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L579-L580","name":"Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instLetDecl","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instLetDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L573-L577","name":"Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instLetValue","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instLetValue","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L568-L571","name":"Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instArg","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instArg","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L563-L566","name":"Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instAlt","kind":"opaque","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instAlt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L560-L561","name":"Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instParams","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L557-L558","name":"Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instExpr","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instExpr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L554-L555","name":"Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instLevel","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.instantiateValueLevelParams.instLevel","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L551-L592","name":"Lean.Compiler.LCNF.Decl.instantiateValueLevelParams","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.instantiateValueLevelParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L548-L549","name":"Lean.Compiler.LCNF.Decl.instantiateParamsLevelParams","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.instantiateParamsLevelParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L545-L546","name":"Lean.Compiler.LCNF.Decl.instantiateTypeLevelParams","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.instantiateTypeLevelParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L539-L543","name":"Lean.Compiler.LCNF.Decl.isCasesOnParam?.go","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.isCasesOnParam?.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L536-L543","name":"Lean.Compiler.LCNF.Decl.isCasesOnParam?","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.isCasesOnParam?","doc":"Return `some i` if `decl` is of the form\n```\ndef f (a_0 ... a_i ...) :=\n  ...\n  cases a_i\n  | ...\n  | ...\n```\nThat is, `f` is a sequence of declarations followed by a `cases` on the parameter `i`.\nWe use this function to decide whether we should inline a declaration tagged with\n`[inline_if_reduce]` or not.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L517-L521","name":"Lean.Compiler.LCNF.Decl.inlineable","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.inlineable","doc":"Return `true` if the given declaration has been annotated with `[inline]`, `[inline_if_reduce]`, `[macro_inline]`, or `[always_inline]` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L513-L514","name":"Lean.Compiler.LCNF.Decl.alwaysInlineAttr","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.alwaysInlineAttr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L510-L511","name":"Lean.Compiler.LCNF.Decl.inlineIfReduceAttr","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.inlineIfReduceAttr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L507-L508","name":"Lean.Compiler.LCNF.Decl.noinlineAttr","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.noinlineAttr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L504-L505","name":"Lean.Compiler.LCNF.Decl.inlineAttr","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.inlineAttr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L501-L502","name":"Lean.Compiler.LCNF.Decl.getArity","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.getArity","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L498-L499","name":"Lean.Compiler.LCNF.Decl.size","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.size","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L496-L496","name":"Lean.Compiler.LCNF.instBEqDecl","kind":"instance","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instBEqDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L496-L496","name":"Lean.Compiler.LCNF.instInhabitedDecl","kind":"instance","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instInhabitedDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L495-L495","name":"Lean.Compiler.LCNF.Decl.inlineAttr?","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.inlineAttr?","doc":"We store the inline attribute at LCNF declarations to make sure we can set them for\nauxliary declarations created during compilation.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L490-L490","name":"Lean.Compiler.LCNF.Decl.safe","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.safe","doc":"We set this flag to false during LCNF conversion if the Lean function\nassociated with this function was tagged as partial or unsafe. This\ninformation affects how static analyzers treat function applications\nof this kind. See `DefinitionSafety`.\n`partial` and `unsafe` functions may not be terminating, but Lean\nfunctions terminate, and some static analyzers exploit this\nfact. So, we use the following semantics. Suppose whe hav a (large) natural\nnumber `C`. We consider a nondeterministic model for computation of Lean expressions as\nfollows:\nEach call to a partial/unsafe function uses up one \"recursion token\".\nPrior to consuming `C` recursion tokens all partial functions must be called\nas normal. Once the model has used up `C` recursion tokens, a subsequent call to\na partial function has the following nondeterministic options: it can either call\nthe function again, or return any value of the target type (even a noncomputable one).\nLarger values of `C` yield less nondeterminism in the model, but even the intersection of\nall choices of `C` yields nondeterminism where `def loop : A := loop` returns any value of type `A`.\nThe compiler fixes a choice for `C`. This is a fixed constant greater than 2^2^64,\nwhich is allowed to be compiler and architecture dependent, and promises that it will\nproduce an execution consistent with every possible nondeterministic outcome of the `C`-model.\nIn the event that different nondeterministic executions disagree, the compiler is required to\nexhaust resources or output a looping computation.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L466-L466","name":"Lean.Compiler.LCNF.Decl.recursive","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.recursive","doc":"We set this flag to true during LCNF conversion. When we receive\na block of functions to be compiled, we set this flag to `true`\nif there is an application to the function in the block containing\nit. This is an approximation, but it should be good enough because\nin the frontend, we invoke the compiler with blocks of strongly connected\ncomponents only.\nWe use this information to control inlining.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L456-L456","name":"Lean.Compiler.LCNF.Decl.value","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.value","doc":"The body of the declaration, usually changes as it progresses\nthrough compiler passes.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L451-L451","name":"Lean.Compiler.LCNF.Decl.params","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.params","doc":"Parameters.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L447-L447","name":"Lean.Compiler.LCNF.Decl.type","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.type","doc":"The type of the declaration. Note that this is an erased LCNF type\ninstead of the fully dependent one that might have been the original\ntype of the declaration in the `Environment`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L441-L441","name":"Lean.Compiler.LCNF.Decl.levelParams","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.levelParams","doc":"Universe level parameter names.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L437-L437","name":"Lean.Compiler.LCNF.Decl.name","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.name","doc":"The name of the declaration from the `Environment` it came from\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L433-L496","name":"Lean.Compiler.LCNF.Decl","kind":"structure","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl","doc":"Declaration being processed by the Lean to Lean compiler passes.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L422-L428","name":"Lean.Compiler.LCNF.Code.forM.go","kind":"opaque","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.forM.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L419-L428","name":"Lean.Compiler.LCNF.Code.forM","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.forM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L411-L417","name":"Lean.Compiler.LCNF.Code.sizeLe.go","kind":"opaque","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.sizeLe.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L407-L409","name":"Lean.Compiler.LCNF.Code.sizeLe.inc","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.sizeLe.inc","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L402-L417","name":"Lean.Compiler.LCNF.Code.sizeLe","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.sizeLe","doc":"Return true iff `c.size ≤ n` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L393-L399","name":"Lean.Compiler.LCNF.Code.size.go","kind":"opaque","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.size.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L390-L399","name":"Lean.Compiler.LCNF.Code.size","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.size","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L386-L388","name":"Lean.Compiler.LCNF.Code.isReturnOf","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.isReturnOf","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L382-L384","name":"Lean.Compiler.LCNF.Code.isFun","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.isFun","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L378-L380","name":"Lean.Compiler.LCNF.Code.isDecl","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.isDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L375-L376","name":"Lean.Compiler.LCNF.AltCore.mapCodeM","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.AltCore.mapCodeM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L366-L373","name":"Lean.Compiler.LCNF.CasesCore.extractAlt!","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.CasesCore.extractAlt!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L364-L364","name":"Lean.Compiler.LCNF.FunDeclCore.updateCore","kind":"opaque","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDeclCore.updateCore","doc":"Low-level update `FunDecl` function. It does not update the local context.\nConsider using `FunDecl.update : LetDecl → Expr → Array Param → Code → CompilerM FunDecl` if you want the local context\nto be updated.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L351-L351","name":"Lean.Compiler.LCNF.LetDecl.updateCore","kind":"opaque","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetDecl.updateCore","doc":"Low-level update `LetDecl` function. It does not update the local context.\nConsider using `LetDecl.update : LetDecl → Expr → Expr → CompilerM LetDecl` if you want the local context\nto be updated.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L338-L338","name":"Lean.Compiler.LCNF.Param.updateCore","kind":"opaque","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param.updateCore","doc":"Low-level update `Param` function. It does not update the local context.\nConsider using `Param.update : Param → Expr → CompilerM Param` if you want the local context\nto be updated.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L325-L325","name":"Lean.Compiler.LCNF.Code.updateUnreach!","kind":"opaque","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.updateUnreach!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L318-L318","name":"Lean.Compiler.LCNF.Code.updateJmp!","kind":"opaque","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.updateJmp!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L311-L311","name":"Lean.Compiler.LCNF.Code.updateReturn!","kind":"opaque","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.updateReturn!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L304-L304","name":"Lean.Compiler.LCNF.Code.updateFun!","kind":"opaque","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.updateFun!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L296-L296","name":"Lean.Compiler.LCNF.Code.updateCont!","kind":"opaque","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.updateCont!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L287-L287","name":"Lean.Compiler.LCNF.Code.updateLet!","kind":"opaque","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.updateLet!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L280-L280","name":"Lean.Compiler.LCNF.Code.updateCases!","kind":"opaque","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.updateCases!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L273-L273","name":"Lean.Compiler.LCNF.Code.updateAlts!","kind":"opaque","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.updateAlts!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L266-L266","name":"Lean.Compiler.LCNF.AltCore.updateAlt!","kind":"opaque","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.AltCore.updateAlt!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L259-L259","name":"Lean.Compiler.LCNF.AltCore.updateCode","kind":"opaque","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.AltCore.updateCode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L249-L252","name":"Lean.Compiler.LCNF.AltCore.forCodeM","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.AltCore.forCodeM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L245-L247","name":"Lean.Compiler.LCNF.AltCore.getParams","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.AltCore.getParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L241-L243","name":"Lean.Compiler.LCNF.AltCore.getCode","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.AltCore.getCode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L238-L239","name":"Lean.Compiler.LCNF.instBEqFunDecl","kind":"instance","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instBEqFunDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L236-L236","name":"Lean.Compiler.LCNF.FunDecl.beq","kind":"opaque","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDecl.beq","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L233-L234","name":"Lean.Compiler.LCNF.instBEqCode","kind":"instance","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instBEqCode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L231-L231","name":"Lean.Compiler.LCNF.Code.beq","kind":"opaque","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.beq","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L189-L196","name":"Lean.Compiler.LCNF.attachCodeDecls.go","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.attachCodeDecls.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L186-L196","name":"Lean.Compiler.LCNF.attachCodeDecls","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.attachCodeDecls","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L183-L184","name":"Lean.Compiler.LCNF.CodeDecl.fvarId","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.CodeDecl.fvarId","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L181-L181","name":"Lean.Compiler.LCNF.instInhabitedCodeDecl","kind":"instance","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instInhabitedCodeDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L180-L180","name":"Lean.Compiler.LCNF.CodeDecl.jp","kind":"ctor","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.CodeDecl.jp","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L179-L179","name":"Lean.Compiler.LCNF.CodeDecl.fun","kind":"ctor","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.CodeDecl.fun","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L178-L178","name":"Lean.Compiler.LCNF.CodeDecl.let","kind":"ctor","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.CodeDecl.let","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L177-L181","name":"Lean.Compiler.LCNF.CodeDecl","kind":"inductive","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.CodeDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L171-L175","name":"Lean.Compiler.LCNF.CasesCore.getCtorNames","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.CasesCore.getCtorNames","doc":"Return the constructor names that have an explicit (non-default) alternative.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L166-L166","name":"Lean.Compiler.LCNF.Cases","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Cases","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L165-L165","name":"Lean.Compiler.LCNF.FunDecl","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L164-L164","name":"Lean.Compiler.LCNF.Alt","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Alt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L162-L162","name":"Lean.Compiler.LCNF.instInhabitedCode","kind":"instance","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instInhabitedCode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L161-L161","name":"Lean.Compiler.LCNF.Code.unreach","kind":"ctor","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.unreach","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L160-L160","name":"Lean.Compiler.LCNF.Code.return","kind":"ctor","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.return","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L159-L159","name":"Lean.Compiler.LCNF.Code.cases","kind":"ctor","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.cases","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L158-L158","name":"Lean.Compiler.LCNF.Code.jmp","kind":"ctor","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.jmp","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L157-L157","name":"Lean.Compiler.LCNF.Code.jp","kind":"ctor","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.jp","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L156-L156","name":"Lean.Compiler.LCNF.Code.fun","kind":"ctor","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.fun","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L155-L155","name":"Lean.Compiler.LCNF.Code.let","kind":"ctor","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code.let","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L154-L162","name":"Lean.Compiler.LCNF.Code","kind":"inductive","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L152-L152","name":"Lean.Compiler.LCNF.instInhabitedCasesCore","kind":"instance","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instInhabitedCasesCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L151-L151","name":"Lean.Compiler.LCNF.CasesCore.alts","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.CasesCore.alts","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L150-L150","name":"Lean.Compiler.LCNF.CasesCore.discr","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.CasesCore.discr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L149-L149","name":"Lean.Compiler.LCNF.CasesCore.resultType","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.CasesCore.resultType","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L148-L148","name":"Lean.Compiler.LCNF.CasesCore.typeName","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.CasesCore.typeName","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L147-L147","name":"Lean.Compiler.LCNF.CasesCore.mk","kind":"ctor","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.CasesCore.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L147-L152","name":"Lean.Compiler.LCNF.CasesCore","kind":"structure","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.CasesCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L144-L145","name":"Lean.Compiler.LCNF.FunDeclCore.getArity","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDeclCore.getArity","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L142-L142","name":"Lean.Compiler.LCNF.instInhabitedFunDeclCore","kind":"instance","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instInhabitedFunDeclCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L141-L141","name":"Lean.Compiler.LCNF.FunDeclCore.value","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDeclCore.value","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L140-L140","name":"Lean.Compiler.LCNF.FunDeclCore.type","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDeclCore.type","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L139-L139","name":"Lean.Compiler.LCNF.FunDeclCore.params","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDeclCore.params","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L138-L138","name":"Lean.Compiler.LCNF.FunDeclCore.binderName","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDeclCore.binderName","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L137-L137","name":"Lean.Compiler.LCNF.FunDeclCore.fvarId","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDeclCore.fvarId","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L136-L136","name":"Lean.Compiler.LCNF.FunDeclCore.mk","kind":"ctor","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDeclCore.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L136-L142","name":"Lean.Compiler.LCNF.FunDeclCore","kind":"structure","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDeclCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L134-L134","name":"Lean.Compiler.LCNF.instBEqLetDecl","kind":"instance","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instBEqLetDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L134-L134","name":"Lean.Compiler.LCNF.instInhabitedLetDecl","kind":"instance","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instInhabitedLetDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L133-L133","name":"Lean.Compiler.LCNF.LetDecl.value","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetDecl.value","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L132-L132","name":"Lean.Compiler.LCNF.LetDecl.type","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetDecl.type","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L131-L131","name":"Lean.Compiler.LCNF.LetDecl.binderName","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetDecl.binderName","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L130-L130","name":"Lean.Compiler.LCNF.LetDecl.fvarId","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetDecl.fvarId","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L129-L134","name":"Lean.Compiler.LCNF.LetDecl","kind":"structure","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L120-L127","name":"Lean.Compiler.LCNF.LetValue.toExpr","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetValue.toExpr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L118-L118","name":"Lean.Compiler.LCNF.LetValue.updateArgs!","kind":"opaque","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetValue.updateArgs!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L110-L110","name":"Lean.Compiler.LCNF.LetValue.updateFVar!","kind":"opaque","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetValue.updateFVar!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L103-L103","name":"Lean.Compiler.LCNF.LetValue.updateConst!","kind":"opaque","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetValue.updateConst!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L96-L96","name":"Lean.Compiler.LCNF.LetValue.updateProj!","kind":"opaque","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetValue.updateProj!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L86-L89","name":"Lean.Compiler.LCNF.Arg.toLetValue","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Arg.toLetValue","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L84-L84","name":"Lean.Compiler.LCNF.instHashableLetValue","kind":"instance","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instHashableLetValue","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L84-L84","name":"Lean.Compiler.LCNF.instBEqLetValue","kind":"instance","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instBEqLetValue","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L84-L84","name":"Lean.Compiler.LCNF.instInhabitedLetValue","kind":"instance","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instInhabitedLetValue","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L82-L82","name":"Lean.Compiler.LCNF.LetValue.fvar","kind":"ctor","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetValue.fvar","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L81-L81","name":"Lean.Compiler.LCNF.LetValue.const","kind":"ctor","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetValue.const","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L80-L80","name":"Lean.Compiler.LCNF.LetValue.proj","kind":"ctor","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetValue.proj","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L79-L79","name":"Lean.Compiler.LCNF.LetValue.erased","kind":"ctor","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetValue.erased","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L78-L78","name":"Lean.Compiler.LCNF.LetValue.value","kind":"ctor","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetValue.value","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L77-L84","name":"Lean.Compiler.LCNF.LetValue","kind":"inductive","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetValue","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L75-L75","name":"Lean.Compiler.LCNF.Arg.updateFVar!","kind":"opaque","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Arg.updateFVar!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L68-L68","name":"Lean.Compiler.LCNF.Arg.updateType!","kind":"opaque","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Arg.updateType!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L57-L61","name":"Lean.Compiler.LCNF.Arg.toExpr","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Arg.toExpr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L54-L55","name":"Lean.Compiler.LCNF.Param.toArg","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param.toArg","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L52-L52","name":"Lean.Compiler.LCNF.instHashableArg","kind":"instance","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instHashableArg","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L52-L52","name":"Lean.Compiler.LCNF.instBEqArg","kind":"instance","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instBEqArg","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L52-L52","name":"Lean.Compiler.LCNF.instInhabitedArg","kind":"instance","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instInhabitedArg","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L51-L51","name":"Lean.Compiler.LCNF.Arg.type","kind":"ctor","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Arg.type","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L50-L50","name":"Lean.Compiler.LCNF.Arg.fvar","kind":"ctor","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Arg.fvar","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L49-L49","name":"Lean.Compiler.LCNF.Arg.erased","kind":"ctor","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Arg.erased","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L48-L52","name":"Lean.Compiler.LCNF.Arg","kind":"inductive","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Arg","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L44-L46","name":"Lean.Compiler.LCNF.LitValue.toExpr","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LitValue.toExpr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L42-L42","name":"Lean.Compiler.LCNF.instHashableLitValue","kind":"instance","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instHashableLitValue","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L42-L42","name":"Lean.Compiler.LCNF.instBEqLitValue","kind":"instance","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instBEqLitValue","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L42-L42","name":"Lean.Compiler.LCNF.instInhabitedLitValue","kind":"instance","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instInhabitedLitValue","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L40-L40","name":"Lean.Compiler.LCNF.LitValue.strVal","kind":"ctor","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LitValue.strVal","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L39-L39","name":"Lean.Compiler.LCNF.LitValue.natVal","kind":"ctor","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LitValue.natVal","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L38-L42","name":"Lean.Compiler.LCNF.LitValue","kind":"inductive","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LitValue","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L36-L36","name":"Lean.Compiler.LCNF.instInhabitedAltCore","kind":"instance","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instInhabitedAltCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L35-L35","name":"Lean.Compiler.LCNF.AltCore.default","kind":"ctor","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.AltCore.default","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L34-L34","name":"Lean.Compiler.LCNF.AltCore.alt","kind":"ctor","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.AltCore.alt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L33-L36","name":"Lean.Compiler.LCNF.AltCore","kind":"inductive","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.AltCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L30-L31","name":"Lean.Compiler.LCNF.Param.toExpr","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param.toExpr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L28-L28","name":"Lean.Compiler.LCNF.instBEqParam","kind":"instance","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instBEqParam","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L28-L28","name":"Lean.Compiler.LCNF.instInhabitedParam","kind":"instance","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.instInhabitedParam","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L27-L27","name":"Lean.Compiler.LCNF.Param.borrow","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param.borrow","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L26-L26","name":"Lean.Compiler.LCNF.Param.type","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param.type","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L25-L25","name":"Lean.Compiler.LCNF.Param.binderName","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param.binderName","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L24-L24","name":"Lean.Compiler.LCNF.Param.fvarId","kind":"def","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param.fvarId","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L23-L28","name":"Lean.Compiler.LCNF.Param","kind":"structure","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L1-L1","name":"Lean.Compiler.LCNF.Param.mk","kind":"ctor","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L1-L1","name":"Lean.Compiler.LCNF.Decl.mk","kind":"ctor","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Basic.lean#L1-L1","name":"Lean.Compiler.LCNF.LetDecl.mk","kind":"ctor","docLink":"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetDecl.mk","doc":""}]}