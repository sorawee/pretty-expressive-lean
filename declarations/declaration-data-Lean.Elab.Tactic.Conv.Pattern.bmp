{"name":"Lean.Elab.Tactic.Conv.Pattern","instances":[],"imports":["Init","Lean.Elab.Tactic.Simp","Lean.Elab.Tactic.Conv.Basic","Lean.HeadIndex"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Conv/Pattern.lean#L104-L141","name":"Lean.Elab.Tactic.Conv.evalPattern","kind":"def","docLink":"./Lean/Elab/Tactic/Conv/Pattern.html#Lean.Elab.Tactic.Conv.evalPattern","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Conv/Pattern.lean#L76-L79","name":"Lean.Elab.Tactic.Conv.PatternMatchState.accept","kind":"def","docLink":"./Lean/Elab/Tactic/Conv/Pattern.html#Lean.Elab.Tactic.Conv.PatternMatchState.accept","doc":"Assuming `isReady` returned true, this adds the generated subgoal to the list\nand advances to the next match.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Conv/Pattern.lean#L68-L70","name":"Lean.Elab.Tactic.Conv.PatternMatchState.skip","kind":"def","docLink":"./Lean/Elab/Tactic/Conv/Pattern.html#Lean.Elab.Tactic.Conv.PatternMatchState.skip","doc":"Assuming `isReady` returned false, this advances to the next match. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Conv/Pattern.lean#L62-L65","name":"Lean.Elab.Tactic.Conv.PatternMatchState.isReady","kind":"def","docLink":"./Lean/Elab/Tactic/Conv/Pattern.html#Lean.Elab.Tactic.Conv.PatternMatchState.isReady","doc":"Is this pattern interested in accepting the next match? "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Conv/Pattern.lean#L57-L59","name":"Lean.Elab.Tactic.Conv.PatternMatchState.isDone","kind":"def","docLink":"./Lean/Elab/Tactic/Conv/Pattern.html#Lean.Elab.Tactic.Conv.PatternMatchState.isDone","doc":"Is this pattern no longer interested in accepting matches? "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Conv/Pattern.lean#L43-L52","name":"Lean.Elab.Tactic.Conv.PatternMatchState.occs","kind":"ctor","docLink":"./Lean/Elab/Tactic/Conv/Pattern.html#Lean.Elab.Tactic.Conv.PatternMatchState.occs","doc":"The state corresponding to a partially consumed `(occs := a₁ a₂ ...)` pattern.\n* `subgoals` is the list of subgoals for patterns already matched,\n  along with their index in the original occs list\n* `idx` is the number of matches that have occurred so far\n* `remaining` is a list of `(i, orig)` pairs representing matches we have not yet reached.\n  We maintain the invariant that `idx :: remaining.map (·.1)` is sorted.\n  The number `i` is the value in the `occs` list and `orig` is its index in the list.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Conv/Pattern.lean#L37-L42","name":"Lean.Elab.Tactic.Conv.PatternMatchState.all","kind":"ctor","docLink":"./Lean/Elab/Tactic/Conv/Pattern.html#Lean.Elab.Tactic.Conv.PatternMatchState.all","doc":"The state corresponding to a `(occs := *)` pattern, which acts like `occs := 1 2 ... n` where\n`n` is the total number of pattern matches.\n* `subgoals` is the list of subgoals for patterns already matched\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Conv/Pattern.lean#L36-L52","name":"Lean.Elab.Tactic.Conv.PatternMatchState","kind":"inductive","docLink":"./Lean/Elab/Tactic/Conv/Pattern.html#Lean.Elab.Tactic.Conv.PatternMatchState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Conv/Pattern.lean#L25-L33","name":"Lean.Elab.Tactic.Conv.matchPattern?.go?","kind":"opaque","docLink":"./Lean/Elab/Tactic/Conv/Pattern.html#Lean.Elab.Tactic.Conv.matchPattern?.go?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Conv/Pattern.lean#L20-L34","name":"Lean.Elab.Tactic.Conv.matchPattern?","kind":"def","docLink":"./Lean/Elab/Tactic/Conv/Pattern.html#Lean.Elab.Tactic.Conv.matchPattern?","doc":""}]}