{"name":"Lean.Parser.Basic","instances":[{"typeNames":["Lean.Parser.Parser"],"name":"Lean.Parser.instAndThenParser","className":"AndThen"},{"typeNames":["Lean.Parser.OrElseOnAntiquotBehavior"],"name":"Lean.Parser.instBEqOrElseOnAntiquotBehavior","className":"BEq"},{"typeNames":["Lean.Parser.Parser"],"name":"Lean.Parser.instOrElseParser","className":"OrElse"},{"typeNames":["Lean.Parser.TokenMap"],"name":"Lean.Parser.TokenMap.instInhabitedTokenMap","className":"Inhabited"},{"typeNames":["Lean.Parser.TokenMap"],"name":"Lean.Parser.TokenMap.instEmptyCollectionTokenMap","className":"EmptyCollection"},{"typeNames":["Lean.Parser.TokenMap","Prod","Lean.Name","List"],"name":"Lean.Parser.TokenMap.instForInTokenMapProdNameList","className":"ForIn"},{"typeNames":["Lean.Parser.PrattParsingTables"],"name":"Lean.Parser.instInhabitedPrattParsingTables","className":"Inhabited"},{"typeNames":["Lean.Parser.LeadingIdentBehavior"],"name":"Lean.Parser.instInhabitedLeadingIdentBehavior","className":"Inhabited"},{"typeNames":["Lean.Parser.LeadingIdentBehavior"],"name":"Lean.Parser.instBEqLeadingIdentBehavior","className":"BEq"},{"typeNames":["Lean.Parser.LeadingIdentBehavior"],"name":"Lean.Parser.instReprLeadingIdentBehavior","className":"Repr"},{"typeNames":["Lean.Parser.ParserCategory"],"name":"Lean.Parser.instInhabitedParserCategory","className":"Inhabited"},{"typeNames":["String","Lean.Parser.Parser"],"name":"Lean.Parser.instCoeStringParser","className":"Coe"}],"imports":["Init","Lean.Parser.Types"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1652-L1653","name":"Lean.Syntax.forArgsM","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Syntax.forArgsM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1649-L1650","name":"Lean.Syntax.foldArgs","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Syntax.foldArgs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1646-L1647","name":"Lean.Syntax.foldArgsM","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Syntax.foldArgsM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1634-L1637","name":"Lean.Parser.skip","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.skip","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1628-L1632","name":"Lean.Parser.fieldIdx","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.fieldIdx","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1618-L1626","name":"Lean.Parser.fieldIdxFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.fieldIdxFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1611-L1616","name":"Lean.Parser.prattParser","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.prattParser","doc":"Implements a variant of Pratt's algorithm. In Pratt's algorithms tokens have a right and left binding power.\nIn our implementation, parsers have precedence instead. This method selects a parser (or more, via\n`longestMatchFn`) from `leadingTable` based on the current token. Note that the unindexed `leadingParsers` parsers\nare also tried. We have the unidexed `leadingParsers` because some parsers do not have a \"first token\". Example:\n```\nsyntax term:51 \"â‰¤\" ident \"<\" term \"|\" term : index\n```\nExample, in principle, the set of first tokens for this parser is any token that can start a term, but this set\nis always changing. Thus, this parsing rule is stored as an unindexed leading parser at `leadingParsers`.\nAfter processing the leading parser, we chain with parsers from `trailingTable`/`trailingParsers` that have precedence\nat least `c.prec` where `c` is the `ParsingContext`. Recall that `c.prec` is set by `categoryParser`.\n\nNote that in the original Pratt's algorith, precedences are only checked before calling trailing parsers. In our\nimplementation, leading *and* trailing parsers check the precendece. We claim our algorithm is more flexible,\nmodular and easier to understand.\n\n`antiquotParser` should be a `mkAntiquot` parser (or always fail) and is tried before all other parsers.\nIt should not be added to the regular leading parsers because it would heavily\noverlap with antiquotation parsers nested inside them. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1570-L1588","name":"Lean.Parser.trailingLoop","kind":"opaque","docLink":"./Lean/Parser/Basic.html#Lean.Parser.trailingLoop","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1567-L1568","name":"Lean.Parser.trailingLoopStep","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.trailingLoopStep","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1564-L1565","name":"Lean.Parser.leadingParser","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.leadingParser","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1553-L1562","name":"Lean.Parser.leadingParserAux","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.leadingParserAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1546-L1547","name":"Lean.Parser.sepBy1","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepBy1","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1543-L1544","name":"Lean.Parser.sepBy","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepBy","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1540-L1541","name":"Lean.Parser.sepByElemParser","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepByElemParser","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1533-L1534","name":"Lean.Parser.nodeWithAntiquot","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nodeWithAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1529-L1531","name":"Lean.Parser.withAntiquotSpliceAndSuffix","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withAntiquotSpliceAndSuffix","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1519-L1527","name":"Lean.Parser.withAntiquotSuffixSplice","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withAntiquotSuffixSplice","doc":"Parse `suffix` after an antiquotation, e.g. `$x,*`, and put both into a new node. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1502-L1508","name":"Lean.Parser.mkAntiquotSplice","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkAntiquotSplice","doc":"Parse `$[p]suffix`, e.g. `$[p],*`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1497-L1499","name":"Lean.Parser.withoutInfo","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withoutInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1492-L1495","name":"Lean.Parser.withAntiquot","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withAntiquot","doc":"Optimized version of `mkAntiquot ... <|> p`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1480-L1489","name":"Lean.Parser.withAntiquotFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withAntiquotFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1467-L1478","name":"Lean.Parser.mkAntiquot","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkAntiquot","doc":"Define parser for `$e` (if `anonymous == true`) and `$e:name`.\n`kind` is embedded in the antiquotation's kind, and checked at syntax `match` unless `isPseudoKind` is true.\nAntiquotations can be escaped as in `$$e`, which produces the syntax tree for `$e`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1460-L1461","name":"Lean.Parser.unicodeSymbol","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.unicodeSymbol","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1457-L1458","name":"Lean.Parser.nonReservedSymbol","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nonReservedSymbol","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1454-L1455","name":"Lean.Parser.instCoeStringParser","kind":"instance","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instCoeStringParser","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1451-L1452","name":"Lean.Parser.symbol","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.symbol","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1443-L1449","name":"Lean.Parser.tokenWithAntiquot","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.tokenWithAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1433-L1441","name":"Lean.Parser.tokenAntiquotFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.tokenAntiquotFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1431-L1431","name":"Lean.Parser.antiquotExpr","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.antiquotExpr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1430-L1430","name":"Lean.Parser.antiquotNestedExpr","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.antiquotNestedExpr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1425-L1427","name":"Lean.Parser.pushNone","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.pushNone","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1423-L1423","name":"Lean.Parser.setExpected","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.setExpected","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1418-L1421","name":"Lean.Parser.setExpectedFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.setExpectedFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1403-L1416","name":"Lean.Parser.checkNoImmediateColon","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkNoImmediateColon","doc":"Fail if previous token is immediately followed by ':'. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1395-L1396","name":"Lean.Parser.termParser","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.termParser","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1391-L1392","name":"Lean.Parser.categoryParser","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.categoryParser","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1388-L1389","name":"Lean.Parser.categoryParserFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.categoryParserFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1386-L1386","name":"Lean.Parser.categoryParserFnExtension","kind":"opaque","docLink":"./Lean/Parser/Basic.html#Lean.Parser.categoryParserFnExtension","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1384-L1384","name":"Lean.Parser.categoryParserFnRef","kind":"opaque","docLink":"./Lean/Parser/Basic.html#Lean.Parser.categoryParserFnRef","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1382-L1382","name":"Lean.Parser.CategoryParserFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.CategoryParserFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1353-L1380","name":"Lean.Parser.indexed","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.indexed","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1351-L1351","name":"Lean.Parser.ParserCategories","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1349-L1349","name":"Lean.Parser.instInhabitedParserCategory","kind":"instance","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instInhabitedParserCategory","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1348-L1348","name":"Lean.Parser.ParserCategory.behavior","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserCategory.behavior","doc":"The `LeadingIdentBehavior`, which specifies how the parsing table\nlookup function behaves for the first identifier to be parsed.\nThis is used by the `tactic` parser to avoid creating a reserved\nsymbol for each builtin tactic (e.g., `apply`, `assumption`, etc.). "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1343-L1343","name":"Lean.Parser.ParserCategory.tables","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserCategory.tables","doc":"The parsing tables, which consist of a dynamic set of parser\nfunctions based on the syntaxes that have been declared so far. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1340-L1340","name":"Lean.Parser.ParserCategory.kinds","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserCategory.kinds","doc":"The list of syntax nodes that can parse into this category.\nThis can be used to list all syntaxes in the category. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1337-L1337","name":"Lean.Parser.ParserCategory.declName","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserCategory.declName","doc":"The name of a declaration which will be used as the target of\ngo-to-definition queries and from which doc strings will be extracted.\nThis is a dummy declaration of type `Lean.Parser.Category`\ncreated by `declare_syntax_cat`, but for builtin categories the declaration\nis made manually and passed to `registerBuiltinParserAttribute`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1331-L1349","name":"Lean.Parser.ParserCategory","kind":"structure","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserCategory","doc":"Each parser category is implemented using a Pratt's parser.\nThe system comes equipped with the following categories: `level`, `term`, `tactic`, and `command`.\nUsers and plugins may define extra categories.\n\nThe method\n```\ncategoryParser `term prec\n```\nexecutes the Pratt's parser for category `term` with precedence `prec`.\nThat is, only parsers with precedence at least `prec` are considered.\nThe method `termParser prec` is equivalent to the method above.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1316-L1316","name":"Lean.Parser.instReprLeadingIdentBehavior","kind":"instance","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instReprLeadingIdentBehavior","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1316-L1316","name":"Lean.Parser.instBEqLeadingIdentBehavior","kind":"instance","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instBEqLeadingIdentBehavior","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1316-L1316","name":"Lean.Parser.instInhabitedLeadingIdentBehavior","kind":"instance","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instInhabitedLeadingIdentBehavior","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1311-L1315","name":"Lean.Parser.LeadingIdentBehavior.both","kind":"ctor","docLink":"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior.both","doc":"`LeadingIdentBehavior.both`: if the leading token\nan identifier `<foo>`, the it executes the parsers associated\nwith token `<foo>` and parsers associated with the auxiliary\ntoken \"ident\". "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1306-L1310","name":"Lean.Parser.LeadingIdentBehavior.symbol","kind":"ctor","docLink":"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior.symbol","doc":"`LeadingIdentBehavior.symbol`: if the leading token is\nan identifier `<foo>`, and there are parsers `P` associated with\nthe toek `<foo>`, then it executes `P`. Otherwise, it executes\nonly the parsers associated with the auxiliary token \"ident\". "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1302-L1305","name":"Lean.Parser.LeadingIdentBehavior.default","kind":"ctor","docLink":"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior.default","doc":"`LeadingIdentBehavior.default`: if the leading token\nis an identifier, then `prattParser` just executes the parsers\nassociated with the auxiliary token \"ident\". "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1301-L1316","name":"Lean.Parser.LeadingIdentBehavior","kind":"inductive","docLink":"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior","doc":"The type `LeadingIdentBehavior` specifies how the parsing table\nlookup function behaves for identifiers.  The function `prattParser`\nuses two tables `leadingTable` and `trailingTable`. They map tokens\nto parsers.\n\nWe use `LeadingIdentBehavior.symbol` and `LeadingIdentBehavior.both`\nand `nonReservedSymbol` parser to implement the `tactic` parsers.\nThe idea is to avoid creating a reserved symbol for each\nbuiltin tactic (e.g., `apply`, `assumption`, etc.).  That is, users\nmay still use these symbols as identifiers (e.g., naming a\nfunction).\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1285-L1286","name":"Lean.Parser.instInhabitedPrattParsingTables","kind":"instance","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instInhabitedPrattParsingTables","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1283-L1283","name":"Lean.Parser.PrattParsingTables.trailingParsers","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.PrattParsingTables.trailingParsers","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1282-L1282","name":"Lean.Parser.PrattParsingTables.trailingTable","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.PrattParsingTables.trailingTable","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1281-L1281","name":"Lean.Parser.PrattParsingTables.leadingParsers","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.PrattParsingTables.leadingParsers","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1280-L1280","name":"Lean.Parser.PrattParsingTables.leadingTable","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.PrattParsingTables.leadingTable","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1279-L1283","name":"Lean.Parser.PrattParsingTables","kind":"structure","docLink":"./Lean/Parser/Basic.html#Lean.Parser.PrattParsingTables","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1275-L1275","name":"Lean.Parser.TokenMap.instForInTokenMapProdNameList","kind":"instance","docLink":"./Lean/Parser/Basic.html#Lean.Parser.TokenMap.instForInTokenMapProdNameList","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1273-L1273","name":"Lean.Parser.TokenMap.instEmptyCollectionTokenMap","kind":"instance","docLink":"./Lean/Parser/Basic.html#Lean.Parser.TokenMap.instEmptyCollectionTokenMap","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1270-L1271","name":"Lean.Parser.TokenMap.instInhabitedTokenMap","kind":"instance","docLink":"./Lean/Parser/Basic.html#Lean.Parser.TokenMap.instInhabitedTokenMap","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1265-L1268","name":"Lean.Parser.TokenMap.insert","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.TokenMap.insert","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1261-L1261","name":"Lean.Parser.TokenMap","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.TokenMap","doc":"A multimap indexed by tokens. Used for indexing parsers by their leading token. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1256-L1258","name":"Lean.Parser.eoi","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.eoi","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1251-L1254","name":"Lean.Parser.eoiFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.eoiFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1248-L1249","name":"Lean.Parser.withoutForbidden","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withoutForbidden","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1245-L1246","name":"Lean.Parser.withForbidden","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withForbidden","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1242-L1243","name":"Lean.Parser.withoutPosition","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withoutPosition","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1238-L1240","name":"Lean.Parser.withPositionAfterLinebreak","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withPositionAfterLinebreak","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1235-L1236","name":"Lean.Parser.withPosition","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withPosition","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1232-L1233","name":"Lean.Parser.checkLineEq","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkLineEq","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1223-L1230","name":"Lean.Parser.checkLineEqFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkLineEqFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1220-L1221","name":"Lean.Parser.checkColGt","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkColGt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1211-L1218","name":"Lean.Parser.checkColGtFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkColGtFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1208-L1209","name":"Lean.Parser.checkColGe","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkColGe","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1199-L1206","name":"Lean.Parser.checkColGeFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkColGeFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1196-L1197","name":"Lean.Parser.checkColEq","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkColEq","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1187-L1194","name":"Lean.Parser.checkColEqFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkColEqFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1182-L1185","name":"Lean.Parser.anyOfFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.anyOfFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1172-L1180","name":"Lean.Parser.longestMatchFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.longestMatchFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1164-L1169","name":"Lean.Parser.longestMatchFnAux.parse","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.longestMatchFnAux.parse","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1163-L1170","name":"Lean.Parser.longestMatchFnAux","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.longestMatchFnAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1160-L1161","name":"Lean.Parser.longestMatchMkResult","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.longestMatchMkResult","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1139-L1158","name":"Lean.Parser.longestMatchStep","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.longestMatchStep","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1113-L1137","name":"Lean.Parser.runLongestMatchParser","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.runLongestMatchParser","doc":"Auxiliary function used to execute parsers provided to `longestMatchFn`.\nPush `left?` into the stack if it is not `none`, and execute `p`.\n\nRemark: `p` must produce exactly one syntax node.\nRemark: the `left?` is not none when we are processing trailing parsers. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1104-L1105","name":"Lean.Parser.invalidLongestMatchParser","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.invalidLongestMatchParser","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1099-L1100","name":"Lean.Parser.ParserState.replaceLongest","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.replaceLongest","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1095-L1097","name":"Lean.Parser.ParserState.keepLatest","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.keepLatest","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1089-L1093","name":"Lean.Parser.ParserState.mergeErrors","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.mergeErrors","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1085-L1087","name":"Lean.Parser.ParserState.keepPrevError","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.keepPrevError","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1081-L1083","name":"Lean.Parser.ParserState.keepNewError","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.keepNewError","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1077-L1079","name":"Lean.Parser.ParserState.keepTop","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.keepTop","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1070-L1073","name":"Lean.Parser.identEq","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.identEq","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1060-L1068","name":"Lean.Parser.identEqFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.identEqFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1056-L1058","name":"Lean.Parser.rawIdentNoAntiquot","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.rawIdentNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1051-L1054","name":"Lean.Parser.identNoAntiquot","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.identNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1045-L1049","name":"Lean.Parser.identFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.identFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1040-L1043","name":"Lean.Parser.nameLitNoAntiquot","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nameLitNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1034-L1038","name":"Lean.Parser.nameLitFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nameLitFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1029-L1032","name":"Lean.Parser.charLitNoAntiquot","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.charLitNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1023-L1027","name":"Lean.Parser.charLitFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.charLitFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1018-L1021","name":"Lean.Parser.strLitNoAntiquot","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.strLitNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1012-L1016","name":"Lean.Parser.strLitFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.strLitFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1007-L1010","name":"Lean.Parser.scientificLitNoAntiquot","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.scientificLitNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1001-L1005","name":"Lean.Parser.scientificLitFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.scientificLitFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L996-L999","name":"Lean.Parser.numLitNoAntiquot","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.numLitNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L990-L994","name":"Lean.Parser.numLitFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.numLitFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L987-L988","name":"Lean.Parser.mkAtomicInfo","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkAtomicInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L981-L985","name":"Lean.Parser.unicodeSymbolNoAntiquot","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.unicodeSymbolNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L978-L979","name":"Lean.Parser.unicodeSymbolFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.unicodeSymbolFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L973-L976","name":"Lean.Parser.unicodeSymbolInfo","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.unicodeSymbolInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L970-L971","name":"Lean.Parser.unicodeSymbolFnAux","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.unicodeSymbolFnAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L965-L968","name":"Lean.Parser.checkNoWsBefore","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkNoWsBefore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L961-L963","name":"Lean.Parser.checkNoWsBeforeFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkNoWsBeforeFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L951-L954","name":"Lean.Parser.checkLinebreakBefore","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkLinebreakBefore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L947-L949","name":"Lean.Parser.checkLinebreakBeforeFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkLinebreakBeforeFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L942-L945","name":"Lean.Parser.checkTailLinebreak","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkTailLinebreak","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L937-L940","name":"Lean.Parser.checkWsBefore","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkWsBefore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L933-L935","name":"Lean.Parser.checkWsBeforeFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkWsBeforeFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L928-L931","name":"Lean.Parser.checkTailWs","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkTailWs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L918-L925","name":"Lean.Parser.strAux.parse","kind":"opaque","docLink":"./Lean/Parser/Basic.html#Lean.Parser.strAux.parse","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L917-L926","name":"Lean.Parser.strAux","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.strAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L912-L915","name":"Lean.Parser.nonReservedSymbolNoAntiquot","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nonReservedSymbolNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L904-L910","name":"Lean.Parser.nonReservedSymbolInfo","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nonReservedSymbolInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L901-L902","name":"Lean.Parser.nonReservedSymbolFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nonReservedSymbolFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L884-L899","name":"Lean.Parser.nonReservedSymbolFnAux","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nonReservedSymbolFnAux","doc":"Check if the following token is the symbol _or_ identifier `sym`. Useful for\nparsing local tokens that have not been added to the token table (but may have\nbeen so by some unrelated code).\n\nFor example, the universe `max` Function is parsed using this combinator so that\nit can still be used as an identifier outside of universe (but registering it\nas a token in a Term Syntax would not break the universe Parser). "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L872-L875","name":"Lean.Parser.checkTailNoWs","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkTailNoWs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L867-L870","name":"Lean.Parser.symbolNoAntiquot","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.symbolNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L864-L865","name":"Lean.Parser.symbolFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.symbolFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L859-L862","name":"Lean.Parser.symbolInfo","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.symbolInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L856-L857","name":"Lean.Parser.symbolFnAux","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.symbolFnAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L845-L854","name":"Lean.Parser.satisfySymbolFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.satisfySymbolFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L839-L843","name":"Lean.Parser.rawIdentFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.rawIdentFn","doc":"Treat keywords as identifiers. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L831-L836","name":"Lean.Parser.peekToken","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.peekToken","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L822-L829","name":"Lean.Parser.peekTokenAux","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.peekTokenAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L809-L820","name":"Lean.Parser.tokenFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.tokenFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L732-L764","name":"Lean.Parser.identFnAux.parse","kind":"opaque","docLink":"./Lean/Parser/Basic.html#Lean.Parser.identFnAux.parse","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L731-L765","name":"Lean.Parser.identFnAux","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.identFnAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L716-L729","name":"Lean.Parser.mkIdResult","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkIdResult","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L699-L714","name":"Lean.Parser.mkTokenAndFixPos","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkTokenAndFixPos","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L677-L688","name":"Lean.Parser.isIdCont","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.isIdCont","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L655-L675","name":"Lean.Parser.numberFnAux","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.numberFnAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L651-L653","name":"Lean.Parser.hexNumberFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.hexNumberFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L647-L649","name":"Lean.Parser.octalNumberFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.octalNumberFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L643-L645","name":"Lean.Parser.binNumberFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.binNumberFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L628-L641","name":"Lean.Parser.decimalNumberFn.parseOptExp","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.decimalNumberFn.parseOptExp","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L614-L626","name":"Lean.Parser.decimalNumberFn.parseOptDot","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.decimalNumberFn.parseOptDot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L602-L641","name":"Lean.Parser.decimalNumberFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.decimalNumberFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L590-L600","name":"Lean.Parser.strLitFnAux","kind":"opaque","docLink":"./Lean/Parser/Basic.html#Lean.Parser.strLitFnAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L574-L588","name":"Lean.Parser.charLitFnAux","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.charLitFnAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L561-L572","name":"Lean.Parser.mkNodeToken","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkNodeToken","doc":"Push `(Syntax.node tk <new-atom>)` onto syntax stack if parse was successful. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L557-L558","name":"Lean.Parser.quotedCharFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.quotedCharFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L554-L555","name":"Lean.Parser.isQuotableCharDefault","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.isQuotableCharDefault","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L539-L552","name":"Lean.Parser.quotedCharCoreFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.quotedCharCoreFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L529-L537","name":"Lean.Parser.hexDigitFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.hexDigitFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L525-L527","name":"Lean.Parser.rawCh","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.rawCh","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L522-L523","name":"Lean.Parser.chFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.chFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L517-L520","name":"Lean.Parser.rawFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.rawFn","doc":"Match an arbitrary Parser and return the consumed String in a `Syntax.atom`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L496-L498","name":"Lean.Parser.mkEmptySubstringAt","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkEmptySubstringAt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L471-L494","name":"Lean.Parser.whitespace","kind":"opaque","docLink":"./Lean/Parser/Basic.html#Lean.Parser.whitespace","doc":"Consume whitespace and comments "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L468-L468","name":"Lean.Parser.finishCommentBlock.eoi","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.finishCommentBlock.eoi","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L444-L468","name":"Lean.Parser.finishCommentBlock","kind":"opaque","docLink":"./Lean/Parser/Basic.html#Lean.Parser.finishCommentBlock","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L440-L441","name":"Lean.Parser.takeWhile1Fn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.takeWhile1Fn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L437-L438","name":"Lean.Parser.takeWhileFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.takeWhileFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L431-L435","name":"Lean.Parser.takeUntilFn","kind":"opaque","docLink":"./Lean/Parser/Basic.html#Lean.Parser.takeUntilFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L425-L429","name":"Lean.Parser.satisfyFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.satisfyFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L422-L423","name":"Lean.Parser.many1Unbox","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.many1Unbox","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L417-L420","name":"Lean.Parser.withResultOf","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withResultOf","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L412-L415","name":"Lean.Parser.withResultOfInfo","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withResultOfInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L405-L410","name":"Lean.Parser.withResultOfFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withResultOfFn","doc":"Apply `f` to the syntax object produced by `p` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L399-L402","name":"Lean.Parser.sepBy1NoAntiquot","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepBy1NoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L394-L397","name":"Lean.Parser.sepByNoAntiquot","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepByNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L388-L392","name":"Lean.Parser.sepBy1Info","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepBy1Info","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L383-L386","name":"Lean.Parser.sepByInfo","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepByInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L379-L381","name":"Lean.Parser.sepBy1Fn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepBy1Fn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L375-L377","name":"Lean.Parser.sepByFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepByFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L345-L345","name":"Lean.Parser.many1NoAntiquot","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.many1NoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L340-L343","name":"Lean.Parser.many1Fn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.many1Fn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L335-L338","name":"Lean.Parser.manyNoAntiquot","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.manyNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L330-L333","name":"Lean.Parser.manyFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.manyFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L318-L328","name":"Lean.Parser.manyAux","kind":"opaque","docLink":"./Lean/Parser/Basic.html#Lean.Parser.manyAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L314-L316","name":"Lean.Parser.notFollowedBy","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.notFollowedBy","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L304-L312","name":"Lean.Parser.notFollowedByFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.notFollowedByFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L302-L302","name":"Lean.Parser.lookahead","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.lookahead","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L296-L300","name":"Lean.Parser.lookaheadFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.lookaheadFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L291-L294","name":"Lean.Parser.optionalNoAntiquot","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.optionalNoAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L285-L289","name":"Lean.Parser.optionaInfo","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.optionaInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L278-L283","name":"Lean.Parser.optionalFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.optionalFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L276-L276","name":"Lean.Parser.atomic","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.atomic","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L270-L274","name":"Lean.Parser.atomicFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.atomicFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L265-L268","name":"Lean.Parser.noFirstTokenInfo","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.noFirstTokenInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L262-L263","name":"Lean.Parser.instOrElseParser","kind":"instance","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instOrElseParser","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L257-L260","name":"Lean.Parser.orelse","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.orelse","doc":"Run `p`, falling back to `q` if `p` failed without consuming any input.\n\nNOTE: In order for the pretty printer to retrace an `orelse`, `p` must be a call to `node` or some other parser\nproducing a single node kind. Nested `orelse` calls are flattened for this, i.e. `(node k1 p1 <|> node k2 p2) <|> ...`\nis fine as well. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L245-L249","name":"Lean.Parser.orelseInfo","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.orelseInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L242-L243","name":"Lean.Parser.orelseFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.orelseFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L213-L240","name":"Lean.Parser.orelseFnCore","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.orelseFnCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L211-L211","name":"Lean.Parser.instBEqOrElseOnAntiquotBehavior","kind":"instance","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instBEqOrElseOnAntiquotBehavior","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L210-L210","name":"Lean.Parser.OrElseOnAntiquotBehavior.merge","kind":"ctor","docLink":"./Lean/Parser/Basic.html#Lean.Parser.OrElseOnAntiquotBehavior.merge","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L209-L209","name":"Lean.Parser.OrElseOnAntiquotBehavior.takeLongest","kind":"ctor","docLink":"./Lean/Parser/Basic.html#Lean.Parser.OrElseOnAntiquotBehavior.takeLongest","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L208-L208","name":"Lean.Parser.OrElseOnAntiquotBehavior.acceptLhs","kind":"ctor","docLink":"./Lean/Parser/Basic.html#Lean.Parser.OrElseOnAntiquotBehavior.acceptLhs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L207-L211","name":"Lean.Parser.OrElseOnAntiquotBehavior","kind":"inductive","docLink":"./Lean/Parser/Basic.html#Lean.Parser.OrElseOnAntiquotBehavior","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L199-L204","name":"Lean.Parser.mergeOrElseErrors","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mergeOrElseErrors","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L196-L197","name":"Lean.Parser.trailingNode","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.trailingNode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L191-L194","name":"Lean.Parser.trailingNodeAux","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.trailingNodeAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L188-L189","name":"Lean.Parser.leadingNode","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.leadingNode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L183-L186","name":"Lean.Parser.suppressInsideQuot","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.suppressInsideQuot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L181-L181","name":"Lean.Parser.decQuotDepth","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.decQuotDepth","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L179-L179","name":"Lean.Parser.incQuotDepth","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.incQuotDepth","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L171-L174","name":"Lean.Parser.setLhsPrec","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.setLhsPrec","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L167-L169","name":"Lean.Parser.setLhsPrecFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.setLhsPrecFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L162-L165","name":"Lean.Parser.checkLhsPrec","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkLhsPrec","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L158-L160","name":"Lean.Parser.checkLhsPrecFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkLhsPrecFn","doc":"Succeeds if `c.lhsPrec >= prec` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L152-L155","name":"Lean.Parser.checkPrec","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkPrec","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L148-L150","name":"Lean.Parser.checkPrecFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkPrecFn","doc":"Succeeds if `c.prec <= prec` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L143-L145","name":"Lean.Parser.errorAtSavedPos","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.errorAtSavedPos","doc":"Generate an error at the position saved with the `withPosition` combinator.\nIf `delta == true`, then it reports at saved position+1.\nThis useful to make sure a parser consumed at least one character.  "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L132-L138","name":"Lean.Parser.errorAtSavedPosFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.errorAtSavedPosFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L127-L130","name":"Lean.Parser.error","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.error","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L124-L125","name":"Lean.Parser.errorFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.errorFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L119-L122","name":"Lean.Parser.node","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.node","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L113-L117","name":"Lean.Parser.nodeInfo","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nodeInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L108-L111","name":"Lean.Parser.trailingNodeFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.trailingNodeFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L103-L106","name":"Lean.Parser.nodeFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nodeFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L100-L101","name":"Lean.Parser.instAndThenParser","kind":"instance","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instAndThenParser","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L95-L98","name":"Lean.Parser.andthen","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.andthen","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L89-L93","name":"Lean.Parser.andthenInfo","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.andthenInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L85-L87","name":"Lean.Parser.andthenFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.andthenFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L80-L83","name":"Lean.Parser.checkStackTop","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkStackTop","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L76-L78","name":"Lean.Parser.checkStackTopFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkStackTopFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L73-L74","name":"Lean.Parser.epsilonInfo","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.epsilonInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L71-L71","name":"Lean.Parser.dbgTraceState","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.dbgTraceState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L61-L69","name":"Lean.Parser.dbgTraceStateFn","kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.dbgTraceStateFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1-L1","name":"Lean.Parser.PrattParsingTables.mk","kind":"ctor","docLink":"./Lean/Parser/Basic.html#Lean.Parser.PrattParsingTables.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Basic.lean#L1-L1","name":"Lean.Parser.ParserCategory.mk","kind":"ctor","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserCategory.mk","doc":""}]}