{"name":"Lean.Compiler.LCNF.Specialize","instances":[{"typeNames":["Lean.Compiler.LCNF.Specialize.CacheEntry"],"name":"Lean.Compiler.LCNF.Specialize.instInhabitedCacheEntry","className":"Inhabited"},{"typeNames":["Lean.Compiler.LCNF.Specialize.SpecializeM"],"name":"Lean.Compiler.LCNF.Specialize.instMonadScopeSpecializeM","className":"Lean.Compiler.LCNF.MonadScope"}],"imports":["Init","Lean.Compiler.Specialize","Lean.Compiler.LCNF.Simp","Lean.Compiler.LCNF.SpecInfo","Lean.Compiler.LCNF.PrettyPrinter","Lean.Compiler.LCNF.ToExpr","Lean.Compiler.LCNF.Level","Lean.Compiler.LCNF.PhaseExt","Lean.Compiler.LCNF.MonadScope","Lean.Compiler.LCNF.Closure","Lean.Compiler.LCNF.FVarUtil"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Specialize.lean#L336-L341","name":"Lean.Compiler.LCNF.specialize","kind":"def","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.specialize","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Specialize.lean#L332-L334","name":"Lean.Compiler.LCNF.Decl.specialize","kind":"def","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Decl.specialize","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Specialize.lean#L323-L328","name":"Lean.Compiler.LCNF.Specialize.main","kind":"def","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.main","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Specialize.lean#L301-L319","name":"Lean.Compiler.LCNF.Specialize.visitCode","kind":"opaque","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.visitCode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Specialize.lean#L297-L299","name":"Lean.Compiler.LCNF.Specialize.visitFunDecl","kind":"opaque","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.visitFunDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Specialize.lean#L263-L295","name":"Lean.Compiler.LCNF.Specialize.specializeApp?","kind":"opaque","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.specializeApp?","doc":"Try to specialize the function application in the given let-declaration.\n`k` is the continuation for the let-declaration.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Specialize.lean#L251-L256","name":"Lean.Compiler.LCNF.Specialize.getRemainingArgs","kind":"def","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.getRemainingArgs","doc":"Given the specialization mask `paramsInfo` and the arguments `args`,\nreturn the arguments that have not been considered for specialization.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Specialize.lean#L223-L245","name":"Lean.Compiler.LCNF.Specialize.mkSpecDecl.go","kind":"def","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.mkSpecDecl.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Specialize.lean#L209-L245","name":"Lean.Compiler.LCNF.Specialize.mkSpecDecl","kind":"def","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.mkSpecDecl","doc":"Specialize `decl` using\n- `us`: the universe level used to instantiate `decl.name`\n- `argMask`: arguments that are being used to specialize the declaration.\n- `params`: new parameters that arguments in `argMask` depend on.\n- `decls`: local declarations that arguments in `argMask` depend on.\n- `levelParamsNew`: the universe level parameters for the new declaration.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Specialize.lean#L193-L198","name":"Lean.Compiler.LCNF.Specialize.mkKey","kind":"def","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.mkKey","doc":"Create the \"key\" that uniquely identifies a code specialization.\n`params` and `decls` are the declarations collected by the `collect` function above.\nThe result contains the list of universe level parameter names the key that `params`, `decls`, and `body` depends on.\nWe use this information to create the new auxiliary declaration and resulting application.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Specialize.lean#L177-L183","name":"Lean.Compiler.LCNF.Specialize.expandCodeDecls.go","kind":"def","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.expandCodeDecls.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Specialize.lean#L172-L185","name":"Lean.Compiler.LCNF.Specialize.expandCodeDecls","kind":"def","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.expandCodeDecls","doc":"Convert the given declarations into `Expr`, and \"zeta-reduce\" them into body.\nThis function is used to compute the key that uniquely identifies an code specialization.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Specialize.lean#L159-L166","name":"Lean.Compiler.LCNF.Specialize.shouldSpecialize","kind":"def","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.shouldSpecialize","doc":"Return `true` if it is worth using arguments `args` for specialization given the parameter specialization information.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Specialize.lean#L137-L152","name":"Lean.Compiler.LCNF.Specialize.Collector.collect","kind":"def","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.Collector.collect","doc":"Given the specialization mask `paramsInfo` and the arguments `args`,\ncollect their dependencies, and return an array `mask` of size `paramsInfo.size` s.t.\n- `mask[i] = some args[i]` if `paramsInfo[i] != .other`\n- `mask[i] = none`, otherwise.\nThat is, `mask` contains only the arguments that are contributing to the code specialization.\nWe use this information to compute a \"key\" to uniquely identify the code specialization, and\ncreating the specialized code.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Specialize.lean#L74-L77","name":"Lean.Compiler.LCNF.Specialize.withLetDecl","kind":"def","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.withLetDecl","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Specialize.lean#L70-L72","name":"Lean.Compiler.LCNF.Specialize.isGround","kind":"def","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.isGround","doc":"Return `true` if `e` is a ground term. That is,\nit contains only free variables tagged as ground\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Specialize.lean#L62-L64","name":"Lean.Compiler.LCNF.Specialize.instMonadScopeSpecializeM","kind":"instance","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.instMonadScopeSpecializeM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Specialize.lean#L60-L60","name":"Lean.Compiler.LCNF.Specialize.SpecializeM","kind":"def","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.SpecializeM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Specialize.lean#L58-L58","name":"Lean.Compiler.LCNF.Specialize.State.decls","kind":"def","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.State.decls","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Specialize.lean#L57-L58","name":"Lean.Compiler.LCNF.Specialize.State","kind":"structure","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.State","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Specialize.lean#L55-L55","name":"Lean.Compiler.LCNF.Specialize.Context.declName","kind":"def","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.Context.declName","doc":"Name of the declaration being processed\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Specialize.lean#L51-L51","name":"Lean.Compiler.LCNF.Specialize.Context.ground","kind":"def","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.Context.ground","doc":"Set of let-declarations in scope that do not depend on parameters.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Specialize.lean#L47-L47","name":"Lean.Compiler.LCNF.Specialize.Context.scope","kind":"def","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.Context.scope","doc":"Set of free variables in scope. The \"collector\" uses this information when collecting\ndependencies for code specialization.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Specialize.lean#L42-L55","name":"Lean.Compiler.LCNF.Specialize.Context","kind":"structure","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.Context","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Specialize.lean#L39-L40","name":"Lean.Compiler.LCNF.Specialize.findSpecCache?","kind":"def","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.findSpecCache?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Specialize.lean#L36-L37","name":"Lean.Compiler.LCNF.Specialize.cacheSpec","kind":"def","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.cacheSpec","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Specialize.lean#L30-L34","name":"Lean.Compiler.LCNF.Specialize.specCacheExt","kind":"opaque","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.specCacheExt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Specialize.lean#L27-L28","name":"Lean.Compiler.LCNF.Specialize.addEntry","kind":"def","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.addEntry","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Specialize.lean#L25-L25","name":"Lean.Compiler.LCNF.Specialize.instInhabitedCacheEntry","kind":"instance","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.instInhabitedCacheEntry","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Specialize.lean#L24-L24","name":"Lean.Compiler.LCNF.Specialize.CacheEntry.declName","kind":"def","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.CacheEntry.declName","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Specialize.lean#L23-L23","name":"Lean.Compiler.LCNF.Specialize.CacheEntry.key","kind":"def","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.CacheEntry.key","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Specialize.lean#L22-L25","name":"Lean.Compiler.LCNF.Specialize.CacheEntry","kind":"structure","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.CacheEntry","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Specialize.lean#L20-L20","name":"Lean.Compiler.LCNF.Specialize.Cache","kind":"def","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.Cache","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Specialize.lean#L1-L1","name":"Lean.Compiler.LCNF.Specialize.CacheEntry.mk","kind":"ctor","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.CacheEntry.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Specialize.lean#L1-L1","name":"Lean.Compiler.LCNF.Specialize.State.mk","kind":"ctor","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.State.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Compiler/LCNF/Specialize.lean#L1-L1","name":"Lean.Compiler.LCNF.Specialize.Context.mk","kind":"ctor","docLink":"./Lean/Compiler/LCNF/Specialize.html#Lean.Compiler.LCNF.Specialize.Context.mk","doc":""}]}