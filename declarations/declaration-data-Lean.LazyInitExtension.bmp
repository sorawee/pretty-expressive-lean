{"name":"Lean.LazyInitExtension","instances":[{"typeNames":["Lean.LazyInitExtension"],"name":"Lean.instInhabitedLazyInitExtension","className":"Inhabited"}],"imports":["Init","Lean.MonadEnv"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/LazyInitExtension.lean#L33-L39","name":"Lean.LazyInitExtension.get","kind":"def","docLink":"./Lean/LazyInitExtension.html#Lean.LazyInitExtension.get","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/LazyInitExtension.lean#L29-L31","name":"Lean.registerLazyInitExtension","kind":"def","docLink":"./Lean/LazyInitExtension.html#Lean.registerLazyInitExtension","doc":"Register an environment extension for storing the result of `fn`.\nWe initialize the extension with `none`, and `fn` is executed the\nfirst time `LazyInit.get` is executed.\n\nThis kind of extension is useful for avoiding work duplication in\nscenarios where a thunk cannot be used because the computation depends\non state from the `m` monad. For example, we may want to \"cache\" a collection\nof theorems as a `SimpLemmas` object.  "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/LazyInitExtension.lean#L14-L18","name":"Lean.instInhabitedLazyInitExtension","kind":"instance","docLink":"./Lean/LazyInitExtension.html#Lean.instInhabitedLazyInitExtension","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/LazyInitExtension.lean#L12-L12","name":"Lean.LazyInitExtension.fn","kind":"def","docLink":"./Lean/LazyInitExtension.html#Lean.LazyInitExtension.fn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/LazyInitExtension.lean#L11-L11","name":"Lean.LazyInitExtension.ext","kind":"def","docLink":"./Lean/LazyInitExtension.html#Lean.LazyInitExtension.ext","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/LazyInitExtension.lean#L10-L10","name":"Lean.LazyInitExtension.mk","kind":"ctor","docLink":"./Lean/LazyInitExtension.html#Lean.LazyInitExtension.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/LazyInitExtension.lean#L10-L12","name":"Lean.LazyInitExtension","kind":"structure","docLink":"./Lean/LazyInitExtension.html#Lean.LazyInitExtension","doc":""}]}