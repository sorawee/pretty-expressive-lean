{"name":"Lean.Elab.Tactic.Basic","instances":[{"typeNames":["Lean.Elab.Tactic.TacticM"],"name":"Lean.Elab.Tactic.instMonadTacticM","className":"Monad"},{"typeNames":["Lean.Elab.Tactic.SavedState","Lean.Elab.Tactic.TacticM"],"name":"Lean.Elab.Tactic.instMonadBacktrackSavedStateTacticM","className":"Lean.MonadBacktrack"},{"typeNames":["Lean.Exception","Lean.Elab.Tactic.TacticM"],"name":"Lean.Elab.Tactic.instMonadExceptExceptionTacticM","className":"MonadExcept"},{"typeNames":["Lean.Elab.Tactic.TacticM"],"name":"Lean.Elab.Tactic.instOrElseTacticM","className":"OrElse"},{"typeNames":["Lean.Elab.Tactic.TacticM"],"name":"Lean.Elab.Tactic.instAlternativeTacticM","className":"Alternative"}],"imports":["Init","Lean.Elab.Term"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L417-L418","name":"Lean.Elab.Tactic.withCaseRef","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.withCaseRef","doc":"Use position of `=> $body` for error messages.\nIf there is a line break before `body`, the message will be displayed on `=>` only,\nbut the \"full range\" for the info view will still include `body`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L410-L411","name":"Lean.Elab.Tactic.getNameOfIdent'","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.getNameOfIdent'","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L391-L407","name":"Lean.Elab.Tactic.tagUntaggedGoals","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.tagUntaggedGoals","doc":"Use `parentTag` to tag untagged goals at `newGoals`.\nIf there are multiple new untagged goals, they are named using `<parentTag>.<newSuffix>_<idx>` where `idx > 0`.\nIf there is only one new untagged goal, then we just use `parentTag` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L381-L386","name":"Lean.Elab.Tactic.tryTactic","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.tryTactic","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L375-L379","name":"Lean.Elab.Tactic.tryTactic?","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.tryTactic?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L368-L373","name":"Lean.Elab.Tactic.liftMetaTactic1","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.liftMetaTactic1","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L363-L366","name":"Lean.Elab.Tactic.liftMetaTactic","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.liftMetaTactic","doc":"Get the mvarid of the main goal, run the given `tactic`,\nthen set the new goals to be the resulting goal list."},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L355-L359","name":"Lean.Elab.Tactic.liftMetaTacticAux","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.liftMetaTacticAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L352-L353","name":"Lean.Elab.Tactic.liftMetaMAtMain","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.liftMetaMAtMain","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L346-L350","name":"Lean.Elab.Tactic.closeMainGoal","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.closeMainGoal","doc":"Close main goal using the given expression. If `checkUnassigned == true`, then `val` must not contain unassigned metavariables. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L338-L343","name":"Lean.Elab.Tactic.ensureHasNoMVars","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.ensureHasNoMVars","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L328-L336","name":"Lean.Elab.Tactic.evalTacticAt","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.evalTacticAt","doc":"Evaluate `tac` at `mvarId`, and return the list of resulting subgoals. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L324-L325","name":"Lean.Elab.Tactic.withMainContext","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.withMainContext","doc":"Execute `x` using the main goal local context and instances "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L320-L321","name":"Lean.Elab.Tactic.getMainTarget","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.getMainTarget","doc":"Return expected type for the main goal. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L316-L317","name":"Lean.Elab.Tactic.getMainTag","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.getMainTag","doc":"Return the main goal tag. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L312-L313","name":"Lean.Elab.Tactic.getMainDecl","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.getMainDecl","doc":"Return the main goal metavariable declaration. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L302-L309","name":"Lean.Elab.Tactic.getMainGoal.loop","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.getMainGoal.loop","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L299-L309","name":"Lean.Elab.Tactic.getMainGoal","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.getMainGoal","doc":"Return the first goal. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L294-L296","name":"Lean.Elab.Tactic.replaceMainGoal","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.replaceMainGoal","doc":"Discard the first goal and replace it by the given list of goals,\nkeeping the other goals. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L289-L290","name":"Lean.Elab.Tactic.appendGoals","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.appendGoals","doc":"Add the given goals at the end of the current goals collection. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L284-L286","name":"Lean.Elab.Tactic.adaptExpander","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.adaptExpander","doc":"Adapt a syntax transformation to a regular tactic evaluator. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L279-L281","name":"Lean.Elab.Tactic.withMacroExpansion","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.withMacroExpansion","doc":"Elaborate `x` with `stx` on the macro stack "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L273-L275","name":"Lean.Elab.Tactic.saveTacticInfoForToken","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.saveTacticInfoForToken","doc":"Save the current tactic state for a token `stx`.\nThis method is a no-op if `stx` has no position information.\nWe use this method to save the tactic state at punctuation such as `;`\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L264-L266","name":"Lean.Elab.Tactic.instAlternativeTacticM","kind":"instance","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.instAlternativeTacticM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L261-L262","name":"Lean.Elab.Tactic.instOrElseTacticM","kind":"instance","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.instOrElseTacticM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L258-L259","name":"Lean.Elab.Tactic.orElse","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.orElse","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L255-L256","name":"Lean.Elab.Tactic.withoutRecover","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.withoutRecover","doc":"Execute `x` with error recovery disabled "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L250-L252","name":"Lean.Elab.Tactic.instMonadExceptExceptionTacticM","kind":"instance","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.instMonadExceptExceptionTacticM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L246-L248","name":"Lean.Elab.Tactic.tryCatch","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.tryCatch","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L242-L244","name":"Lean.Elab.Tactic.instMonadBacktrackSavedStateTacticM","kind":"instance","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.instMonadBacktrackSavedStateTacticM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L228-L240","name":"Lean.Elab.Tactic.closeUsingOrAdmit","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.closeUsingOrAdmit","doc":"Close the main goal using the given tactic. If it fails, log the error and `admit` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L221-L225","name":"Lean.Elab.Tactic.focusAndDone","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.focusAndDone","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L213-L219","name":"Lean.Elab.Tactic.focus","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.focus","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L207-L211","name":"Lean.Elab.Tactic.done","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.done","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L204-L205","name":"Lean.Elab.Tactic.throwNoGoalsToBeSolved","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.throwNoGoalsToBeSolved","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L196-L202","name":"Lean.Elab.Tactic.evalTactic.eval","kind":"opaque","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.evalTactic.eval","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L185-L194","name":"Lean.Elab.Tactic.evalTactic.expandEval","kind":"opaque","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.evalTactic.expandEval","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L167-L183","name":"Lean.Elab.Tactic.evalTactic.handleEx","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.evalTactic.handleEx","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L159-L165","name":"Lean.Elab.Tactic.evalTactic.throwExs","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.evalTactic.throwExs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L142-L202","name":"Lean.Elab.Tactic.evalTactic","kind":"opaque","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.evalTactic","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L140-L140","name":"Lean.Elab.Tactic.EvalTacticFailure.state","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.EvalTacticFailure.state","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L139-L139","name":"Lean.Elab.Tactic.EvalTacticFailure.exception","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.EvalTacticFailure.exception","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L138-L140","name":"Lean.Elab.Tactic.EvalTacticFailure","kind":"structure","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.EvalTacticFailure","doc":"Auxiliary datastructure for capturing exceptions at `evalTactic`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L125-L126","name":"Lean.Elab.Tactic.withTacticInfoContext","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.withTacticInfoContext","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L120-L123","name":"Lean.Elab.Tactic.mkInitialTacticInfo","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.mkInitialTacticInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L110-L118","name":"Lean.Elab.Tactic.mkTacticInfo","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.mkTacticInfo","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L108-L108","name":"Lean.Elab.Tactic.tacticElabAttribute","kind":"opaque","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.tacticElabAttribute","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L105-L106","name":"Lean.Elab.Tactic.mkTacticAttribute","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.mkTacticAttribute","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L103-L103","name":"Lean.Elab.Tactic.getMainModule","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.getMainModule","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L102-L102","name":"Lean.Elab.Tactic.getCurrMacroScope","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.getCurrMacroScope","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L98-L100","name":"Lean.Elab.Tactic.SavedState.restore","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.SavedState.restore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L95-L96","name":"Lean.Elab.Tactic.saveState","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.saveState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L75-L93","name":"Lean.Elab.Tactic.run","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.run","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L65-L67","name":"Lean.Elab.Tactic.getUnsolvedGoals","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.getUnsolvedGoals","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L60-L63","name":"Lean.Elab.Tactic.pruneSolvedGoals","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.pruneSolvedGoals","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L57-L58","name":"Lean.Elab.Tactic.setGoals","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.setGoals","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L54-L55","name":"Lean.Elab.Tactic.getGoals","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.getGoals","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L50-L52","name":"Lean.Elab.Tactic.instMonadTacticM","kind":"instance","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.instMonadTacticM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L41-L41","name":"Lean.Elab.Tactic.Tactic","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.Tactic","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L40-L40","name":"Lean.Elab.Tactic.TacticM","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.TacticM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L38-L38","name":"Lean.Elab.Tactic.SavedState.tactic","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.SavedState.tactic","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L37-L37","name":"Lean.Elab.Tactic.SavedState.term","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.SavedState.term","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L36-L38","name":"Lean.Elab.Tactic.SavedState","kind":"structure","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.SavedState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L34-L34","name":"Lean.Elab.Tactic.Context.recover","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.Context.recover","doc":"If `true`, enable \"error recovery\" in some tactics. For example, `cases` tactic\nadmits unsolved alternatives when `recover == true`. The combinator `withoutRecover <tac>` disables\n\"error recovery\" while executing `<tac>`. This is useful for tactics such as `first | ... | ...`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L28-L28","name":"Lean.Elab.Tactic.Context.elaborator","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.Context.elaborator","doc":"Declaration name of the executing elaborator, used by `mkTacticInfo` to persist it in the info tree "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L26-L34","name":"Lean.Elab.Tactic.Context","kind":"structure","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.Context","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L20-L22","name":"Lean.Elab.Term.reportUnsolvedGoals","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Term.reportUnsolvedGoals","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L17-L18","name":"Lean.Elab.goalsToMessageData","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.goalsToMessageData","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L12-L15","name":"Lean.Elab.admitGoal","kind":"def","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.admitGoal","doc":"Assign `mvarId := sorry` "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L1-L1","name":"Lean.Elab.Tactic.EvalTacticFailure.mk","kind":"ctor","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.EvalTacticFailure.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L1-L1","name":"Lean.Elab.Tactic.SavedState.mk","kind":"ctor","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.SavedState.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Tactic/Basic.lean#L1-L1","name":"Lean.Elab.Tactic.Context.mk","kind":"ctor","docLink":"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.Context.mk","doc":""}]}