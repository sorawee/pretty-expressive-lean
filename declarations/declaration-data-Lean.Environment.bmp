{"name":"Lean.Environment","instances":[{"typeNames":["Lean.EnvExtensionState"],"name":"Lean.instInhabitedEnvExtensionState","className":"Inhabited"},{"typeNames":["Lean.ModuleIdx"],"name":"Lean.instInhabitedModuleIdx","className":"Inhabited"},{"typeNames":["Lean.Import"],"name":"Lean.instReprImport","className":"Repr"},{"typeNames":["Lean.Import"],"name":"Lean.instInhabitedImport","className":"Inhabited"},{"typeNames":["Lean.Import"],"name":"Lean.instToStringImport","className":"ToString"},{"typeNames":["Lean.EnvExtensionEntry"],"name":"Lean.instNonemptyEnvExtensionEntry","className":"Nonempty"},{"typeNames":["Lean.ModuleData"],"name":"Lean.instInhabitedModuleData","className":"Inhabited"},{"typeNames":["Lean.EnvironmentHeader"],"name":"Lean.instNonemptyEnvironmentHeader","className":"Nonempty"},{"typeNames":["Lean.Environment"],"name":"Lean.instNonemptyEnvironment","className":"Nonempty"},{"typeNames":["Lean.EnvExtensionInterface"],"name":"Lean.instInhabitedEnvExtensionInterface","className":"Inhabited"},{"typeNames":["Lean.EnvExtensionInterfaceUnsafe.Ext"],"name":"Lean.EnvExtensionInterfaceUnsafe.instInhabitedExt","className":"Inhabited"},{"typeNames":["Lean.EnvExtension"],"name":"Lean.EnvExtension.instInhabitedEnvExtension","className":"Inhabited"},{"typeNames":["Lean.PersistentEnvExtensionState"],"name":"Lean.instInhabitedPersistentEnvExtensionState","className":"Inhabited"},{"typeNames":["Lean.PersistentEnvExtension"],"name":"Lean.instInhabitedPersistentEnvExtension","className":"Inhabited"},{"typeNames":["Lean.SimplePersistentEnvExtension"],"name":"Lean.SimplePersistentEnvExtension.instInhabitedSimplePersistentEnvExtension","className":"Inhabited"},{"typeNames":["Lean.TagDeclarationExtension"],"name":"Lean.TagDeclarationExtension.instInhabitedTagDeclarationExtension","className":"Inhabited"},{"typeNames":["Lean.MapDeclarationExtension"],"name":"Lean.MapDeclarationExtension.instInhabitedMapDeclarationExtension","className":"Inhabited"},{"typeNames":[],"name":"Lean.instMonadEnv","className":"Lean.MonadEnv"}],"imports":["Init","Lean.Data.HashMap","Lean.ImportingFlag","Lean.Data.SMap","Lean.Declaration","Lean.LocalContext","Lean.Util.Path","Lean.Util.FindExpr","Lean.Util.Profile","Lean.Util.InstantiateLevelParams"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L931-L933","name":"Lean.instMonadEnv","kind":"instance","docLink":"./Lean/Environment.html#Lean.instMonadEnv","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L926-L926","name":"Lean.MonadEnv.modifyEnv","kind":"def","docLink":"./Lean/Environment.html#Lean.MonadEnv.modifyEnv","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L925-L925","name":"Lean.MonadEnv.getEnv","kind":"def","docLink":"./Lean/Environment.html#Lean.MonadEnv.getEnv","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L924-L924","name":"Lean.MonadEnv.mk","kind":"ctor","docLink":"./Lean/Environment.html#Lean.MonadEnv.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L924-L926","name":"Lean.MonadEnv","kind":"class","docLink":"./Lean/Environment.html#Lean.MonadEnv","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L920-L920","name":"Lean.Kernel.whnf","kind":"opaque","docLink":"./Lean/Environment.html#Lean.Kernel.whnf","doc":"Kernel WHNF function. We use it mainly for debugging purposes.\nRecall that the Kernel type checker does not support metavariables.\nWhen implementing automation, consider using the `MetaM` methods. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L912-L913","name":"Lean.Kernel.isDefEqGuarded","kind":"def","docLink":"./Lean/Environment.html#Lean.Kernel.isDefEqGuarded","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L910-L910","name":"Lean.Kernel.isDefEq","kind":"opaque","docLink":"./Lean/Environment.html#Lean.Kernel.isDefEq","doc":"Kernel isDefEq predicate. We use it mainly for debugging purposes.\nRecall that the Kernel type checker does not support metavariables.\nWhen implementing automation, consider using the `MetaM` methods. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L891-L898","name":"Lean.Environment.hasUnsafe","kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.hasUnsafe","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L881-L889","name":"Lean.Environment.evalConstCheck","kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.evalConstCheck","doc":"Like `evalConst`, but first check that `constName` indeed is a declaration of type `typeName`.\nNote that this function cannot guarantee that `typeName` is in fact the name of the type `Î±`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L874-L874","name":"Lean.Environment.evalConst","kind":"opaque","docLink":"./Lean/Environment.html#Lean.Environment.evalConst","doc":"Evaluate the given declaration under the given environment to a value of the given type.\nThis function is only safe to use if the type matches the declaration's type in the environment\nand if `enableInitializersExecution` has been used before importing any modules. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L851-L867","name":"Lean.Environment.displayStats","kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.displayStats","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L846-L848","name":"Lean.Environment.add","kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.add","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L833-L834","name":"Lean.Environment.getNamespaceSet","kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.getNamespaceSet","doc":"Return a set containing all namespaces in `env`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L829-L830","name":"Lean.Environment.isNamespace","kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.isNamespace","doc":"Return `true` if `n` is the name of a namespace in `env`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L825-L826","name":"Lean.Environment.registerNamespace","kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.registerNamespace","doc":"Register a new namespace in the environment. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L804-L820","name":"Lean.namespacesExt","kind":"opaque","docLink":"./Lean/Environment.html#Lean.namespacesExt","doc":"Environment extension for tracking all `namespace` declared by users.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L800-L802","name":"Lean.withImportModules","kind":"def","docLink":"./Lean/Environment.html#Lean.withImportModules","doc":"Create environment object from imports and free compacted regions after calling `act`. No live references to the\nenvironment object or imported objects may exist after `act` finishes. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L778-L795","name":"Lean.importModules.importMods","kind":"opaque","docLink":"./Lean/Environment.html#Lean.importModules.importMods","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L735-L795","name":"Lean.importModules","kind":"def","docLink":"./Lean/Environment.html#Lean.importModules","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L729-L732","name":"Lean.throwAlreadyImported","kind":"def","docLink":"./Lean/Environment.html#Lean.throwAlreadyImported","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L727-L727","name":"Lean.ImportState.regions","kind":"def","docLink":"./Lean/Environment.html#Lean.ImportState.regions","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L726-L726","name":"Lean.ImportState.moduleData","kind":"def","docLink":"./Lean/Environment.html#Lean.ImportState.moduleData","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L725-L725","name":"Lean.ImportState.moduleNames","kind":"def","docLink":"./Lean/Environment.html#Lean.ImportState.moduleNames","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L724-L724","name":"Lean.ImportState.moduleNameSet","kind":"def","docLink":"./Lean/Environment.html#Lean.ImportState.moduleNameSet","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L723-L727","name":"Lean.ImportState","kind":"structure","docLink":"./Lean/Environment.html#Lean.ImportState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L696-L696","name":"Lean.getNumBuiltinAttributes","kind":"opaque","docLink":"./Lean/Environment.html#Lean.getNumBuiltinAttributes","doc":"\"Forward declaration\" for retrieving the number of builtin attributes. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L694-L694","name":"Lean.updateEnvAttributes","kind":"opaque","docLink":"./Lean/Environment.html#Lean.updateEnvAttributes","doc":"\"Forward declaration\" needed for updating the attribute table with user-defined attributes.\nUser-defined attributes are declared using the `initialize` command. The `initialize` command is just syntax sugar for the `init` attribute.\nThe `init` attribute is initialized after the `attributeExtension` is initialized. We cannot change the order since the `init` attribute is an attribute,\nand requires this extension.\nThe `attributeExtension` initializer uses `attributeMapRef` to initialize the attribute mapping.\nWhen we a new user-defined attribute declaration is imported, `attributeMapRef` is updated.\nLater, we set this method with code that adds the user-defined attributes that were imported after we initialized `attributeExtension`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L653-L654","name":"Lean.writeModule","kind":"def","docLink":"./Lean/Environment.html#Lean.writeModule","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L639-L650","name":"Lean.mkModuleData","kind":"def","docLink":"./Lean/Environment.html#Lean.mkModuleData","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L621-L637","name":"Lean.Environment.freeRegions","kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.freeRegions","doc":"Free compacted regions of imports. No live references to imported objects may exist at the time of invocation; in\nparticular, `env` should be the last reference to any `Environment` derived from these imports. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L615-L615","name":"Lean.readModuleData","kind":"opaque","docLink":"./Lean/Environment.html#Lean.readModuleData","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L613-L613","name":"Lean.saveModuleData","kind":"opaque","docLink":"./Lean/Environment.html#Lean.saveModuleData","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L605-L608","name":"Lean.MapDeclarationExtension.contains","kind":"def","docLink":"./Lean/Environment.html#Lean.MapDeclarationExtension.contains","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L597-L603","name":"Lean.MapDeclarationExtension.find?","kind":"def","docLink":"./Lean/Environment.html#Lean.MapDeclarationExtension.find?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L592-L595","name":"Lean.MapDeclarationExtension.insert","kind":"def","docLink":"./Lean/Environment.html#Lean.MapDeclarationExtension.insert","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L589-L590","name":"Lean.MapDeclarationExtension.instInhabitedMapDeclarationExtension","kind":"instance","docLink":"./Lean/Environment.html#Lean.MapDeclarationExtension.instInhabitedMapDeclarationExtension","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L579-L585","name":"Lean.mkMapDeclarationExtension","kind":"def","docLink":"./Lean/Environment.html#Lean.mkMapDeclarationExtension","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L577-L577","name":"Lean.MapDeclarationExtension","kind":"def","docLink":"./Lean/Environment.html#Lean.MapDeclarationExtension","doc":"Environment extension for mapping declarations to values.\nDeclarations must only be inserted into the mapping in the module where they were declared. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L567-L570","name":"Lean.TagDeclarationExtension.isTagged","kind":"def","docLink":"./Lean/Environment.html#Lean.TagDeclarationExtension.isTagged","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L562-L565","name":"Lean.TagDeclarationExtension.tag","kind":"def","docLink":"./Lean/Environment.html#Lean.TagDeclarationExtension.tag","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L559-L560","name":"Lean.TagDeclarationExtension.instInhabitedTagDeclarationExtension","kind":"instance","docLink":"./Lean/Environment.html#Lean.TagDeclarationExtension.instInhabitedTagDeclarationExtension","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L549-L555","name":"Lean.mkTagDeclarationExtension","kind":"def","docLink":"./Lean/Environment.html#Lean.mkTagDeclarationExtension","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L547-L547","name":"Lean.TagDeclarationExtension","kind":"def","docLink":"./Lean/Environment.html#Lean.TagDeclarationExtension","doc":"Environment extension for tagging declarations.\nDeclarations must only be tagged in the module where they were declared. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L540-L541","name":"Lean.SimplePersistentEnvExtension.modifyState","kind":"def","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtension.modifyState","doc":"Modify the state of the given extension in the given environment by applying the given function. This change is *not* persisted across files. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L536-L537","name":"Lean.SimplePersistentEnvExtension.setState","kind":"def","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtension.setState","doc":"Set the current state of the given `SimplePersistentEnvExtension`. This change is *not* persisted across files. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L532-L533","name":"Lean.SimplePersistentEnvExtension.getState","kind":"def","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtension.getState","doc":"Get the current state of the given `SimplePersistentEnvExtension`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L528-L529","name":"Lean.SimplePersistentEnvExtension.getEntries","kind":"def","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtension.getEntries","doc":"Get the list of values used to update the state of the given\n`SimplePersistentEnvExtension` in the current file. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L523-L524","name":"Lean.SimplePersistentEnvExtension.instInhabitedSimplePersistentEnvExtension","kind":"instance","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtension.instInhabitedSimplePersistentEnvExtension","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L510-L519","name":"Lean.registerSimplePersistentEnvExtension","kind":"def","docLink":"./Lean/Environment.html#Lean.registerSimplePersistentEnvExtension","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L508-L508","name":"Lean.SimplePersistentEnvExtensionDescr.toArrayFn","kind":"def","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr.toArrayFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L507-L507","name":"Lean.SimplePersistentEnvExtensionDescr.addImportedFn","kind":"def","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr.addImportedFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L506-L506","name":"Lean.SimplePersistentEnvExtensionDescr.addEntryFn","kind":"def","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr.addEntryFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L505-L505","name":"Lean.SimplePersistentEnvExtensionDescr.name","kind":"def","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr.name","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L504-L504","name":"Lean.SimplePersistentEnvExtensionDescr.mk","kind":"ctor","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L504-L508","name":"Lean.SimplePersistentEnvExtensionDescr","kind":"structure","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L501-L502","name":"Lean.mkStateFromImportedEntries","kind":"def","docLink":"./Lean/Environment.html#Lean.mkStateFromImportedEntries","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L499-L499","name":"Lean.SimplePersistentEnvExtension","kind":"def","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtension","doc":"Simple `PersistentEnvExtension` that implements `exportEntriesFn` using a list of entries. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L496-L496","name":"Lean.registerPersistentEnvExtension","kind":"opaque","docLink":"./Lean/Environment.html#Lean.registerPersistentEnvExtension","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L474-L493","name":"Lean.registerPersistentEnvExtensionUnsafe","kind":"def","docLink":"./Lean/Environment.html#Lean.registerPersistentEnvExtensionUnsafe","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L472-L472","name":"Lean.PersistentEnvExtensionDescr.statsFn","kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr.statsFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L471-L471","name":"Lean.PersistentEnvExtensionDescr.exportEntriesFn","kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr.exportEntriesFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L470-L470","name":"Lean.PersistentEnvExtensionDescr.addEntryFn","kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr.addEntryFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L469-L469","name":"Lean.PersistentEnvExtensionDescr.addImportedFn","kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr.addImportedFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L468-L468","name":"Lean.PersistentEnvExtensionDescr.mkInitial","kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr.mkInitial","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L467-L467","name":"Lean.PersistentEnvExtensionDescr.name","kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr.name","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L466-L466","name":"Lean.PersistentEnvExtensionDescr.mk","kind":"ctor","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L466-L472","name":"Lean.PersistentEnvExtensionDescr","kind":"structure","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L464-L464","name":"Lean.persistentEnvExtensionsRef","kind":"opaque","docLink":"./Lean/Environment.html#Lean.persistentEnvExtensionsRef","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L459-L460","name":"Lean.PersistentEnvExtension.modifyState","kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.modifyState","doc":"Modify the state of the given extension in the given environment by applying the given function. This change is *not* persisted across files. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L455-L456","name":"Lean.PersistentEnvExtension.setState","kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.setState","doc":"Set the current state of the given extension in the given environment. This change is *not* persisted across files. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L451-L452","name":"Lean.PersistentEnvExtension.getState","kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.getState","doc":"Get the current state of the given extension in the given environment. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L445-L448","name":"Lean.PersistentEnvExtension.addEntry","kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.addEntry","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L442-L443","name":"Lean.PersistentEnvExtension.getModuleEntries","kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.getModuleEntries","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L430-L438","name":"Lean.instInhabitedPersistentEnvExtension","kind":"instance","docLink":"./Lean/Environment.html#Lean.instInhabitedPersistentEnvExtension","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L427-L428","name":"Lean.instInhabitedPersistentEnvExtensionState","kind":"instance","docLink":"./Lean/Environment.html#Lean.instInhabitedPersistentEnvExtensionState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L425-L425","name":"Lean.PersistentEnvExtension.statsFn","kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.statsFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L424-L424","name":"Lean.PersistentEnvExtension.exportEntriesFn","kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.exportEntriesFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L423-L423","name":"Lean.PersistentEnvExtension.addEntryFn","kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.addEntryFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L422-L422","name":"Lean.PersistentEnvExtension.addImportedFn","kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.addImportedFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L421-L421","name":"Lean.PersistentEnvExtension.name","kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.name","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L420-L420","name":"Lean.PersistentEnvExtension.toEnvExtension","kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.toEnvExtension","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L419-L419","name":"Lean.PersistentEnvExtension.mk","kind":"ctor","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L419-L425","name":"Lean.PersistentEnvExtension","kind":"structure","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension","doc":"An environment extension with support for storing/retrieving entries from a .olean file.\n- Î± is the type of the entries that are stored in .olean files.\n- Î² is the type of values used to update the state.\n- Ï is the actual state.\n\nRemark: for most extensions Î± and Î² coincide.\n\nNote that `addEntryFn` is not in `IO`. This is intentional, and allows us to write simple functions such as\n```\ndef addAlias (env : Environment) (a : Name) (e : Name) : Environment :=\naliasExtension.addEntry env (a, e)\n```\nwithout using `IO`. We have many functions like `addAlias`.\n\n`Î±` and âµÎ²` do not coincide for extensions where the data used to update the state contains, for example,\nclosures which we currently cannot store in files. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L401-L401","name":"Lean.ImportM","kind":"def","docLink":"./Lean/Environment.html#Lean.ImportM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L399-L399","name":"Lean.ImportM.Context.opts","kind":"def","docLink":"./Lean/Environment.html#Lean.ImportM.Context.opts","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L398-L398","name":"Lean.ImportM.Context.env","kind":"def","docLink":"./Lean/Environment.html#Lean.ImportM.Context.env","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L397-L399","name":"Lean.ImportM.Context","kind":"structure","docLink":"./Lean/Environment.html#Lean.ImportM.Context","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L395-L395","name":"Lean.PersistentEnvExtensionState.state","kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionState.state","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L394-L394","name":"Lean.PersistentEnvExtensionState.importedEntries","kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionState.importedEntries","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L393-L393","name":"Lean.PersistentEnvExtensionState.mk","kind":"ctor","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionState.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L393-L395","name":"Lean.PersistentEnvExtensionState","kind":"structure","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L381-L391","name":"Lean.mkEmptyEnvironment","kind":"def","docLink":"./Lean/Environment.html#Lean.mkEmptyEnvironment","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L377-L377","name":"Lean.registerEnvExtension","kind":"def","docLink":"./Lean/Environment.html#Lean.registerEnvExtension","doc":"Environment extensions can only be registered during initialization.\nReasons:\n1- Our implementation assumes the number of extensions does not change after an environment object is created.\n2- We do not use any synchronization primitive to access `envExtensionsRef`.\n\nNote that by default, extension state is *not* stored in .olean files and will not propagate across `import`s.\nFor that, you need to register a persistent environment extension. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L367-L367","name":"Lean.EnvExtension.getState","kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtension.getState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L366-L366","name":"Lean.EnvExtension.modifyState","kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtension.modifyState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L365-L365","name":"Lean.EnvExtension.setState","kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtension.setState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L364-L364","name":"Lean.EnvExtension.instInhabitedEnvExtension","kind":"instance","docLink":"./Lean/Environment.html#Lean.EnvExtension.instInhabitedEnvExtension","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L358-L358","name":"Lean.EnvExtension","kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtension","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L356-L356","name":"Lean.EnvExtensionInterfaceImp","kind":"opaque","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceImp","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L342-L351","name":"Lean.EnvExtensionInterfaceUnsafe.imp","kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.imp","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L338-L340","name":"Lean.EnvExtensionInterfaceUnsafe.mkInitialExtStates","kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.mkInitialExtStates","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L326-L336","name":"Lean.EnvExtensionInterfaceUnsafe.registerExt","kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.registerExt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L319-L324","name":"Lean.EnvExtensionInterfaceUnsafe.getState","kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.getState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L308-L317","name":"Lean.EnvExtensionInterfaceUnsafe.modifyState","kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.modifyState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L301-L306","name":"Lean.EnvExtensionInterfaceUnsafe.setState","kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.setState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L290-L297","name":"Lean.EnvExtensionInterfaceUnsafe.ensureExtensionsArraySize.loop","kind":"opaque","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.ensureExtensionsArraySize.loop","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L287-L297","name":"Lean.EnvExtensionInterfaceUnsafe.ensureExtensionsArraySize","kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.ensureExtensionsArraySize","doc":"User-defined environment extensions are declared using the `initialize` command.\nThis command is just syntax sugar for the `init` attribute.\nWhen we `import` lean modules, the vector stored at `envExtensionsRef` may increase in size because of\nuser-defined environment extensions. When this happens, we must adjust the size of the `env.extensions`.\nThis method is invoked when processing `import`s.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L276-L276","name":"Lean.EnvExtensionInterfaceUnsafe.instInhabitedExt","kind":"instance","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.instInhabitedExt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L275-L275","name":"Lean.EnvExtensionInterfaceUnsafe.Ext.mkInitial","kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext.mkInitial","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L274-L274","name":"Lean.EnvExtensionInterfaceUnsafe.Ext.idx","kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext.idx","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L273-L273","name":"Lean.EnvExtensionInterfaceUnsafe.Ext.mk","kind":"ctor","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L273-L276","name":"Lean.EnvExtensionInterfaceUnsafe.Ext","kind":"structure","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L258-L268","name":"Lean.instInhabitedEnvExtensionInterface","kind":"instance","docLink":"./Lean/Environment.html#Lean.instInhabitedEnvExtensionInterface","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L256-L256","name":"Lean.EnvExtensionInterface.ensureExtensionsSize","kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterface.ensureExtensionsSize","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L255-L255","name":"Lean.EnvExtensionInterface.mkInitialExtStates","kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterface.mkInitialExtStates","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L254-L254","name":"Lean.EnvExtensionInterface.getState","kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterface.getState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L253-L253","name":"Lean.EnvExtensionInterface.modifyState","kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterface.modifyState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L252-L252","name":"Lean.EnvExtensionInterface.setState","kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterface.setState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L251-L251","name":"Lean.EnvExtensionInterface.registerExt","kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterface.registerExt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L250-L250","name":"Lean.EnvExtensionInterface.inhabitedExt","kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterface.inhabitedExt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L249-L249","name":"Lean.EnvExtensionInterface.ext","kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterface.ext","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L248-L256","name":"Lean.EnvExtensionInterface","kind":"structure","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterface","doc":"Interface for managing environment extensions. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L242-L243","name":"Lean.ConstantInfo.instantiateValueLevelParams!","kind":"def","docLink":"./Lean/Environment.html#Lean.ConstantInfo.instantiateValueLevelParams!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L239-L240","name":"Lean.ConstantInfo.instantiateTypeLevelParams","kind":"def","docLink":"./Lean/Environment.html#Lean.ConstantInfo.instantiateTypeLevelParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L233-L233","name":"Lean.Environment.addDecl","kind":"opaque","docLink":"./Lean/Environment.html#Lean.Environment.addDecl","doc":"Type check given declaration and add it to the environment "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L227-L227","name":"Lean.KernelException.deepRecursion","kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.deepRecursion","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L226-L226","name":"Lean.KernelException.excessiveMemory","kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.excessiveMemory","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L225-L225","name":"Lean.KernelException.deterministicTimeout","kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.deterministicTimeout","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L224-L224","name":"Lean.KernelException.other","kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.other","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L223-L223","name":"Lean.KernelException.invalidProj","kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.invalidProj","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L222-L222","name":"Lean.KernelException.appTypeMismatch","kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.appTypeMismatch","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L221-L221","name":"Lean.KernelException.exprTypeMismatch","kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.exprTypeMismatch","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L220-L220","name":"Lean.KernelException.letTypeMismatch","kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.letTypeMismatch","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L219-L219","name":"Lean.KernelException.typeExpected","kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.typeExpected","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L218-L218","name":"Lean.KernelException.funExpected","kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.funExpected","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L217-L217","name":"Lean.KernelException.declHasFVars","kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.declHasFVars","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L216-L216","name":"Lean.KernelException.declHasMVars","kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.declHasMVars","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L215-L215","name":"Lean.KernelException.declTypeMismatch","kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.declTypeMismatch","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L214-L214","name":"Lean.KernelException.alreadyDeclared","kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.alreadyDeclared","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L213-L213","name":"Lean.KernelException.unknownConstant","kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.unknownConstant","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L212-L227","name":"Lean.KernelException","kind":"inductive","docLink":"./Lean/Environment.html#Lean.KernelException","doc":"Exceptions that can be raised by the Kernel when type checking new declarations. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L206-L207","name":"Lean.Environment.getModuleIdx?","kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.getModuleIdx?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L201-L204","name":"Lean.Environment.isConstructor","kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.isConstructor","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L198-L199","name":"Lean.Environment.getModuleIdxFor?","kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.getModuleIdxFor?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L183-L184","name":"Lean.Environment.mainModule","kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.mainModule","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L179-L180","name":"Lean.Environment.setMainModule","kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.setMainModule","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L175-L176","name":"Lean.Environment.allImportedModuleNames","kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.allImportedModuleNames","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L172-L173","name":"Lean.Environment.imports","kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.imports","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L169-L170","name":"Lean.Environment.contains","kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.contains","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L165-L167","name":"Lean.Environment.find?","kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.find?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L158-L162","name":"Lean.Environment.addExtraName","kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.addExtraName","doc":"Save an extra constant name that is used to populate `const2ModIdx` when we import\n.olean files. We use this feature to save in which module an auxiliary declaration\ncreated by the code generator has been created.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L150-L151","name":"Lean.Environment.addAux","kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.addAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L146-L146","name":"Lean.instNonemptyEnvironment","kind":"instance","docLink":"./Lean/Environment.html#Lean.instNonemptyEnvironment","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L145-L145","name":"Lean.Environment.header","kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.header","doc":"The header contains additional information that is not updated often. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L143-L143","name":"Lean.Environment.extraConstNames","kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.extraConstNames","doc":"Constant names to be saved in the field `extraConstNames` at `ModuleData`.\nIt contains auxiliary declaration names created by the code generator which are not in `constants`.\nWhen importing modules, we want to insert them at `const2ModIdx`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L137-L137","name":"Lean.Environment.extensions","kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.extensions","doc":"Environment extensions. It also includes user-defined extensions.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L133-L133","name":"Lean.Environment.constants","kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.constants","doc":"Mapping from constant name to `ConstantInfo`. It contains all constants (definitions, theorems, axioms, etc)\nthat have been already type checked by the kernel.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L128-L128","name":"Lean.Environment.const2ModIdx","kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.const2ModIdx","doc":"Mapping from constant name to module (index) where constant has been declared.\nRecall that a Lean file has a header where previously compiled modules can be imported.\nEach imported module has a unique `ModuleIdx`.\nMany extensions use the `ModuleIdx` to efficiently retrieve information stored in imported modules.\n\nRemark: this mapping also contains auxiliary constants, created by the code generator, that are **not** in\nthe field `constants`. These auxiliary constants are invisible to the Lean kernel and elaborator.\nOnly the code generator uses them.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L117-L146","name":"Lean.Environment","kind":"structure","docLink":"./Lean/Environment.html#Lean.Environment","doc":"An environment stores declarations provided by the user. The kernel\ncurrently supports different kinds of declarations such as definitions, theorems,\nand inductive families. Each has a unique identifier (i.e., `Name`), and can be\nparameterized by a sequence of universe parameters.\nA constant in Lean is just a reference to a `ConstantInfo` object. The main task of\nthe kernel is to type check these declarations and refuse type incorrect ones. The\nkernel does not allow declarations containing metavariables and/or free variables\nto be added to an environment. Environments are never destructively updated.\n\nThe environment also contains a collection of extensions. For example, the `simp` theorems\ndeclared by users are stored in an environment extension. Users can declare new extensions\nusing meta-programming.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L101-L101","name":"Lean.instNonemptyEnvironmentHeader","kind":"instance","docLink":"./Lean/Environment.html#Lean.instNonemptyEnvironmentHeader","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L100-L100","name":"Lean.EnvironmentHeader.moduleData","kind":"def","docLink":"./Lean/Environment.html#Lean.EnvironmentHeader.moduleData","doc":"Module data for all imported modules. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L98-L98","name":"Lean.EnvironmentHeader.moduleNames","kind":"def","docLink":"./Lean/Environment.html#Lean.EnvironmentHeader.moduleNames","doc":"Name of all imported modules (directly and indirectly). "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L96-L96","name":"Lean.EnvironmentHeader.regions","kind":"def","docLink":"./Lean/Environment.html#Lean.EnvironmentHeader.regions","doc":"Compacted regions for all imported modules. Objects in compacted memory regions do no require any memory management. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L94-L94","name":"Lean.EnvironmentHeader.imports","kind":"def","docLink":"./Lean/Environment.html#Lean.EnvironmentHeader.imports","doc":"Direct imports "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L92-L92","name":"Lean.EnvironmentHeader.mainModule","kind":"def","docLink":"./Lean/Environment.html#Lean.EnvironmentHeader.mainModule","doc":"Name of the module being compiled.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L88-L88","name":"Lean.EnvironmentHeader.quotInit","kind":"def","docLink":"./Lean/Environment.html#Lean.EnvironmentHeader.quotInit","doc":"`quotInit = true` if the command `init_quot` has already been executed for the environment, and\n`Quot` declarations have been added to the environment.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L83-L83","name":"Lean.EnvironmentHeader.trustLevel","kind":"def","docLink":"./Lean/Environment.html#Lean.EnvironmentHeader.trustLevel","doc":"The trust level used by the kernel. For example,\nthe kernel assumes imported constants are type correct when the trust level is greater than zero.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L78-L101","name":"Lean.EnvironmentHeader","kind":"structure","docLink":"./Lean/Environment.html#Lean.EnvironmentHeader","doc":"Environment fields that are not used often. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L75-L75","name":"Lean.instInhabitedModuleData","kind":"instance","docLink":"./Lean/Environment.html#Lean.instInhabitedModuleData","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L74-L74","name":"Lean.ModuleData.entries","kind":"def","docLink":"./Lean/Environment.html#Lean.ModuleData.entries","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L73-L73","name":"Lean.ModuleData.extraConstNames","kind":"def","docLink":"./Lean/Environment.html#Lean.ModuleData.extraConstNames","doc":"Extra entries for the `const2ModIdx` map in the `Environment` object.\nThe code generator creates auxiliary declarations that are not in the\nmapping `constants`, but we want to know in which module they were generated.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L67-L67","name":"Lean.ModuleData.constants","kind":"def","docLink":"./Lean/Environment.html#Lean.ModuleData.constants","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L66-L66","name":"Lean.ModuleData.constNames","kind":"def","docLink":"./Lean/Environment.html#Lean.ModuleData.constNames","doc":"`constNames` contains all constant names in `constants`.\nThis information is redundant. It is equal to `constants.map fun c => c.name`,\nbut it improves the performance of `importModules`. `perf` reports that 12% of the\nruntime was being spent on `ConstantInfo.name` when importing a file containing only `import Lean`\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L59-L59","name":"Lean.ModuleData.imports","kind":"def","docLink":"./Lean/Environment.html#Lean.ModuleData.imports","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L58-L75","name":"Lean.ModuleData","kind":"structure","docLink":"./Lean/Environment.html#Lean.ModuleData","doc":"Content of a .olean file.\nWe use `compact.cpp` to generate the image of this object in disk. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L54-L54","name":"Lean.instNonemptyEnvExtensionEntry","kind":"instance","docLink":"./Lean/Environment.html#Lean.instNonemptyEnvExtensionEntry","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L53-L53","name":"Lean.EnvExtensionEntry","kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionEntry","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L52-L52","name":"Lean.EnvExtensionEntrySpec","kind":"opaque","docLink":"./Lean/Environment.html#Lean.EnvExtensionEntrySpec","doc":"Opaque persistent environment extension entry. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L49-L49","name":"Lean.CompactedRegion.free","kind":"opaque","docLink":"./Lean/Environment.html#Lean.CompactedRegion.free","doc":"Free a compacted region and its contents. No live references to the contents may exist at the time of invocation. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L45-L45","name":"Lean.CompactedRegion.isMemoryMapped","kind":"opaque","docLink":"./Lean/Environment.html#Lean.CompactedRegion.isMemoryMapped","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L42-L42","name":"Lean.CompactedRegion","kind":"def","docLink":"./Lean/Environment.html#Lean.CompactedRegion","doc":"A compacted region holds multiple Lean objects in a contiguous memory region, which can be read/written to/from disk.\nObjects inside the region do not have reference counters and cannot be freed individually. The contents of .olean\nfiles are compacted regions. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L36-L36","name":"Lean.instToStringImport","kind":"instance","docLink":"./Lean/Environment.html#Lean.instToStringImport","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L34-L34","name":"Lean.instInhabitedImport","kind":"instance","docLink":"./Lean/Environment.html#Lean.instInhabitedImport","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L34-L34","name":"Lean.instReprImport","kind":"instance","docLink":"./Lean/Environment.html#Lean.instReprImport","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L33-L33","name":"Lean.Import.runtimeOnly","kind":"def","docLink":"./Lean/Environment.html#Lean.Import.runtimeOnly","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L32-L32","name":"Lean.Import.module","kind":"def","docLink":"./Lean/Environment.html#Lean.Import.module","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L31-L34","name":"Lean.Import","kind":"structure","docLink":"./Lean/Environment.html#Lean.Import","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L29-L29","name":"Lean.ConstMap","kind":"def","docLink":"./Lean/Environment.html#Lean.ConstMap","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L27-L27","name":"Lean.instInhabitedModuleIdx","kind":"instance","docLink":"./Lean/Environment.html#Lean.instInhabitedModuleIdx","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L25-L25","name":"Lean.ModuleIdx.toNat","kind":"def","docLink":"./Lean/Environment.html#Lean.ModuleIdx.toNat","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L22-L23","name":"Lean.ModuleIdx","kind":"def","docLink":"./Lean/Environment.html#Lean.ModuleIdx","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L20-L20","name":"Lean.instInhabitedEnvExtensionState","kind":"instance","docLink":"./Lean/Environment.html#Lean.instInhabitedEnvExtensionState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L19-L19","name":"Lean.EnvExtensionState","kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L18-L18","name":"Lean.EnvExtensionStateSpec","kind":"opaque","docLink":"./Lean/Environment.html#Lean.EnvExtensionStateSpec","doc":"Opaque environment extension state. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L1-L1","name":"Lean.Environment.mk","kind":"ctor","docLink":"./Lean/Environment.html#Lean.Environment.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L1-L1","name":"Lean.EnvExtensionInterface.mk","kind":"ctor","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterface.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L1-L1","name":"Lean.EnvironmentHeader.mk","kind":"ctor","docLink":"./Lean/Environment.html#Lean.EnvironmentHeader.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L1-L1","name":"Lean.ImportState.mk","kind":"ctor","docLink":"./Lean/Environment.html#Lean.ImportState.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L1-L1","name":"Lean.ModuleData.mk","kind":"ctor","docLink":"./Lean/Environment.html#Lean.ModuleData.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L1-L1","name":"Lean.ImportM.Context.mk","kind":"ctor","docLink":"./Lean/Environment.html#Lean.ImportM.Context.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Environment.lean#L1-L1","name":"Lean.Import.mk","kind":"ctor","docLink":"./Lean/Environment.html#Lean.Import.mk","doc":""}]}