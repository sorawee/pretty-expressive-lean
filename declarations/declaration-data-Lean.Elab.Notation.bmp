{"name":"Lean.Elab.Notation","instances":[],"imports":["Init","Lean.Elab.Syntax","Lean.Elab.AuxDef","Lean.Elab.BuiltinNotation"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Notation.lean#L163-L169","name":"Lean.Elab.Command.expandNotation","kind":"def","docLink":"./Lean/Elab/Notation.html#Lean.Elab.Command.expandNotation","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Notation.lean#L120-L124","name":"Lean.Elab.Command.mkUnexpander.flattenApp","kind":"def","docLink":"./Lean/Elab/Notation.html#Lean.Elab.Command.mkUnexpander.flattenApp","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Notation.lean#L86-L124","name":"Lean.Elab.Command.mkUnexpander","kind":"def","docLink":"./Lean/Elab/Notation.html#Lean.Elab.Command.mkUnexpander","doc":"Try to derive an unexpander from a notation.\nThe notation must be of the form `notation ... => c body`\nwhere `c` is a declaration in the current scope and `body` any syntax\nthat contains each variable from the LHS at most once. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Notation.lean#L70-L80","name":"Lean.Elab.Command.hasDuplicateAntiquot","kind":"def","docLink":"./Lean/Elab/Notation.html#Lean.Elab.Command.hasDuplicateAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Notation.lean#L62-L68","name":"Lean.Elab.Command.removeParentheses","kind":"opaque","docLink":"./Lean/Elab/Notation.html#Lean.Elab.Command.removeParentheses","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Notation.lean#L55-L60","name":"Lean.Elab.Command.removeParenthesesAux","kind":"def","docLink":"./Lean/Elab/Notation.html#Lean.Elab.Command.removeParenthesesAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Notation.lean#L46-L53","name":"Lean.Elab.Command.expandNotationItemIntoPattern","kind":"def","docLink":"./Lean/Elab/Notation.html#Lean.Elab.Command.expandNotationItemIntoPattern","doc":"Convert `notation` command lhs item into a pattern element "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Notation.lean#L40-L43","name":"Lean.Elab.Command.expandNotationItemIntoSyntaxItem","kind":"def","docLink":"./Lean/Elab/Notation.html#Lean.Elab.Command.expandNotationItemIntoSyntaxItem","doc":"Convert `notation` command lhs item into a `syntax` command item "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Notation.lean#L27-L37","name":"Lean.Elab.Command.addInheritDocDefault","kind":"def","docLink":"./Lean/Elab/Notation.html#Lean.Elab.Command.addInheritDocDefault","doc":""}]}