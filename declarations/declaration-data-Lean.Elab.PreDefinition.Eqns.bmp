{"name":"Lean.Elab.PreDefinition.Eqns","instances":[{"typeNames":["Lean.Elab.Eqns.EqnInfoCore"],"name":"Lean.Elab.Eqns.instInhabitedEqnInfoCore","className":"Inhabited"},{"typeNames":["Lean.Elab.Eqns.UnfoldEqnExtState"],"name":"Lean.Elab.Eqns.instInhabitedUnfoldEqnExtState","className":"Inhabited"}],"imports":["Init","Lean.Meta.Eqns","Lean.Util.CollectFVars","Lean.Util.ForEachExprWhere","Lean.Meta.Tactic.Split","Lean.Meta.Tactic.Apply","Lean.Meta.Tactic.Refl","Lean.Meta.Match.MatchEqs"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L378-L387","name":"Lean.Elab.Eqns.getUnfoldFor?","kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.getUnfoldFor?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L360-L376","name":"Lean.Elab.Eqns.mkUnfoldEq","kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.mkUnfoldEq","doc":"Generate the \"unfold\" lemma for `declName`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L339-L356","name":"Lean.Elab.Eqns.mkUnfoldProof.go","kind":"opaque","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.mkUnfoldProof.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L326-L357","name":"Lean.Elab.Eqns.mkUnfoldProof","kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.mkUnfoldProof","doc":"Auxiliary method for `mkUnfoldEq`. The structure is based on `mkEqnTypes`.\n`mvarId` is the goal to be proved. It is a goal of the form\n```\ndeclName x_1 ... x_n = body[x_1, ..., x_n]\n```\nThe proof is constracted using the automatically generated equational theorems.\nWe basically keep splitting the `match` and `if-then-else` expressions in the right hand side\nuntil one of the equational theorems is applicable.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L313-L314","name":"Lean.Elab.Eqns.unfoldEqnExt","kind":"opaque","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.unfoldEqnExt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L310-L310","name":"Lean.Elab.Eqns.instInhabitedUnfoldEqnExtState","kind":"instance","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.instInhabitedUnfoldEqnExtState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L309-L309","name":"Lean.Elab.Eqns.UnfoldEqnExtState.map","kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.UnfoldEqnExtState.map","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L308-L310","name":"Lean.Elab.Eqns.UnfoldEqnExtState","kind":"structure","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.UnfoldEqnExtState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L305-L306","name":"Lean.Elab.Eqns.tryContradiction","kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.tryContradiction","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L296-L303","name":"Lean.Elab.Eqns.whnfReducibleLHS?","kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.whnfReducibleLHS?","doc":"Apply `whnfR` to lhs, return `none` if `lhs` was not modified "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L282-L286","name":"Lean.Elab.Eqns.deltaRHS?","kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.deltaRHS?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L276-L280","name":"Lean.Elab.Eqns.deltaLHS","kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.deltaLHS","doc":"Delta reduce the equation left-hand-side "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L254-L273","name":"Lean.Elab.Eqns.removeUnusedEqnHypotheses.go","kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.removeUnusedEqnHypotheses.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L251-L273","name":"Lean.Elab.Eqns.removeUnusedEqnHypotheses","kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.removeUnusedEqnHypotheses","doc":"Some of the hypotheses added by `mkEqnTypes` may not be used by the actual proof (i.e., `value` argument).\nThis method eliminates them.\n\nAlternative solution: improve `saveEqn` and make sure it never includes unnecessary hypotheses.\nThese hypotheses are leftovers from tactics such as `splitMatch?` used in `mkEqnTypes`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L223-L242","name":"Lean.Elab.Eqns.mkEqnTypes.go","kind":"opaque","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.mkEqnTypes.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L219-L242","name":"Lean.Elab.Eqns.mkEqnTypes","kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.mkEqnTypes","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L140-L149","name":"Lean.Elab.Eqns.simpEqnType.collect","kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.simpEqnType.collect","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L112-L149","name":"Lean.Elab.Eqns.simpEqnType","kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.simpEqnType","doc":"Eliminate `namedPatterns` from equation, and trivial hypotheses.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L105-L107","name":"Lean.Elab.Eqns.tryURefl","kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.tryURefl","doc":"Try to close goal using `rfl` with smart unfolding turned off. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L95-L95","name":"Lean.Elab.Eqns.Context.declNames","kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.Context.declNames","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L94-L95","name":"Lean.Elab.Eqns.Context","kind":"structure","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.Context","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L83-L91","name":"Lean.Elab.Eqns.splitMatch?.go","kind":"opaque","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.splitMatch?.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L81-L92","name":"Lean.Elab.Eqns.splitMatch?","kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.splitMatch?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L48-L50","name":"Lean.Elab.Eqns.simpIf?","kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.simpIf?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L44-L46","name":"Lean.Elab.Eqns.simpMatch?","kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.simpMatch?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L35-L42","name":"Lean.Elab.Eqns.funext?","kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.funext?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L29-L33","name":"Lean.Elab.Eqns.expandRHS?","kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.expandRHS?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L24-L27","name":"Lean.Elab.Eqns.expand","kind":"opaque","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.expand","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L22-L22","name":"Lean.Elab.Eqns.instInhabitedEqnInfoCore","kind":"instance","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.instInhabitedEqnInfoCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L21-L21","name":"Lean.Elab.Eqns.EqnInfoCore.value","kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.EqnInfoCore.value","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L20-L20","name":"Lean.Elab.Eqns.EqnInfoCore.type","kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.EqnInfoCore.type","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L19-L19","name":"Lean.Elab.Eqns.EqnInfoCore.levelParams","kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.EqnInfoCore.levelParams","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L18-L18","name":"Lean.Elab.Eqns.EqnInfoCore.declName","kind":"def","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.EqnInfoCore.declName","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L17-L22","name":"Lean.Elab.Eqns.EqnInfoCore","kind":"structure","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.EqnInfoCore","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L1-L1","name":"Lean.Elab.Eqns.Context.mk","kind":"ctor","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.Context.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L1-L1","name":"Lean.Elab.Eqns.EqnInfoCore.mk","kind":"ctor","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.EqnInfoCore.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/PreDefinition/Eqns.lean#L1-L1","name":"Lean.Elab.Eqns.UnfoldEqnExtState.mk","kind":"ctor","docLink":"./Lean/Elab/PreDefinition/Eqns.html#Lean.Elab.Eqns.UnfoldEqnExtState.mk","doc":""}]}