{"name":"Lean.Parser.Module","instances":[{"typeNames":["Lean.Parser.ModuleParserState"],"name":"Lean.Parser.instInhabitedModuleParserState","className":"Inhabited"}],"imports":["Init","Lean.Message","Lean.Parser.Command"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Module.lean#L131-L133","name":"Lean.Parser.testParseFile","kind":"def","docLink":"./Lean/Parser/Module.html#Lean.Parser.testParseFile","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Module.lean#L124-L129","name":"Lean.Parser.testParseModule","kind":"def","docLink":"./Lean/Parser/Module.html#Lean.Parser.testParseModule","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Module.lean#L111-L121","name":"Lean.Parser.testParseModuleAux.parse","kind":"opaque","docLink":"./Lean/Parser/Module.html#Lean.Parser.testParseModuleAux.parse","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Module.lean#L110-L122","name":"Lean.Parser.testParseModuleAux","kind":"def","docLink":"./Lean/Parser/Module.html#Lean.Parser.testParseModuleAux","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Module.lean#L69-L106","name":"Lean.Parser.parseCommand","kind":"def","docLink":"./Lean/Parser/Module.html#Lean.Parser.parseCommand","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Module.lean#L66-L67","name":"Lean.Parser.topLevelCommandParserFn","kind":"def","docLink":"./Lean/Parser/Module.html#Lean.Parser.topLevelCommandParserFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Module.lean#L56-L57","name":"Lean.Parser.isTerminalCommand","kind":"def","docLink":"./Lean/Parser/Module.html#Lean.Parser.isTerminalCommand","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Module.lean#L39-L50","name":"Lean.Parser.parseHeader","kind":"def","docLink":"./Lean/Parser/Module.html#Lean.Parser.parseHeader","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Module.lean#L33-L33","name":"Lean.Parser.instInhabitedModuleParserState","kind":"instance","docLink":"./Lean/Parser/Module.html#Lean.Parser.instInhabitedModuleParserState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Module.lean#L32-L32","name":"Lean.Parser.ModuleParserState.recovering","kind":"def","docLink":"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState.recovering","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Module.lean#L31-L31","name":"Lean.Parser.ModuleParserState.pos","kind":"def","docLink":"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState.pos","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Module.lean#L30-L33","name":"Lean.Parser.ModuleParserState","kind":"structure","docLink":"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Module.lean#L23-L26","name":"Lean.Parser.Module.updateTokens","kind":"def","docLink":"./Lean/Parser/Module.html#Lean.Parser.Module.updateTokens","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Module.lean#L21-L21","name":"Lean.Parser.Module.module","kind":"def","docLink":"./Lean/Parser/Module.html#Lean.Parser.Module.module","doc":"Parser for a Lean module. We never actually run this parser but instead use the imperative definitions below that\nreturn the same syntax tree structure, but add error recovery. Still, it is helpful to have a `Parser` definition\nfor it in order to auto-generate helpers such as the pretty printer. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Module.lean#L15-L15","name":"Lean.Parser.Module.header","kind":"def","docLink":"./Lean/Parser/Module.html#Lean.Parser.Module.header","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Module.lean#L14-L14","name":"Lean.Parser.Module.import","kind":"def","docLink":"./Lean/Parser/Module.html#Lean.Parser.Module.import","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Module.lean#L13-L13","name":"Lean.Parser.Module.prelude","kind":"def","docLink":"./Lean/Parser/Module.html#Lean.Parser.Module.prelude","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Parser/Module.lean#L1-L1","name":"Lean.Parser.ModuleParserState.mk","kind":"ctor","docLink":"./Lean/Parser/Module.html#Lean.Parser.ModuleParserState.mk","doc":""}]}