{"name":"Lean.Elab.Extra","instances":[],"imports":["Init","Lean.Elab.App","Lean.Elab.BuiltinNotation"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Extra.lean#L488-L503","name":"Lean.Elab.Term.Op.elabDefaultOrNonempty","kind":"def","docLink":"./Lean/Elab/Extra.html#Lean.Elab.Term.Op.elabDefaultOrNonempty","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Extra.lean#L485-L485","name":"Lean.Elab.Term.Op.elabBinRelNoProp","kind":"def","docLink":"./Lean/Elab/Extra.html#Lean.Elab.Term.Op.elabBinRelNoProp","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Extra.lean#L483-L483","name":"Lean.Elab.Term.Op.elabBinRel","kind":"def","docLink":"./Lean/Elab/Extra.html#Lean.Elab.Term.Op.elabBinRel","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Extra.lean#L476-L481","name":"Lean.Elab.Term.Op.elabBinRelCore.toBoolIfNecessary","kind":"def","docLink":"./Lean/Elab/Extra.html#Lean.Elab.Term.Op.elabBinRelCore.toBoolIfNecessary","doc":"If `noProp == true` and `e` has type `Prop`, then coerce it to `Bool`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Extra.lean#L417-L481","name":"Lean.Elab.Term.Op.elabBinRelCore","kind":"def","docLink":"./Lean/Elab/Extra.html#Lean.Elab.Term.Op.elabBinRelCore","doc":"Elaboration functionf for `binrel%` and `binrel_no_prop%` notations.\nWe use the infrastructure for `binop%` to make sure we propagate information between the left and right hand sides\nof a binary relation.\n\nRecall that the `binrel_no_prop%` notation is used for relations such as `==` which do not support `Prop`, but\nwe still want to be able to write `(5 > 2) == (2 > 1)`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Extra.lean#L407-L407","name":"Lean.Elab.Term.Op.elabUnOp","kind":"def","docLink":"./Lean/Elab/Extra.html#Lean.Elab.Term.Op.elabUnOp","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Extra.lean#L404-L404","name":"Lean.Elab.Term.Op.elabBinOpLazy","kind":"def","docLink":"./Lean/Elab/Extra.html#Lean.Elab.Term.Op.elabBinOpLazy","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Extra.lean#L401-L401","name":"Lean.Elab.Term.Op.elabBinOp","kind":"def","docLink":"./Lean/Elab/Extra.html#Lean.Elab.Term.Op.elabBinOp","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Extra.lean#L397-L398","name":"Lean.Elab.Term.Op.elabOp","kind":"def","docLink":"./Lean/Elab/Extra.html#Lean.Elab.Term.Op.elabOp","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Extra.lean#L51-L77","name":"Lean.Elab.Term.elabForIn'","kind":"def","docLink":"./Lean/Elab/Extra.html#Lean.Elab.Term.elabForIn'","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/Elab/Extra.lean#L25-L49","name":"Lean.Elab.Term.elabForIn","kind":"def","docLink":"./Lean/Elab/Extra.html#Lean.Elab.Term.elabForIn","doc":""}]}