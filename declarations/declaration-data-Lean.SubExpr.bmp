{"name":"Lean.SubExpr","instances":[{"typeNames":["Lean.SubExpr.Pos"],"name":"Lean.SubExpr.Pos.instInhabitedPos","className":"Inhabited"},{"typeNames":["Lean.SubExpr.Pos"],"name":"Lean.SubExpr.Pos.instOrdPos","className":"Ord"},{"typeNames":["Eq","Lean.SubExpr.Pos"],"name":"Lean.SubExpr.Pos.instDecidableEqPos","className":"Decidable"},{"typeNames":["Lean.SubExpr.Pos"],"name":"Lean.SubExpr.Pos.instToStringPos","className":"ToString"},{"typeNames":["Lean.SubExpr.Pos"],"name":"Lean.SubExpr.Pos.instEmptyCollectionPos","className":"EmptyCollection"},{"typeNames":["Lean.SubExpr.Pos"],"name":"Lean.SubExpr.Pos.instReprPos","className":"Repr"},{"typeNames":["Lean.SubExpr.Pos"],"name":"Lean.SubExpr.Pos.instToJsonPos","className":"Lean.ToJson"},{"typeNames":["Lean.SubExpr.Pos"],"name":"Lean.SubExpr.Pos.instFromJsonPos","className":"Lean.FromJson"},{"typeNames":["Lean.SubExpr"],"name":"Lean.instInhabitedSubExpr","className":"Inhabited"},{"typeNames":["Lean.FVarId"],"name":"Lean.SubExpr.instToJsonFVarId","className":"Lean.ToJson"},{"typeNames":["Lean.MVarId"],"name":"Lean.SubExpr.instToJsonMVarId","className":"Lean.ToJson"},{"typeNames":["Lean.FVarId"],"name":"Lean.SubExpr.instFromJsonFVarId","className":"Lean.FromJson"},{"typeNames":["Lean.MVarId"],"name":"Lean.SubExpr.instFromJsonMVarId","className":"Lean.FromJson"},{"typeNames":["Lean.SubExpr.GoalLocation"],"name":"Lean.SubExpr.instFromJsonGoalLocation","className":"Lean.FromJson"},{"typeNames":["Lean.SubExpr.GoalLocation"],"name":"Lean.SubExpr.instToJsonGoalLocation","className":"Lean.ToJson"},{"typeNames":["Lean.SubExpr.GoalsLocation"],"name":"Lean.SubExpr.instFromJsonGoalsLocation","className":"Lean.FromJson"},{"typeNames":["Lean.SubExpr.GoalsLocation"],"name":"Lean.SubExpr.instToJsonGoalsLocation","className":"Lean.ToJson"}],"imports":["Init","Lean.Meta.Basic","Lean.Data.Json","Lean.Data.RBMap"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L213-L219","name":"Lean.Expr.traverseAppWithPos","kind":"def","docLink":"./Lean/SubExpr.html#Lean.Expr.traverseAppWithPos","doc":"Same as `Expr.traverseApp` but also includes a\n`SubExpr.Pos` argument for tracking subexpression position. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L206-L206","name":"Lean.SubExpr.instToJsonGoalsLocation","kind":"instance","docLink":"./Lean/SubExpr.html#Lean.SubExpr.instToJsonGoalsLocation","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L206-L206","name":"Lean.SubExpr.instFromJsonGoalsLocation","kind":"instance","docLink":"./Lean/SubExpr.html#Lean.SubExpr.instFromJsonGoalsLocation","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L205-L205","name":"Lean.SubExpr.GoalsLocation.loc","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation.loc","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L204-L204","name":"Lean.SubExpr.GoalsLocation.mvarId","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation.mvarId","doc":"Which goal the location is in. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L202-L206","name":"Lean.SubExpr.GoalsLocation","kind":"structure","docLink":"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation","doc":"A location within a goal state. It identifies a specific goal together with a `GoalLocation`\nwithin it. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L198-L198","name":"Lean.SubExpr.instToJsonGoalLocation","kind":"instance","docLink":"./Lean/SubExpr.html#Lean.SubExpr.instToJsonGoalLocation","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L198-L198","name":"Lean.SubExpr.instFromJsonGoalLocation","kind":"instance","docLink":"./Lean/SubExpr.html#Lean.SubExpr.instFromJsonGoalLocation","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L196-L197","name":"Lean.SubExpr.GoalLocation.target","kind":"ctor","docLink":"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation.target","doc":"A subexpression of the goal type. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L194-L195","name":"Lean.SubExpr.GoalLocation.hypValue","kind":"ctor","docLink":"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation.hypValue","doc":"A subexpression of the value of one of the let-bound hypotheses. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L192-L193","name":"Lean.SubExpr.GoalLocation.hypType","kind":"ctor","docLink":"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation.hypType","doc":"A subexpression of the type of one of the hypotheses. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L190-L191","name":"Lean.SubExpr.GoalLocation.hyp","kind":"ctor","docLink":"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation.hyp","doc":"One of the hypotheses. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L189-L198","name":"Lean.SubExpr.GoalLocation","kind":"inductive","docLink":"./Lean/SubExpr.html#Lean.SubExpr.GoalLocation","doc":"A location within a goal. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L186-L186","name":"Lean.SubExpr.instFromJsonMVarId","kind":"instance","docLink":"./Lean/SubExpr.html#Lean.SubExpr.instFromJsonMVarId","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L185-L185","name":"Lean.SubExpr.instFromJsonFVarId","kind":"instance","docLink":"./Lean/SubExpr.html#Lean.SubExpr.instFromJsonFVarId","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L184-L184","name":"Lean.SubExpr.instToJsonMVarId","kind":"instance","docLink":"./Lean/SubExpr.html#Lean.SubExpr.instToJsonMVarId","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L183-L183","name":"Lean.SubExpr.instToJsonFVarId","kind":"instance","docLink":"./Lean/SubExpr.html#Lean.SubExpr.instToJsonFVarId","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L178-L181","name":"Lean.SubExpr.bindingDomain!","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.bindingDomain!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L173-L176","name":"Lean.SubExpr.bindingBody!","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.bindingBody!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L171-L171","name":"Lean.SubExpr.PosMap","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.PosMap","doc":"Map from subexpr positions to values. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L168-L168","name":"Lean.SubExpr.isRoot","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.isRoot","doc":"Returns true if the selected subexpression is the topmost one."},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L165-L165","name":"Lean.SubExpr.mkRoot","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.mkRoot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L161-L161","name":"Lean.instInhabitedSubExpr","kind":"instance","docLink":"./Lean/SubExpr.html#Lean.instInhabitedSubExpr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L160-L160","name":"Lean.SubExpr.pos","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.pos","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L159-L159","name":"Lean.SubExpr.expr","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.expr","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L158-L161","name":"Lean.SubExpr","kind":"structure","docLink":"./Lean/SubExpr.html#Lean.SubExpr","doc":"An expression and the position of a subexpression within this expression.\n\nSubexpressions are encoded as the current subexpression `e` and a\nposition `p : Pos` denoting `e`'s position with respect to the root expression.\n\nWe use a simple encoding scheme for expression positions `Pos`:\nevery `Expr` constructor has at most 3 direct expression children. Considering an expression's type\nto be one extra child as well, we can injectively map a path of `childIdxs` to a natural number\nby computing the value of the 4-ary representation `1 :: childIdxs`, since n-ary representations\nwithout leading zeros are unique. Note that `pos` is initialized to `1` (case `childIdxs == []`)."},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L144-L144","name":"Lean.SubExpr.Pos.instFromJsonPos","kind":"instance","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.instFromJsonPos","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L143-L143","name":"Lean.SubExpr.Pos.instToJsonPos","kind":"instance","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.instToJsonPos","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L137-L138","name":"Lean.SubExpr.Pos.instReprPos","kind":"instance","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.instReprPos","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L136-L136","name":"Lean.SubExpr.Pos.instEmptyCollectionPos","kind":"instance","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.instEmptyCollectionPos","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L135-L135","name":"Lean.SubExpr.Pos.instToStringPos","kind":"instance","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.instToStringPos","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L134-L134","name":"Lean.SubExpr.Pos.instDecidableEqPos","kind":"instance","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.instDecidableEqPos","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L133-L133","name":"Lean.SubExpr.Pos.instOrdPos","kind":"instance","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.instOrdPos","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L128-L131","name":"Lean.SubExpr.Pos.fromString!","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.fromString!","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L121-L126","name":"Lean.SubExpr.Pos.fromString?","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.fromString?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L109-L113","name":"Lean.SubExpr.Pos.toString","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.toString","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L105-L107","name":"Lean.SubExpr.Pos.pushNthBindingBody","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushNthBindingBody","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L101-L103","name":"Lean.SubExpr.Pos.pushNthBindingDomain","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushNthBindingDomain","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L98-L99","name":"Lean.SubExpr.Pos.pushNaryArg","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushNaryArg","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L95-L96","name":"Lean.SubExpr.Pos.pushNaryFn","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushNaryFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L93-L93","name":"Lean.SubExpr.Pos.pushProj","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushProj","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L92-L92","name":"Lean.SubExpr.Pos.pushAppArg","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushAppArg","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L91-L91","name":"Lean.SubExpr.Pos.pushAppFn","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushAppFn","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L90-L90","name":"Lean.SubExpr.Pos.pushLetBody","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushLetBody","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L89-L89","name":"Lean.SubExpr.Pos.pushLetValue","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushLetValue","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L88-L88","name":"Lean.SubExpr.Pos.pushLetVarType","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushLetVarType","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L87-L87","name":"Lean.SubExpr.Pos.pushBindingBody","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushBindingBody","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L86-L86","name":"Lean.SubExpr.Pos.pushBindingDomain","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.pushBindingDomain","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L83-L84","name":"Lean.SubExpr.Pos.toArray","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.toArray","doc":"Decodes a subexpression `Pos` as a sequence of coordinates `cs : Array Nat`. See `Pos.fromArray` for details.\n`cs[0]` is the coordinate for the root expression. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L78-L79","name":"Lean.SubExpr.Pos.ofArray","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.ofArray","doc":"Creates a subexpression `Pos` from an array of 'coordinates'.\nEach coordinate is a number {0,1,2} expressing which child subexpression should be explored.\nThe first coordinate in the array corresponds to the root of the expression tree.  "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L73-L73","name":"Lean.SubExpr.Pos.append","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.append","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L70-L71","name":"Lean.SubExpr.Pos.all","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.all","doc":"Returns true if `pred` is true for each coordinate in `p`."},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L66-L67","name":"Lean.SubExpr.Pos.depth","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.depth","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L63-L64","name":"Lean.SubExpr.Pos.foldrM","kind":"opaque","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.foldrM","doc":"monad-fold over the position starting at the leaf and finishing at the root. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L58-L60","name":"Lean.SubExpr.Pos.foldlM","kind":"opaque","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.foldlM","doc":"monad-fold over the position starting at the root and heading to the leaf "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L54-L55","name":"Lean.SubExpr.Pos.foldr","kind":"opaque","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.foldr","doc":"Fold over the position starting at the leaf and heading to the root"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L50-L51","name":"Lean.SubExpr.Pos.foldl","kind":"opaque","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.foldl","doc":"Fold over the position starting at the root and heading to the leaf"},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L43-L45","name":"Lean.SubExpr.Pos.push","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.push","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L39-L41","name":"Lean.SubExpr.Pos.tail","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.tail","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L35-L37","name":"Lean.SubExpr.Pos.head","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.head","doc":"The coordinate deepest in the Pos. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L32-L32","name":"Lean.SubExpr.Pos.isRoot","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.isRoot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L30-L30","name":"Lean.SubExpr.Pos.instInhabitedPos","kind":"instance","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.instInhabitedPos","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L28-L28","name":"Lean.SubExpr.Pos.root","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.root","doc":"The Pos representing the root subexpression. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L25-L25","name":"Lean.SubExpr.Pos.asNat","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.asNat","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L23-L23","name":"Lean.SubExpr.Pos.typeCoord","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.typeCoord","doc":"The coordinate `3 = maxChildren - 1` is\nreserved to denote the type of the expression. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L19-L19","name":"Lean.SubExpr.Pos.maxChildren","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos.maxChildren","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L15-L15","name":"Lean.SubExpr.Pos","kind":"def","docLink":"./Lean/SubExpr.html#Lean.SubExpr.Pos","doc":"A position of a subexpression in an expression.\n\nSee docstring of `SubExpr` for more detail."},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L1-L1","name":"Lean.SubExpr.mk","kind":"ctor","docLink":"./Lean/SubExpr.html#Lean.SubExpr.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/3f6c5f17db30c2a2dcaca1b9e9faec4e2cf04b95/src/Lean/SubExpr.lean#L1-L1","name":"Lean.SubExpr.GoalsLocation.mk","kind":"ctor","docLink":"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation.mk","doc":""}]}